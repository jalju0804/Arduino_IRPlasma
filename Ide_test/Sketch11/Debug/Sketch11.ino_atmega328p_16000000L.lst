
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/Sketch11.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 1b 01 	jmp	0x236	; 0x236 <__ctors_end>
       4:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      20:	0c 94 68 01 	jmp	0x2d0	; 0x2d0 <__vector_8>
      24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      40:	0c 94 39 1b 	jmp	0x3672	; 0x3672 <__vector_16>
      44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      48:	0c 94 89 1e 	jmp	0x3d12	; 0x3d12 <__vector_18>
      4c:	0c 94 bb 1e 	jmp	0x3d76	; 0x3d76 <__vector_19>
      50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      54:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      58:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      5c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      60:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__vector_24>
      64:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <IRrecv::decodeDenonOld(decode_results*)+0x66>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__trampolines_end>:
__trampolines_start():
      ea:	00 86       	std	Z+8, r0	; 0x08
      ec:	22 7e       	andi	r18, 0xE2	; 226
      ee:	6d 00       	.word	0x006d	; ????
      f0:	00 02       	muls	r16, r16
      f2:	30 06       	cpc	r3, r16
      f4:	63 00       	.word	0x0063	; ????
      f6:	04 40       	sbci	r16, 0x04	; 4
      f8:	80 52       	subi	r24, 0x20	; 32
      fa:	3f 06       	cpc	r3, r31
      fc:	5b 4f       	sbci	r21, 0xFB	; 251
      fe:	66 6d       	ori	r22, 0xD6	; 214
     100:	7d 27       	eor	r23, r29
     102:	7f 6f       	ori	r23, 0xFF	; 255
     104:	00 00       	nop
     106:	00 48       	sbci	r16, 0x80	; 128
     108:	00 53       	subi	r16, 0x30	; 48
     10a:	5f 77       	andi	r21, 0x7F	; 127
     10c:	7f 39       	cpi	r23, 0x9F	; 159
     10e:	3f 79       	andi	r19, 0x9F	; 159
     110:	71 3d       	cpi	r23, 0xD1	; 209
     112:	76 06       	cpc	r7, r22
     114:	1e 69       	ori	r17, 0x9E	; 158
     116:	38 15       	cp	r19, r8
     118:	37 3f       	cpi	r19, 0xF7	; 247
     11a:	73 67       	ori	r23, 0x73	; 115
     11c:	31 6d       	ori	r19, 0xD1	; 209
     11e:	78 3e       	cpi	r23, 0xE8	; 232
     120:	2a 1d       	adc	r18, r10
     122:	76 6e       	ori	r23, 0xE6	; 230
     124:	5b 39       	cpi	r21, 0x9B	; 155
     126:	64 0f       	add	r22, r20
     128:	00 08       	sbc	r0, r0
     12a:	20 5f       	subi	r18, 0xF0	; 240
     12c:	7c 58       	subi	r23, 0x8C	; 140
     12e:	5e 7b       	andi	r21, 0xBE	; 190
     130:	31 6f       	ori	r19, 0xF1	; 241
     132:	74 04       	cpc	r7, r4
     134:	0e 75       	andi	r16, 0x5E	; 94
     136:	30 55       	subi	r19, 0x50	; 80
     138:	54 5c       	subi	r21, 0xC4	; 196
     13a:	73 67       	ori	r23, 0x73	; 115
     13c:	50 6d       	ori	r21, 0xD0	; 208
     13e:	78 1c       	adc	r7, r8
     140:	2a 1d       	adc	r18, r10
     142:	76 6e       	ori	r23, 0xE6	; 230
     144:	47 46       	sbci	r20, 0x67	; 103
     146:	06 70       	andi	r16, 0x06	; 6
     148:	01 3f       	Address 0x00000148 is out of bounds.
.word	0xffff	; ????

00000149 <TM16XX_NUMBER_FONT>:
     149:	3f 06 5b 4f 66 6d 7d 07 7f 6f 77 7c 39 5e 79 71     ?.[Ofm}..ow|9^yq

00000159 <TM16XX_FONT_DEFAULT>:
     159:	00 86 22 7e 6d 00 00 02 30 06 63 00 04 40 80 52     .."~m...0.c..@.R
     169:	3f 06 5b 4f 66 6d 7d 27 7f 6f 00 00 00 48 00 53     ?.[Ofm}'.o...H.S
     179:	5f 77 7f 39 3f 79 71 3d 76 06 1e 69 38 15 37 3f     _w.9?yq=v..i8.7?
     189:	73 67 31 6d 78 3e 2a 1d 76 6e 5b 39 64 0f 00 08     sg1mx>*.vn[9d...
     199:	20 5f 7c 58 5e 7b 31 6f 74 04 0e 75 30 55 54 5c      _|X^{1ot..u0UT\
     1a9:	73 67 50 6d 78 1c 2a 1d 76 6e 47 46 06 70 01        sgPmx.*.vnGF.p.

000001b8 <TM16XX_NUMBER_FONT>:
     1b8:	3f 06 5b 4f 66 6d 7d 07 7f 6f 77 7c 39 5e 79 71     ?.[Ofm}..ow|9^yq

000001c8 <digital_pin_to_timer_PGM>:
     1c8:	00 00 00 09 00 03 02 00 00 04 05 08 00 00 00 00     ................
     1d8:	00 00 00 00 00 00 00                                .......

000001df <digital_pin_to_bit_mask_PGM>:
     1df:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     1ef:	04 08 10 20 40 80 40                                ... @.@

000001f6 <digital_pin_to_port_PGM>:
     1f6:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     206:	03 03 03 03 02 02 03                                .......

0000020d <port_to_input_PGM>:
     20d:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000217 <port_to_output_PGM>:
     217:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00000221 <port_to_mode_PGM>:
     221:	00 00 00 00 24 00 27 00 2a 00 00                    ....$.'.*..

0000022c <__ctors_start>:
__ctors_start():
     22c:	38 0a       	sbc	r3, r24
     22e:	01 12       	cpse	r0, r17
     230:	61 17       	cp	r22, r17
     232:	0d 19       	sub	r16, r13
     234:	eb 1e       	adc	r14, r27

00000236 <__ctors_end>:
__dtors_end():
     236:	11 24       	eor	r1, r1
     238:	1f be       	out	0x3f, r1	; 63
     23a:	cf ef       	ldi	r28, 0xFF	; 255
     23c:	d8 e0       	ldi	r29, 0x08	; 8
     23e:	de bf       	out	0x3e, r29	; 62
     240:	cd bf       	out	0x3d, r28	; 61

00000242 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     242:	13 e0       	ldi	r17, 0x03	; 3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     244:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     246:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     248:	ea e9       	ldi	r30, 0x9A	; 154
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     24a:	fd e4       	ldi	r31, 0x4D	; 77
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     24c:	02 c0       	rjmp	.+4      	; 0x252 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     24e:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     250:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     252:	ac 34       	cpi	r26, 0x4C	; 76
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     254:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     256:	d9 f7       	brne	.-10     	; 0x24e <__do_copy_data+0xc>

00000258 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     258:	26 e0       	ldi	r18, 0x06	; 6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     25a:	ac e4       	ldi	r26, 0x4C	; 76
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     25c:	b3 e0       	ldi	r27, 0x03	; 3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     25e:	01 c0       	rjmp	.+2      	; 0x262 <.do_clear_bss_start>

00000260 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     260:	1d 92       	st	X+, r1

00000262 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     262:	a3 3b       	cpi	r26, 0xB3	; 179
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     264:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     266:	e1 f7       	brne	.-8      	; 0x260 <.do_clear_bss_loop>

00000268 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     268:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     26a:	cb e1       	ldi	r28, 0x1B	; 27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     26c:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     26e:	04 c0       	rjmp	.+8      	; 0x278 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     270:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     272:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     274:	0e 94 a0 25 	call	0x4b40	; 0x4b40 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     278:	c6 31       	cpi	r28, 0x16	; 22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     27a:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     27c:	c9 f7       	brne	.-14     	; 0x270 <__do_global_ctors+0x8>
     27e:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <main>
     282:	0c 94 cb 26 	jmp	0x4d96	; 0x4d96 <_exit>

00000286 <__bad_interrupt>:
__vector_22():
     286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000028a <setFeedbackLED(bool) [clone .part.1]>:
_Z14setFeedbackLEDb():
C:\Users\dlcks\Documents\Arduino\libraries\IRremote-4.0.0\src/IRReceive.hpp:439
IRData* IRrecv::read() {
    if (irparams.StateForISR != IR_REC_STATE_STOP) {
        return NULL;
    }
    if (decode()) {
        return &decodedIRData;
     28a:	80 91 fc 04 	lds	r24, 0x04FC	; 0x8004fc <FeedbackLEDControl>
     28e:	88 23       	and	r24, r24
     290:	19 f0       	breq	.+6      	; 0x298 <setFeedbackLED(bool) [clone .part.1]+0xe>
     292:	60 e0       	ldi	r22, 0x00	; 0
     294:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>
     298:	2d 98       	cbi	0x05, 5	; 5
     29a:	08 95       	ret

0000029c <timerConfigForReceive()>:
_Z21timerConfigForReceivev():
     29c:	82 e0       	ldi	r24, 0x02	; 2
     29e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
     2a2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     2a6:	82 e3       	ldi	r24, 0x32	; 50
     2a8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     2ac:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
     2b0:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
     2b4:	08 95       	ret

000002b6 <setFeedbackLED(bool)>:
_Z14setFeedbackLEDb():
     2b6:	88 23       	and	r24, r24
     2b8:	49 f0       	breq	.+18     	; 0x2cc <setFeedbackLED(bool)+0x16>
     2ba:	80 91 fc 04 	lds	r24, 0x04FC	; 0x8004fc <FeedbackLEDControl>
     2be:	88 23       	and	r24, r24
     2c0:	19 f0       	breq	.+6      	; 0x2c8 <setFeedbackLED(bool)+0x12>
     2c2:	61 e0       	ldi	r22, 0x01	; 1
     2c4:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>
     2c8:	2d 9a       	sbi	0x05, 5	; 5
     2ca:	08 95       	ret
     2cc:	0c 94 45 01 	jmp	0x28a	; 0x28a <setFeedbackLED(bool) [clone .part.1]>

000002d0 <__vector_8>:
__vector_8():
     2d0:	1f 92       	push	r1
     2d2:	0f 92       	push	r0
     2d4:	0f b6       	in	r0, 0x3f	; 63
     2d6:	0f 92       	push	r0
     2d8:	11 24       	eor	r1, r1
     2da:	2f 93       	push	r18
     2dc:	3f 93       	push	r19
     2de:	4f 93       	push	r20
     2e0:	5f 93       	push	r21
     2e2:	6f 93       	push	r22
     2e4:	7f 93       	push	r23
     2e6:	8f 93       	push	r24
     2e8:	9f 93       	push	r25
     2ea:	af 93       	push	r26
     2ec:	bf 93       	push	r27
     2ee:	cf 93       	push	r28
     2f0:	ef 93       	push	r30
     2f2:	ff 93       	push	r31
     2f4:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <irparams+0x2>
     2f8:	f0 91 f0 03 	lds	r31, 0x03F0	; 0x8003f0 <irparams+0x3>
     2fc:	c0 81       	ld	r28, Z
     2fe:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <irparams+0x4>
     302:	c8 23       	and	r28, r24
     304:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     308:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     30c:	01 96       	adiw	r24, 0x01	; 1
     30e:	49 f0       	breq	.+18     	; 0x322 <__vector_8+0x52>
     310:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     314:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     318:	01 96       	adiw	r24, 0x01	; 1
     31a:	90 93 f3 03 	sts	0x03F3, r25	; 0x8003f3 <irparams+0x6>
     31e:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <irparams+0x5>
     322:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <irparams>
     326:	81 11       	cpse	r24, r1
     328:	1a c0       	rjmp	.+52     	; 0x35e <__vector_8+0x8e>
     32a:	c1 11       	cpse	r28, r1
     32c:	71 c0       	rjmp	.+226    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     32e:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     332:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     336:	85 36       	cpi	r24, 0x65	; 101
     338:	91 05       	cpc	r25, r1
     33a:	08 f4       	brcc	.+2      	; 0x33e <__vector_8+0x6e>
     33c:	42 c0       	rjmp	.+132    	; 0x3c2 <__vector_8+0xf2>
     33e:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <irparams+0x9>
     342:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     346:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     34a:	90 93 f9 03 	sts	0x03F9, r25	; 0x8003f9 <irparams+0xc>
     34e:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <irparams+0xb>
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <irparams+0xa>
     358:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <irparams>
     35c:	32 c0       	rjmp	.+100    	; 0x3c2 <__vector_8+0xf2>
     35e:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <irparams>
     362:	81 30       	cpi	r24, 0x01	; 1
     364:	b1 f4       	brne	.+44     	; 0x392 <__vector_8+0xc2>
     366:	cc 23       	and	r28, r28
     368:	09 f4       	brne	.+2      	; 0x36c <__vector_8+0x9c>
     36a:	52 c0       	rjmp	.+164    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     36c:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     370:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     374:	e0 91 f7 03 	lds	r30, 0x03F7	; 0x8003f7 <irparams+0xa>
     378:	21 e0       	ldi	r18, 0x01	; 1
     37a:	2e 0f       	add	r18, r30
     37c:	20 93 f7 03 	sts	0x03F7, r18	; 0x8003f7 <irparams+0xa>
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	ee 0f       	add	r30, r30
     384:	ff 1f       	adc	r31, r31
     386:	e3 51       	subi	r30, 0x13	; 19
     388:	fc 4f       	sbci	r31, 0xFC	; 252
     38a:	94 87       	std	Z+12, r25	; 0x0c
     38c:	83 87       	std	Z+11, r24	; 0x0b
     38e:	82 e0       	ldi	r24, 0x02	; 2
     390:	e3 cf       	rjmp	.-58     	; 0x358 <__vector_8+0x88>
     392:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <irparams>
     396:	82 30       	cpi	r24, 0x02	; 2
     398:	09 f0       	breq	.+2      	; 0x39c <__vector_8+0xcc>
     39a:	54 c0       	rjmp	.+168    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     39c:	c1 11       	cpse	r28, r1
     39e:	27 c0       	rjmp	.+78     	; 0x3ee <__vector_8+0x11e>
     3a0:	e0 91 f7 03 	lds	r30, 0x03F7	; 0x8003f7 <irparams+0xa>
     3a4:	e0 37       	cpi	r30, 0x70	; 112
     3a6:	90 f0       	brcs	.+36     	; 0x3cc <__vector_8+0xfc>
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <irparams+0x9>
     3ae:	83 e0       	ldi	r24, 0x03	; 3
     3b0:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <irparams>
     3b4:	e0 91 f4 03 	lds	r30, 0x03F4	; 0x8003f4 <irparams+0x7>
     3b8:	f0 91 f5 03 	lds	r31, 0x03F5	; 0x8003f5 <irparams+0x8>
     3bc:	30 97       	sbiw	r30, 0x00	; 0
     3be:	09 f0       	breq	.+2      	; 0x3c2 <__vector_8+0xf2>
     3c0:	09 95       	icall
     3c2:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <irparams+0x6>
     3c6:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <irparams+0x5>
     3ca:	22 c0       	rjmp	.+68     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3cc:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     3d0:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     3d4:	21 e0       	ldi	r18, 0x01	; 1
     3d6:	2e 0f       	add	r18, r30
     3d8:	20 93 f7 03 	sts	0x03F7, r18	; 0x8003f7 <irparams+0xa>
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	ee 0f       	add	r30, r30
     3e0:	ff 1f       	adc	r31, r31
     3e2:	e3 51       	subi	r30, 0x13	; 19
     3e4:	fc 4f       	sbci	r31, 0xFC	; 252
     3e6:	94 87       	std	Z+12, r25	; 0x0c
     3e8:	83 87       	std	Z+11, r24	; 0x0b
     3ea:	81 e0       	ldi	r24, 0x01	; 1
     3ec:	b5 cf       	rjmp	.-150    	; 0x358 <__vector_8+0x88>
     3ee:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <irparams+0x5>
     3f2:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <irparams+0x6>
     3f6:	85 36       	cpi	r24, 0x65	; 101
     3f8:	91 05       	cpc	r25, r1
     3fa:	50 f0       	brcs	.+20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3fc:	83 e0       	ldi	r24, 0x03	; 3
     3fe:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <irparams>
     402:	e0 91 f4 03 	lds	r30, 0x03F4	; 0x8003f4 <irparams+0x7>
     406:	f0 91 f5 03 	lds	r31, 0x03F5	; 0x8003f5 <irparams+0x8>
     40a:	30 97       	sbiw	r30, 0x00	; 0
     40c:	09 f0       	breq	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	09 95       	icall
     410:	80 91 fd 04 	lds	r24, 0x04FD	; 0x8004fd <FeedbackLEDControl+0x1>
     414:	81 30       	cpi	r24, 0x01	; 1
     416:	21 f4       	brne	.+8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     418:	c1 11       	cpse	r28, r1
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <setFeedbackLED(bool)>
     420:	ff 91       	pop	r31
     422:	ef 91       	pop	r30
     424:	cf 91       	pop	r28
     426:	bf 91       	pop	r27
     428:	af 91       	pop	r26
     42a:	9f 91       	pop	r25
     42c:	8f 91       	pop	r24
     42e:	7f 91       	pop	r23
     430:	6f 91       	pop	r22
     432:	5f 91       	pop	r21
     434:	4f 91       	pop	r20
     436:	3f 91       	pop	r19
     438:	2f 91       	pop	r18
     43a:	0f 90       	pop	r0
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	0f 90       	pop	r0
     440:	1f 90       	pop	r1
     442:	18 95       	reti
     444:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <irparams>
     448:	83 30       	cpi	r24, 0x03	; 3
     44a:	11 f7       	brne	.-60     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     44c:	c1 11       	cpse	r28, r1
     44e:	e0 cf       	rjmp	.-64     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     450:	b8 cf       	rjmp	.-144    	; 0x3c2 <__vector_8+0xf2>

00000452 <IRrecv::setReceivePin(unsigned char)>:
_ZN6IRrecv13setReceivePinEh():
     452:	86 2f       	mov	r24, r22
     454:	ad ee       	ldi	r26, 0xED	; 237
     456:	b3 e0       	ldi	r27, 0x03	; 3
     458:	11 96       	adiw	r26, 0x01	; 1
     45a:	6c 93       	st	X, r22
     45c:	11 97       	sbiw	r26, 0x01	; 1
     45e:	26 2f       	mov	r18, r22
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	f9 01       	movw	r30, r18
     464:	e1 52       	subi	r30, 0x21	; 33
     466:	fe 4f       	sbci	r31, 0xFE	; 254
     468:	e4 91       	lpm	r30, Z
     46a:	14 96       	adiw	r26, 0x04	; 4
     46c:	ec 93       	st	X, r30
     46e:	14 97       	sbiw	r26, 0x04	; 4
     470:	f9 01       	movw	r30, r18
     472:	ea 50       	subi	r30, 0x0A	; 10
     474:	fe 4f       	sbci	r31, 0xFE	; 254
     476:	e4 91       	lpm	r30, Z
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	ee 0f       	add	r30, r30
     47c:	ff 1f       	adc	r31, r31
     47e:	e3 5f       	subi	r30, 0xF3	; 243
     480:	fd 4f       	sbci	r31, 0xFD	; 253
     482:	25 91       	lpm	r18, Z+
     484:	34 91       	lpm	r19, Z
     486:	13 96       	adiw	r26, 0x03	; 3
     488:	3c 93       	st	X, r19
     48a:	2e 93       	st	-X, r18
     48c:	12 97       	sbiw	r26, 0x02	; 2
     48e:	60 e0       	ldi	r22, 0x00	; 0
     490:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <pinMode>

00000494 <IRrecv::IRrecv()>:
_ZN6IRrecvC2Ev():
     494:	2d ee       	ldi	r18, 0xED	; 237
     496:	33 e0       	ldi	r19, 0x03	; 3
     498:	fc 01       	movw	r30, r24
     49a:	30 8f       	std	Z+24, r19	; 0x18
     49c:	27 8b       	std	Z+23, r18	; 0x17
     49e:	60 e0       	ldi	r22, 0x00	; 0
     4a0:	0e 94 29 02 	call	0x452	; 0x452 <IRrecv::setReceivePin(unsigned char)>
_Z14setLEDFeedbackhh():
     4a4:	10 92 fc 04 	sts	0x04FC, r1	; 0x8004fc <FeedbackLEDControl>
_ZN6IRrecvC2Ev():
     4a8:	08 95       	ret

000004aa <IRrecv::IRrecv(unsigned char)>:
_ZN6IRrecvC2Eh():
     4aa:	2d ee       	ldi	r18, 0xED	; 237
     4ac:	33 e0       	ldi	r19, 0x03	; 3
     4ae:	fc 01       	movw	r30, r24
     4b0:	30 8f       	std	Z+24, r19	; 0x18
     4b2:	27 8b       	std	Z+23, r18	; 0x17
     4b4:	0e 94 29 02 	call	0x452	; 0x452 <IRrecv::setReceivePin(unsigned char)>
_Z14setLEDFeedbackhh():
     4b8:	10 92 fc 04 	sts	0x04FC, r1	; 0x8004fc <FeedbackLEDControl>
_ZN6IRrecvC2Eh():
     4bc:	08 95       	ret

000004be <IRrecv::resume()>:
_ZN6IRrecv6resumeEv():
     4be:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <irparams>
     4c2:	83 30       	cpi	r24, 0x03	; 3
     4c4:	11 f4       	brne	.+4      	; 0x4ca <IRrecv::resume()+0xc>
     4c6:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <irparams>
     4ca:	08 95       	ret

000004cc <IRrecv::start()>:
_ZN6IRrecv5startEv():
     4cc:	cf 93       	push	r28
     4ce:	df 93       	push	r29
     4d0:	ec 01       	movw	r28, r24
     4d2:	0e 94 4e 01 	call	0x29c	; 0x29c <timerConfigForReceive()>
     4d6:	ce 01       	movw	r24, r28
     4d8:	0e 94 5f 02 	call	0x4be	; 0x4be <IRrecv::resume()>
_Z27timerEnableReceiveInterruptv():
     4dc:	84 e0       	ldi	r24, 0x04	; 4
     4de:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
_ZN6IRrecv5startEv():
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <IRrecv::compare(unsigned int, unsigned int)>:
_ZN6IRrecv7compareEjj():
     4e8:	8a e0       	ldi	r24, 0x0A	; 10
     4ea:	84 9f       	mul	r24, r20
     4ec:	f0 01       	movw	r30, r0
     4ee:	85 9f       	mul	r24, r21
     4f0:	f0 0d       	add	r31, r0
     4f2:	11 24       	eor	r1, r1
     4f4:	9b 01       	movw	r18, r22
     4f6:	93 e0       	ldi	r25, 0x03	; 3
     4f8:	22 0f       	add	r18, r18
     4fa:	33 1f       	adc	r19, r19
     4fc:	9a 95       	dec	r25
     4fe:	e1 f7       	brne	.-8      	; 0x4f8 <IRrecv::compare(unsigned int, unsigned int)+0x10>
     500:	e2 17       	cp	r30, r18
     502:	f3 07       	cpc	r31, r19
     504:	78 f0       	brcs	.+30     	; 0x524 <IRrecv::compare(unsigned int, unsigned int)+0x3c>
     506:	86 9f       	mul	r24, r22
     508:	90 01       	movw	r18, r0
     50a:	87 9f       	mul	r24, r23
     50c:	30 0d       	add	r19, r0
     50e:	11 24       	eor	r1, r1
     510:	83 e0       	ldi	r24, 0x03	; 3
     512:	44 0f       	add	r20, r20
     514:	55 1f       	adc	r21, r21
     516:	8a 95       	dec	r24
     518:	e1 f7       	brne	.-8      	; 0x512 <IRrecv::compare(unsigned int, unsigned int)+0x2a>
     51a:	24 17       	cp	r18, r20
     51c:	35 07       	cpc	r19, r21
     51e:	20 f0       	brcs	.+8      	; 0x528 <IRrecv::compare(unsigned int, unsigned int)+0x40>
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	08 95       	ret
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	08 95       	ret
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	08 95       	ret

0000052c <IRrecv::decodeHashOld(decode_results*)>:
_ZN6IRrecv13decodeHashOldEP14decode_results():
     52c:	8f 92       	push	r8
     52e:	9f 92       	push	r9
     530:	af 92       	push	r10
     532:	bf 92       	push	r11
     534:	cf 92       	push	r12
     536:	df 92       	push	r13
     538:	ef 92       	push	r14
     53a:	ff 92       	push	r15
     53c:	0f 93       	push	r16
     53e:	1f 93       	push	r17
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	fb 01       	movw	r30, r22
     546:	86 84       	ldd	r8, Z+14	; 0x0e
     548:	f5 e0       	ldi	r31, 0x05	; 5
     54a:	f8 15       	cp	r31, r8
     54c:	08 f0       	brcs	.+2      	; 0x550 <IRrecv::decodeHashOld(decode_results*)+0x24>
     54e:	42 c0       	rjmp	.+132    	; 0x5d4 <IRrecv::decodeHashOld(decode_results*)+0xa8>
     550:	eb 01       	movw	r28, r22
     552:	5c 01       	movw	r10, r24
     554:	0c 85       	ldd	r16, Y+12	; 0x0c
     556:	1d 85       	ldd	r17, Y+13	; 0x0d
     558:	0e 5f       	subi	r16, 0xFE	; 254
     55a:	1f 4f       	sbci	r17, 0xFF	; 255
     55c:	83 e0       	ldi	r24, 0x03	; 3
     55e:	98 2e       	mov	r9, r24
     560:	95 ec       	ldi	r25, 0xC5	; 197
     562:	c9 2e       	mov	r12, r25
     564:	9d e9       	ldi	r25, 0x9D	; 157
     566:	d9 2e       	mov	r13, r25
     568:	9c e1       	ldi	r25, 0x1C	; 28
     56a:	e9 2e       	mov	r14, r25
     56c:	91 e8       	ldi	r25, 0x81	; 129
     56e:	f9 2e       	mov	r15, r25
     570:	f8 01       	movw	r30, r16
     572:	44 81       	ldd	r20, Z+4	; 0x04
     574:	55 81       	ldd	r21, Z+5	; 0x05
     576:	0e 5f       	subi	r16, 0xFE	; 254
     578:	1f 4f       	sbci	r17, 0xFF	; 255
     57a:	60 81       	ld	r22, Z
     57c:	71 81       	ldd	r23, Z+1	; 0x01
     57e:	c5 01       	movw	r24, r10
     580:	0e 94 74 02 	call	0x4e8	; 0x4e8 <IRrecv::compare(unsigned int, unsigned int)>
     584:	e8 2f       	mov	r30, r24
     586:	a7 01       	movw	r20, r14
     588:	96 01       	movw	r18, r12
     58a:	63 e9       	ldi	r22, 0x93	; 147
     58c:	71 e0       	ldi	r23, 0x01	; 1
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	0e 94 2c 25 	call	0x4a58	; 0x4a58 <__mulsi3>
     596:	6b 01       	movw	r12, r22
     598:	7c 01       	movw	r14, r24
     59a:	ce 26       	eor	r12, r30
     59c:	93 94       	inc	r9
     59e:	89 10       	cpse	r8, r9
     5a0:	e7 cf       	rjmp	.-50     	; 0x570 <IRrecv::decodeHashOld(decode_results*)+0x44>
     5a2:	cc 82       	std	Y+4, r12	; 0x04
     5a4:	dd 82       	std	Y+5, r13	; 0x05
     5a6:	ee 82       	std	Y+6, r14	; 0x06
     5a8:	ff 82       	std	Y+7, r15	; 0x07
     5aa:	80 e2       	ldi	r24, 0x20	; 32
     5ac:	88 87       	std	Y+8, r24	; 0x08
     5ae:	19 82       	std	Y+1, r1	; 0x01
     5b0:	18 82       	st	Y, r1
     5b2:	f5 01       	movw	r30, r10
     5b4:	11 82       	std	Z+1, r1	; 0x01
     5b6:	10 82       	st	Z, r1
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	ff 90       	pop	r15
     5c4:	ef 90       	pop	r14
     5c6:	df 90       	pop	r13
     5c8:	cf 90       	pop	r12
     5ca:	bf 90       	pop	r11
     5cc:	af 90       	pop	r10
     5ce:	9f 90       	pop	r9
     5d0:	8f 90       	pop	r8
     5d2:	08 95       	ret
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	f1 cf       	rjmp	.-30     	; 0x5ba <IRrecv::decodeHashOld(decode_results*)+0x8e>

000005d8 <IRrecv::checkForRepeatSpaceTicksAndSetFlag(unsigned int)>:
_ZN6IRrecv34checkForRepeatSpaceTicksAndSetFlagEj():
     5d8:	fc 01       	movw	r30, r24
     5da:	a7 89       	ldd	r26, Z+23	; 0x17
     5dc:	b0 8d       	ldd	r27, Z+24	; 0x18
     5de:	1b 96       	adiw	r26, 0x0b	; 11
     5e0:	8d 91       	ld	r24, X+
     5e2:	9c 91       	ld	r25, X
     5e4:	86 17       	cp	r24, r22
     5e6:	97 07       	cpc	r25, r23
     5e8:	18 f4       	brcc	.+6      	; 0x5f0 <IRrecv::checkForRepeatSpaceTicksAndSetFlag(unsigned int)+0x18>
     5ea:	82 85       	ldd	r24, Z+10	; 0x0a
     5ec:	81 60       	ori	r24, 0x01	; 1
     5ee:	82 87       	std	Z+10, r24	; 0x0a
     5f0:	08 95       	ret

000005f2 <matchTicks(unsigned int, unsigned int)>:
_Z10matchTicksjj():
     5f2:	9c 01       	movw	r18, r24
     5f4:	fb 01       	movw	r30, r22
     5f6:	cb 01       	movw	r24, r22
     5f8:	63 e4       	ldi	r22, 0x43	; 67
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     600:	26 17       	cp	r18, r22
     602:	37 07       	cpc	r19, r23
     604:	58 f0       	brcs	.+22     	; 0x61c <matchTicks(unsigned int, unsigned int)+0x2a>
     606:	cf 01       	movw	r24, r30
     608:	68 e2       	ldi	r22, 0x28	; 40
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     610:	6f 5f       	subi	r22, 0xFF	; 255
     612:	7f 4f       	sbci	r23, 0xFF	; 255
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	62 17       	cp	r22, r18
     618:	73 07       	cpc	r23, r19
     61a:	08 f4       	brcc	.+2      	; 0x61e <matchTicks(unsigned int, unsigned int)+0x2c>
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	08 95       	ret

00000620 <IRrecv::getBiphaselevel()>:
_ZN6IRrecv15getBiphaselevelEv():
     620:	bf 92       	push	r11
     622:	cf 92       	push	r12
     624:	df 92       	push	r13
     626:	ef 92       	push	r14
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	dc 01       	movw	r26, r24
     634:	57 96       	adiw	r26, 0x17	; 23
     636:	ed 91       	ld	r30, X+
     638:	fc 91       	ld	r31, X
     63a:	10 91 ec 03 	lds	r17, 0x03EC	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     63e:	82 85       	ldd	r24, Z+10	; 0x0a
     640:	b1 2c       	mov	r11, r1
     642:	18 17       	cp	r17, r24
     644:	b0 f5       	brcc	.+108    	; 0x6b2 <IRrecv::getBiphaselevel()+0x92>
     646:	b1 2f       	mov	r27, r17
     648:	b1 70       	andi	r27, 0x01	; 1
     64a:	bb 2e       	mov	r11, r27
     64c:	00 91 e9 03 	lds	r16, 0x03E9	; 0x8003e9 <sBiphaseUsedTimingIntervals>
     650:	01 11       	cpse	r16, r1
     652:	20 c0       	rjmp	.+64     	; 0x694 <IRrecv::getBiphaselevel()+0x74>
     654:	81 2f       	mov	r24, r17
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	88 0f       	add	r24, r24
     65a:	99 1f       	adc	r25, r25
     65c:	e8 0f       	add	r30, r24
     65e:	f9 1f       	adc	r31, r25
     660:	c3 84       	ldd	r12, Z+11	; 0x0b
     662:	d4 84       	ldd	r13, Z+12	; 0x0c
     664:	cc ee       	ldi	r28, 0xEC	; 236
     666:	df ef       	ldi	r29, 0xFF	; 255
     668:	bb 23       	and	r27, r27
     66a:	11 f0       	breq	.+4      	; 0x670 <IRrecv::getBiphaselevel()+0x50>
     66c:	c4 e1       	ldi	r28, 0x14	; 20
     66e:	d0 e0       	ldi	r29, 0x00	; 0
     670:	e0 90 e7 03 	lds	r14, 0x03E7	; 0x8003e7 <sBiphaseTimeUnit>
     674:	f0 90 e8 03 	lds	r15, 0x03E8	; 0x8003e8 <sBiphaseTimeUnit+0x1>
     678:	ce 0d       	add	r28, r14
     67a:	df 1d       	adc	r29, r15
     67c:	be 01       	movw	r22, r28
     67e:	c6 01       	movw	r24, r12
     680:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <matchTicks(unsigned int, unsigned int)>
     684:	88 23       	and	r24, r24
     686:	01 f1       	breq	.+64     	; 0x6c8 <IRrecv::getBiphaselevel()+0xa8>
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <sBiphaseCurrentTimingIntervals+0x1>
     690:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <sBiphaseCurrentTimingIntervals>
     694:	0f 5f       	subi	r16, 0xFF	; 255
     696:	00 93 e9 03 	sts	0x03E9, r16	; 0x8003e9 <sBiphaseUsedTimingIntervals>
     69a:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <sBiphaseCurrentTimingIntervals>
     69e:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <sBiphaseCurrentTimingIntervals+0x1>
     6a2:	08 17       	cp	r16, r24
     6a4:	19 06       	cpc	r1, r25
     6a6:	28 f0       	brcs	.+10     	; 0x6b2 <IRrecv::getBiphaselevel()+0x92>
     6a8:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <sBiphaseUsedTimingIntervals>
     6ac:	1f 5f       	subi	r17, 0xFF	; 255
     6ae:	10 93 ec 03 	sts	0x03EC, r17	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     6b2:	8b 2d       	mov	r24, r11
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	1f 91       	pop	r17
     6ba:	0f 91       	pop	r16
     6bc:	ff 90       	pop	r15
     6be:	ef 90       	pop	r14
     6c0:	df 90       	pop	r13
     6c2:	cf 90       	pop	r12
     6c4:	bf 90       	pop	r11
     6c6:	08 95       	ret
     6c8:	ce 0d       	add	r28, r14
     6ca:	df 1d       	adc	r29, r15
     6cc:	be 01       	movw	r22, r28
     6ce:	c6 01       	movw	r24, r12
     6d0:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <matchTicks(unsigned int, unsigned int)>
     6d4:	88 23       	and	r24, r24
     6d6:	19 f0       	breq	.+6      	; 0x6de <IRrecv::getBiphaselevel()+0xbe>
     6d8:	82 e0       	ldi	r24, 0x02	; 2
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	d7 cf       	rjmp	.-82     	; 0x68c <IRrecv::getBiphaselevel()+0x6c>
     6de:	b7 01       	movw	r22, r14
     6e0:	6c 0f       	add	r22, r28
     6e2:	7d 1f       	adc	r23, r29
     6e4:	c6 01       	movw	r24, r12
     6e6:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <matchTicks(unsigned int, unsigned int)>
     6ea:	88 23       	and	r24, r24
     6ec:	19 f0       	breq	.+6      	; 0x6f4 <IRrecv::getBiphaselevel()+0xd4>
     6ee:	83 e0       	ldi	r24, 0x03	; 3
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	cc cf       	rjmp	.-104    	; 0x68c <IRrecv::getBiphaselevel()+0x6c>
     6f4:	bb 24       	eor	r11, r11
     6f6:	ba 94       	dec	r11
     6f8:	dc cf       	rjmp	.-72     	; 0x6b2 <IRrecv::getBiphaselevel()+0x92>

000006fa <matchMark(unsigned int, unsigned int)>:
_Z9matchMarkjj():
     6fa:	fc 01       	movw	r30, r24
     6fc:	9b 01       	movw	r18, r22
     6fe:	2c 5e       	subi	r18, 0xEC	; 236
     700:	3f 4f       	sbci	r19, 0xFF	; 255
     702:	c9 01       	movw	r24, r18
     704:	63 e4       	ldi	r22, 0x43	; 67
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     70c:	e6 17       	cp	r30, r22
     70e:	f7 07       	cpc	r31, r23
     710:	58 f0       	brcs	.+22     	; 0x728 <matchMark(unsigned int, unsigned int)+0x2e>
     712:	c9 01       	movw	r24, r18
     714:	68 e2       	ldi	r22, 0x28	; 40
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     71c:	6f 5f       	subi	r22, 0xFF	; 255
     71e:	7f 4f       	sbci	r23, 0xFF	; 255
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	6e 17       	cp	r22, r30
     724:	7f 07       	cpc	r23, r31
     726:	08 f4       	brcc	.+2      	; 0x72a <matchMark(unsigned int, unsigned int)+0x30>
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	08 95       	ret

0000072c <matchSpace(unsigned int, unsigned int)>:
_Z10matchSpacejj():
     72c:	fc 01       	movw	r30, r24
     72e:	9b 01       	movw	r18, r22
     730:	24 51       	subi	r18, 0x14	; 20
     732:	31 09       	sbc	r19, r1
     734:	c9 01       	movw	r24, r18
     736:	63 e4       	ldi	r22, 0x43	; 67
     738:	70 e0       	ldi	r23, 0x00	; 0
     73a:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     73e:	e6 17       	cp	r30, r22
     740:	f7 07       	cpc	r31, r23
     742:	58 f0       	brcs	.+22     	; 0x75a <matchSpace(unsigned int, unsigned int)+0x2e>
     744:	c9 01       	movw	r24, r18
     746:	68 e2       	ldi	r22, 0x28	; 40
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
     74e:	6f 5f       	subi	r22, 0xFF	; 255
     750:	7f 4f       	sbci	r23, 0xFF	; 255
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	6e 17       	cp	r22, r30
     756:	7f 07       	cpc	r23, r31
     758:	08 f4       	brcc	.+2      	; 0x75c <matchSpace(unsigned int, unsigned int)+0x30>
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	08 95       	ret

0000075e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>:
_ZN6IRrecv28decodePulseDistanceWidthDataEhhjjjjb():
     75e:	2f 92       	push	r2
     760:	3f 92       	push	r3
     762:	4f 92       	push	r4
     764:	5f 92       	push	r5
     766:	6f 92       	push	r6
     768:	7f 92       	push	r7
     76a:	8f 92       	push	r8
     76c:	9f 92       	push	r9
     76e:	af 92       	push	r10
     770:	bf 92       	push	r11
     772:	cf 92       	push	r12
     774:	df 92       	push	r13
     776:	ef 92       	push	r14
     778:	ff 92       	push	r15
     77a:	0f 93       	push	r16
     77c:	1f 93       	push	r17
     77e:	cf 93       	push	r28
     780:	df 93       	push	r29
     782:	cd b7       	in	r28, 0x3d	; 61
     784:	de b7       	in	r29, 0x3e	; 62
     786:	28 97       	sbiw	r28, 0x08	; 8
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	9a 83       	std	Y+2, r25	; 0x02
     794:	89 83       	std	Y+1, r24	; 0x01
     796:	36 2e       	mov	r3, r22
     798:	69 01       	movw	r12, r18
     79a:	2a 2c       	mov	r2, r10
     79c:	84 2f       	mov	r24, r20
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	88 0f       	add	r24, r24
     7a2:	99 1f       	adc	r25, r25
     7a4:	0b 96       	adiw	r24, 0x0b	; 11
     7a6:	e9 81       	ldd	r30, Y+1	; 0x01
     7a8:	fa 81       	ldd	r31, Y+2	; 0x02
     7aa:	47 89       	ldd	r20, Z+23	; 0x17
     7ac:	50 8d       	ldd	r21, Z+24	; 0x18
     7ae:	84 0f       	add	r24, r20
     7b0:	95 1f       	adc	r25, r21
     7b2:	98 87       	std	Y+8, r25	; 0x08
     7b4:	8f 83       	std	Y+7, r24	; 0x07
     7b6:	81 2c       	mov	r8, r1
     7b8:	91 2c       	mov	r9, r1
     7ba:	54 01       	movw	r10, r8
     7bc:	83 94       	inc	r8
     7be:	41 2c       	mov	r4, r1
     7c0:	51 2c       	mov	r5, r1
     7c2:	32 01       	movw	r6, r4
     7c4:	33 20       	and	r3, r3
     7c6:	d9 f1       	breq	.+118    	; 0x83e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xe0>
     7c8:	ef 81       	ldd	r30, Y+7	; 0x07
     7ca:	f8 85       	ldd	r31, Y+8	; 0x08
     7cc:	c0 16       	cp	r12, r16
     7ce:	d1 06       	cpc	r13, r17
     7d0:	e9 f4       	brne	.+58     	; 0x80c <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xae>
     7d2:	02 80       	ldd	r0, Z+2	; 0x02
     7d4:	f3 81       	ldd	r31, Z+3	; 0x03
     7d6:	e0 2d       	mov	r30, r0
     7d8:	fc 83       	std	Y+4, r31	; 0x04
     7da:	eb 83       	std	Y+3, r30	; 0x03
     7dc:	21 10       	cpse	r2, r1
     7de:	1d c0       	rjmp	.+58     	; 0x81a <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xbc>
     7e0:	b7 01       	movw	r22, r14
     7e2:	8b 81       	ldd	r24, Y+3	; 0x03
     7e4:	9c 81       	ldd	r25, Y+4	; 0x04
     7e6:	0e 94 96 03 	call	0x72c	; 0x72c <matchSpace(unsigned int, unsigned int)>
     7ea:	88 23       	and	r24, r24
     7ec:	21 f0       	breq	.+8      	; 0x7f6 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x98>
     7ee:	22 20       	and	r2, r2
     7f0:	09 f1       	breq	.+66     	; 0x834 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xd6>
     7f2:	68 94       	set
     7f4:	40 f8       	bld	r4, 0
     7f6:	88 0c       	add	r8, r8
     7f8:	99 1c       	adc	r9, r9
     7fa:	aa 1c       	adc	r10, r10
     7fc:	bb 1c       	adc	r11, r11
     7fe:	3a 94       	dec	r3
     800:	8f 81       	ldd	r24, Y+7	; 0x07
     802:	98 85       	ldd	r25, Y+8	; 0x08
     804:	04 96       	adiw	r24, 0x04	; 4
     806:	98 87       	std	Y+8, r25	; 0x08
     808:	8f 83       	std	Y+7, r24	; 0x07
     80a:	dc cf       	rjmp	.-72     	; 0x7c4 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x66>
     80c:	01 90       	ld	r0, Z+
     80e:	f0 81       	ld	r31, Z
     810:	e0 2d       	mov	r30, r0
     812:	fe 83       	std	Y+6, r31	; 0x06
     814:	ed 83       	std	Y+5, r30	; 0x05
     816:	22 20       	and	r2, r2
     818:	39 f0       	breq	.+14     	; 0x828 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xca>
     81a:	44 0c       	add	r4, r4
     81c:	55 1c       	adc	r5, r5
     81e:	66 1c       	adc	r6, r6
     820:	77 1c       	adc	r7, r7
     822:	c0 16       	cp	r12, r16
     824:	d1 06       	cpc	r13, r17
     826:	e1 f2       	breq	.-72     	; 0x7e0 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x82>
     828:	b6 01       	movw	r22, r12
     82a:	8d 81       	ldd	r24, Y+5	; 0x05
     82c:	9e 81       	ldd	r25, Y+6	; 0x06
     82e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <matchMark(unsigned int, unsigned int)>
     832:	db cf       	rjmp	.-74     	; 0x7ea <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x8c>
     834:	48 28       	or	r4, r8
     836:	59 28       	or	r5, r9
     838:	6a 28       	or	r6, r10
     83a:	7b 28       	or	r7, r11
     83c:	dc cf       	rjmp	.-72     	; 0x7f6 <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x98>
     83e:	e9 81       	ldd	r30, Y+1	; 0x01
     840:	fa 81       	ldd	r31, Y+2	; 0x02
     842:	43 86       	std	Z+11, r4	; 0x0b
     844:	54 86       	std	Z+12, r5	; 0x0c
     846:	65 86       	std	Z+13, r6	; 0x0d
     848:	76 86       	std	Z+14, r7	; 0x0e
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	28 96       	adiw	r28, 0x08	; 8
     84e:	0f b6       	in	r0, 0x3f	; 63
     850:	f8 94       	cli
     852:	de bf       	out	0x3e, r29	; 62
     854:	0f be       	out	0x3f, r0	; 63
     856:	cd bf       	out	0x3d, r28	; 61
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	ff 90       	pop	r15
     862:	ef 90       	pop	r14
     864:	df 90       	pop	r13
     866:	cf 90       	pop	r12
     868:	bf 90       	pop	r11
     86a:	af 90       	pop	r10
     86c:	9f 90       	pop	r9
     86e:	8f 90       	pop	r8
     870:	7f 90       	pop	r7
     872:	6f 90       	pop	r6
     874:	5f 90       	pop	r5
     876:	4f 90       	pop	r4
     878:	3f 90       	pop	r3
     87a:	2f 90       	pop	r2
     87c:	08 95       	ret

0000087e <IRrecv::decodeDenonOld(decode_results*)>:
_ZN6IRrecv14decodeDenonOldEP14decode_results():
     87e:	8f 92       	push	r8
     880:	9f 92       	push	r9
     882:	af 92       	push	r10
     884:	cf 92       	push	r12
     886:	df 92       	push	r13
     888:	ef 92       	push	r14
     88a:	ff 92       	push	r15
     88c:	0f 93       	push	r16
     88e:	1f 93       	push	r17
     890:	cf 93       	push	r28
     892:	df 93       	push	r29
     894:	dc 01       	movw	r26, r24
     896:	57 96       	adiw	r26, 0x17	; 23
     898:	ed 91       	ld	r30, X+
     89a:	fc 91       	ld	r31, X
     89c:	22 85       	ldd	r18, Z+10	; 0x0a
     89e:	22 32       	cpi	r18, 0x22	; 34
     8a0:	69 f0       	breq	.+26     	; 0x8bc <IRrecv::decodeDenonOld(decode_results*)+0x3e>
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	df 91       	pop	r29
     8a6:	cf 91       	pop	r28
     8a8:	1f 91       	pop	r17
     8aa:	0f 91       	pop	r16
     8ac:	ff 90       	pop	r15
     8ae:	ef 90       	pop	r14
     8b0:	df 90       	pop	r13
     8b2:	cf 90       	pop	r12
     8b4:	af 90       	pop	r10
     8b6:	9f 90       	pop	r9
     8b8:	8f 90       	pop	r8
     8ba:	08 95       	ret
     8bc:	db 01       	movw	r26, r22
     8be:	1c 96       	adiw	r26, 0x0c	; 12
     8c0:	ed 91       	ld	r30, X+
     8c2:	fc 91       	ld	r31, X
_Z9matchMarkjj():
     8c4:	22 81       	ldd	r18, Z+2	; 0x02
     8c6:	33 81       	ldd	r19, Z+3	; 0x03
     8c8:	24 50       	subi	r18, 0x04	; 4
     8ca:	31 09       	sbc	r19, r1
     8cc:	25 30       	cpi	r18, 0x05	; 5
     8ce:	31 05       	cpc	r19, r1
     8d0:	40 f7       	brcc	.-48     	; 0x8a2 <IRrecv::decodeDenonOld(decode_results*)+0x24>
_Z10matchSpacejj():
     8d2:	24 81       	ldd	r18, Z+4	; 0x04
     8d4:	35 81       	ldd	r19, Z+5	; 0x05
     8d6:	2b 50       	subi	r18, 0x0B	; 11
     8d8:	31 09       	sbc	r19, r1
     8da:	2a 30       	cpi	r18, 0x0A	; 10
     8dc:	31 05       	cpc	r19, r1
     8de:	08 f7       	brcc	.-62     	; 0x8a2 <IRrecv::decodeDenonOld(decode_results*)+0x24>
     8e0:	4b 01       	movw	r8, r22
     8e2:	ec 01       	movw	r28, r24
_ZN6IRrecv14decodeDenonOldEP14decode_results():
     8e4:	aa 24       	eor	r10, r10
     8e6:	a3 94       	inc	r10
     8e8:	8c e0       	ldi	r24, 0x0C	; 12
     8ea:	c8 2e       	mov	r12, r24
     8ec:	83 e0       	ldi	r24, 0x03	; 3
     8ee:	d8 2e       	mov	r13, r24
     8f0:	9c e1       	ldi	r25, 0x1C	; 28
     8f2:	e9 2e       	mov	r14, r25
     8f4:	97 e0       	ldi	r25, 0x07	; 7
     8f6:	f9 2e       	mov	r15, r25
     8f8:	10 e0       	ldi	r17, 0x00	; 0
     8fa:	00 e0       	ldi	r16, 0x00	; 0
     8fc:	24 e0       	ldi	r18, 0x04	; 4
     8fe:	31 e0       	ldi	r19, 0x01	; 1
     900:	43 e0       	ldi	r20, 0x03	; 3
     902:	6f e0       	ldi	r22, 0x0F	; 15
     904:	ce 01       	movw	r24, r28
     906:	0e 94 af 03 	call	0x75e	; 0x75e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
     90a:	88 23       	and	r24, r24
     90c:	51 f2       	breq	.-108    	; 0x8a2 <IRrecv::decodeDenonOld(decode_results*)+0x24>
     90e:	4b 85       	ldd	r20, Y+11	; 0x0b
     910:	5c 85       	ldd	r21, Y+12	; 0x0c
     912:	6d 85       	ldd	r22, Y+13	; 0x0d
     914:	7e 85       	ldd	r23, Y+14	; 0x0e
     916:	f4 01       	movw	r30, r8
     918:	44 83       	std	Z+4, r20	; 0x04
     91a:	55 83       	std	Z+5, r21	; 0x05
     91c:	66 83       	std	Z+6, r22	; 0x06
     91e:	77 83       	std	Z+7, r23	; 0x07
     920:	9f e0       	ldi	r25, 0x0F	; 15
     922:	90 87       	std	Z+8, r25	; 0x08
     924:	24 e0       	ldi	r18, 0x04	; 4
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	31 83       	std	Z+1, r19	; 0x01
     92a:	20 83       	st	Z, r18
     92c:	39 83       	std	Y+1, r19	; 0x01
     92e:	28 83       	st	Y, r18
     930:	b9 cf       	rjmp	.-142    	; 0x8a4 <IRrecv::decodeDenonOld(decode_results*)+0x26>

00000932 <IRrecv::decodeJVCMSB(decode_results*)>:
_ZN6IRrecv12decodeJVCMSBEP14decode_results():
     932:	8f 92       	push	r8
     934:	9f 92       	push	r9
     936:	af 92       	push	r10
     938:	cf 92       	push	r12
     93a:	df 92       	push	r13
     93c:	ef 92       	push	r14
     93e:	ff 92       	push	r15
     940:	0f 93       	push	r16
     942:	1f 93       	push	r17
     944:	cf 93       	push	r28
     946:	df 93       	push	r29
     948:	ec 01       	movw	r28, r24
     94a:	fb 01       	movw	r30, r22
     94c:	46 85       	ldd	r20, Z+14	; 0x0e
     94e:	64 85       	ldd	r22, Z+12	; 0x0c
     950:	75 85       	ldd	r23, Z+13	; 0x0d
     952:	db 01       	movw	r26, r22
     954:	12 96       	adiw	r26, 0x02	; 2
     956:	2d 91       	ld	r18, X+
     958:	3c 91       	ld	r19, X
     95a:	42 32       	cpi	r20, 0x22	; 34
     95c:	69 f4       	brne	.+26     	; 0x978 <IRrecv::decodeJVCMSB(decode_results*)+0x46>
_Z9matchMarkjj():
     95e:	c9 01       	movw	r24, r18
     960:	08 97       	sbiw	r24, 0x08	; 8
     962:	07 97       	sbiw	r24, 0x07	; 7
     964:	48 f4       	brcc	.+18     	; 0x978 <IRrecv::decodeJVCMSB(decode_results*)+0x46>
_ZN6IRrecv12decodeJVCMSBEP14decode_results():
     966:	cb 01       	movw	r24, r22
     968:	8e 5b       	subi	r24, 0xBE	; 190
     96a:	9f 4f       	sbci	r25, 0xFF	; 255
_Z9matchMarkjj():
     96c:	dc 01       	movw	r26, r24
     96e:	8d 91       	ld	r24, X+
     970:	9c 91       	ld	r25, X
     972:	08 97       	sbiw	r24, 0x08	; 8
     974:	07 97       	sbiw	r24, 0x07	; 7
     976:	90 f0       	brcs	.+36     	; 0x99c <IRrecv::decodeJVCMSB(decode_results*)+0x6a>
     978:	2d 57       	subi	r18, 0x7D	; 125
     97a:	31 09       	sbc	r19, r1
     97c:	27 35       	cpi	r18, 0x57	; 87
     97e:	31 05       	cpc	r19, r1
     980:	e8 f0       	brcs	.+58     	; 0x9bc <IRrecv::decodeJVCMSB(decode_results*)+0x8a>
_ZN6IRrecv12decodeJVCMSBEP14decode_results():
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	cf 90       	pop	r12
     994:	af 90       	pop	r10
     996:	9f 90       	pop	r9
     998:	8f 90       	pop	r8
     99a:	08 95       	ret
     99c:	10 86       	std	Z+8, r1	; 0x08
     99e:	8f ef       	ldi	r24, 0xFF	; 255
     9a0:	9f ef       	ldi	r25, 0xFF	; 255
     9a2:	dc 01       	movw	r26, r24
     9a4:	84 83       	std	Z+4, r24	; 0x04
     9a6:	95 83       	std	Z+5, r25	; 0x05
     9a8:	a6 83       	std	Z+6, r26	; 0x06
     9aa:	b7 83       	std	Z+7, r27	; 0x07
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	8a 87       	std	Y+10, r24	; 0x0a
     9b0:	85 e0       	ldi	r24, 0x05	; 5
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	99 83       	std	Y+1, r25	; 0x01
     9b6:	88 83       	st	Y, r24
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	e4 cf       	rjmp	.-56     	; 0x984 <IRrecv::decodeJVCMSB(decode_results*)+0x52>
     9bc:	44 32       	cpi	r20, 0x24	; 36
     9be:	08 f3       	brcs	.-62     	; 0x982 <IRrecv::decodeJVCMSB(decode_results*)+0x50>
_Z10matchSpacejj():
     9c0:	db 01       	movw	r26, r22
     9c2:	14 96       	adiw	r26, 0x04	; 4
     9c4:	8d 91       	ld	r24, X+
     9c6:	9c 91       	ld	r25, X
     9c8:	ce 97       	sbiw	r24, 0x3e	; 62
     9ca:	8c 97       	sbiw	r24, 0x2c	; 44
     9cc:	d0 f6       	brcc	.-76     	; 0x982 <IRrecv::decodeJVCMSB(decode_results*)+0x50>
     9ce:	4f 01       	movw	r8, r30
_ZN6IRrecv12decodeJVCMSBEP14decode_results():
     9d0:	aa 24       	eor	r10, r10
     9d2:	a3 94       	inc	r10
     9d4:	8e e0       	ldi	r24, 0x0E	; 14
     9d6:	c8 2e       	mov	r12, r24
     9d8:	82 e0       	ldi	r24, 0x02	; 2
     9da:	d8 2e       	mov	r13, r24
     9dc:	9a e2       	ldi	r25, 0x2A	; 42
     9de:	e9 2e       	mov	r14, r25
     9e0:	96 e0       	ldi	r25, 0x06	; 6
     9e2:	f9 2e       	mov	r15, r25
     9e4:	10 e0       	ldi	r17, 0x00	; 0
     9e6:	00 e0       	ldi	r16, 0x00	; 0
     9e8:	2e e0       	ldi	r18, 0x0E	; 14
     9ea:	32 e0       	ldi	r19, 0x02	; 2
     9ec:	43 e0       	ldi	r20, 0x03	; 3
     9ee:	60 e1       	ldi	r22, 0x10	; 16
     9f0:	ce 01       	movw	r24, r28
     9f2:	0e 94 af 03 	call	0x75e	; 0x75e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
     9f6:	88 23       	and	r24, r24
     9f8:	21 f2       	breq	.-120    	; 0x982 <IRrecv::decodeJVCMSB(decode_results*)+0x50>
     9fa:	d4 01       	movw	r26, r8
     9fc:	1c 96       	adiw	r26, 0x0c	; 12
     9fe:	ed 91       	ld	r30, X+
     a00:	fc 91       	ld	r31, X
     a02:	ea 5b       	subi	r30, 0xBA	; 186
     a04:	ff 4f       	sbci	r31, 0xFF	; 255
_Z9matchMarkjj():
     a06:	20 81       	ld	r18, Z
     a08:	31 81       	ldd	r19, Z+1	; 0x01
     a0a:	28 50       	subi	r18, 0x08	; 8
     a0c:	31 09       	sbc	r19, r1
     a0e:	27 30       	cpi	r18, 0x07	; 7
     a10:	31 05       	cpc	r19, r1
     a12:	08 f0       	brcs	.+2      	; 0xa16 <IRrecv::decodeJVCMSB(decode_results*)+0xe4>
     a14:	b6 cf       	rjmp	.-148    	; 0x982 <IRrecv::decodeJVCMSB(decode_results*)+0x50>
_ZN6IRrecv12decodeJVCMSBEP14decode_results():
     a16:	4b 85       	ldd	r20, Y+11	; 0x0b
     a18:	5c 85       	ldd	r21, Y+12	; 0x0c
     a1a:	6d 85       	ldd	r22, Y+13	; 0x0d
     a1c:	7e 85       	ldd	r23, Y+14	; 0x0e
     a1e:	f4 01       	movw	r30, r8
     a20:	44 83       	std	Z+4, r20	; 0x04
     a22:	55 83       	std	Z+5, r21	; 0x05
     a24:	66 83       	std	Z+6, r22	; 0x06
     a26:	77 83       	std	Z+7, r23	; 0x07
     a28:	90 e1       	ldi	r25, 0x10	; 16
     a2a:	90 87       	std	Z+8, r25	; 0x08
     a2c:	25 e0       	ldi	r18, 0x05	; 5
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	31 83       	std	Z+1, r19	; 0x01
     a32:	20 83       	st	Z, r18
     a34:	39 83       	std	Y+1, r19	; 0x01
     a36:	28 83       	st	Y, r18
     a38:	a5 cf       	rjmp	.-182    	; 0x984 <IRrecv::decodeJVCMSB(decode_results*)+0x52>

00000a3a <IRrecv::decodeLGMSB(decode_results*)>:
_ZN6IRrecv11decodeLGMSBEP14decode_results():
     a3a:	8f 92       	push	r8
     a3c:	9f 92       	push	r9
     a3e:	af 92       	push	r10
     a40:	cf 92       	push	r12
     a42:	df 92       	push	r13
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	eb 01       	movw	r28, r22
     a52:	2e 85       	ldd	r18, Y+14	; 0x0e
     a54:	2c 33       	cpi	r18, 0x3C	; 60
     a56:	69 f0       	breq	.+26     	; 0xa72 <IRrecv::decodeLGMSB(decode_results*)+0x38>
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	df 91       	pop	r29
     a5c:	cf 91       	pop	r28
     a5e:	1f 91       	pop	r17
     a60:	0f 91       	pop	r16
     a62:	ff 90       	pop	r15
     a64:	ef 90       	pop	r14
     a66:	df 90       	pop	r13
     a68:	cf 90       	pop	r12
     a6a:	af 90       	pop	r10
     a6c:	9f 90       	pop	r9
     a6e:	8f 90       	pop	r8
     a70:	08 95       	ret
     a72:	ec 85       	ldd	r30, Y+12	; 0x0c
     a74:	fd 85       	ldd	r31, Y+13	; 0x0d
_Z9matchMarkjj():
     a76:	22 81       	ldd	r18, Z+2	; 0x02
     a78:	33 81       	ldd	r19, Z+3	; 0x03
     a7a:	26 58       	subi	r18, 0x86	; 134
     a7c:	31 09       	sbc	r19, r1
     a7e:	2d 35       	cpi	r18, 0x5D	; 93
     a80:	31 05       	cpc	r19, r1
     a82:	50 f7       	brcc	.-44     	; 0xa58 <IRrecv::decodeLGMSB(decode_results*)+0x1e>
_Z10matchSpacejj():
     a84:	24 81       	ldd	r18, Z+4	; 0x04
     a86:	35 81       	ldd	r19, Z+5	; 0x05
     a88:	2e 53       	subi	r18, 0x3E	; 62
     a8a:	31 09       	sbc	r19, r1
     a8c:	2c 32       	cpi	r18, 0x2C	; 44
     a8e:	31 05       	cpc	r19, r1
     a90:	18 f7       	brcc	.-58     	; 0xa58 <IRrecv::decodeLGMSB(decode_results*)+0x1e>
     a92:	4c 01       	movw	r8, r24
_ZN6IRrecv11decodeLGMSBEP14decode_results():
     a94:	aa 24       	eor	r10, r10
     a96:	a3 94       	inc	r10
     a98:	86 e2       	ldi	r24, 0x26	; 38
     a9a:	c8 2e       	mov	r12, r24
     a9c:	82 e0       	ldi	r24, 0x02	; 2
     a9e:	d8 2e       	mov	r13, r24
     aa0:	9c e2       	ldi	r25, 0x2C	; 44
     aa2:	e9 2e       	mov	r14, r25
     aa4:	96 e0       	ldi	r25, 0x06	; 6
     aa6:	f9 2e       	mov	r15, r25
     aa8:	10 e0       	ldi	r17, 0x00	; 0
     aaa:	00 e0       	ldi	r16, 0x00	; 0
     aac:	24 ef       	ldi	r18, 0xF4	; 244
     aae:	31 e0       	ldi	r19, 0x01	; 1
     ab0:	43 e0       	ldi	r20, 0x03	; 3
     ab2:	6c e1       	ldi	r22, 0x1C	; 28
     ab4:	c4 01       	movw	r24, r8
     ab6:	0e 94 af 03 	call	0x75e	; 0x75e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
     aba:	88 23       	and	r24, r24
     abc:	69 f2       	breq	.-102    	; 0xa58 <IRrecv::decodeLGMSB(decode_results*)+0x1e>
     abe:	ec 85       	ldd	r30, Y+12	; 0x0c
     ac0:	fd 85       	ldd	r31, Y+13	; 0x0d
     ac2:	ea 58       	subi	r30, 0x8A	; 138
     ac4:	ff 4f       	sbci	r31, 0xFF	; 255
_Z9matchMarkjj():
     ac6:	20 81       	ld	r18, Z
     ac8:	31 81       	ldd	r19, Z+1	; 0x01
     aca:	27 50       	subi	r18, 0x07	; 7
     acc:	31 09       	sbc	r19, r1
     ace:	28 30       	cpi	r18, 0x08	; 8
     ad0:	31 05       	cpc	r19, r1
     ad2:	10 f6       	brcc	.-124    	; 0xa58 <IRrecv::decodeLGMSB(decode_results*)+0x1e>
_ZN6IRrecv11decodeLGMSBEP14decode_results():
     ad4:	f4 01       	movw	r30, r8
     ad6:	43 85       	ldd	r20, Z+11	; 0x0b
     ad8:	54 85       	ldd	r21, Z+12	; 0x0c
     ada:	65 85       	ldd	r22, Z+13	; 0x0d
     adc:	76 85       	ldd	r23, Z+14	; 0x0e
     ade:	4c 83       	std	Y+4, r20	; 0x04
     ae0:	5d 83       	std	Y+5, r21	; 0x05
     ae2:	6e 83       	std	Y+6, r22	; 0x06
     ae4:	7f 83       	std	Y+7, r23	; 0x07
     ae6:	9c e1       	ldi	r25, 0x1C	; 28
     ae8:	98 87       	std	Y+8, r25	; 0x08
     aea:	26 e0       	ldi	r18, 0x06	; 6
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	39 83       	std	Y+1, r19	; 0x01
     af0:	28 83       	st	Y, r18
     af2:	31 83       	std	Z+1, r19	; 0x01
     af4:	20 83       	st	Z, r18
     af6:	b1 cf       	rjmp	.-158    	; 0xa5a <IRrecv::decodeLGMSB(decode_results*)+0x20>

00000af8 <IRrecv::decodeNECMSB(decode_results*)>:
_ZN6IRrecv12decodeNECMSBEP14decode_results():
     af8:	8f 92       	push	r8
     afa:	9f 92       	push	r9
     afc:	af 92       	push	r10
     afe:	cf 92       	push	r12
     b00:	df 92       	push	r13
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	dc 01       	movw	r26, r24
     b10:	fb 01       	movw	r30, r22
     b12:	c4 85       	ldd	r28, Z+12	; 0x0c
     b14:	d5 85       	ldd	r29, Z+13	; 0x0d
_Z9matchMarkjj():
     b16:	8a 81       	ldd	r24, Y+2	; 0x02
     b18:	9b 81       	ldd	r25, Y+3	; 0x03
     b1a:	86 58       	subi	r24, 0x86	; 134
     b1c:	91 09       	sbc	r25, r1
     b1e:	8c 35       	cpi	r24, 0x5C	; 92
     b20:	91 05       	cpc	r25, r1
     b22:	68 f0       	brcs	.+26     	; 0xb3e <IRrecv::decodeNECMSB(decode_results*)+0x46>
_ZN6IRrecv12decodeNECMSBEP14decode_results():
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	0f 91       	pop	r16
     b2e:	ff 90       	pop	r15
     b30:	ef 90       	pop	r14
     b32:	df 90       	pop	r13
     b34:	cf 90       	pop	r12
     b36:	af 90       	pop	r10
     b38:	9f 90       	pop	r9
     b3a:	8f 90       	pop	r8
     b3c:	08 95       	ret
     b3e:	86 85       	ldd	r24, Z+14	; 0x0e
     b40:	84 30       	cpi	r24, 0x04	; 4
     b42:	f9 f4       	brne	.+62     	; 0xb82 <IRrecv::decodeNECMSB(decode_results*)+0x8a>
_Z10matchSpacejj():
     b44:	8c 81       	ldd	r24, Y+4	; 0x04
     b46:	9d 81       	ldd	r25, Y+5	; 0x05
     b48:	81 97       	sbiw	r24, 0x21	; 33
     b4a:	48 97       	sbiw	r24, 0x18	; 24
     b4c:	58 f7       	brcc	.-42     	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
_Z9matchMarkjj():
     b4e:	8e 81       	ldd	r24, Y+6	; 0x06
     b50:	9f 81       	ldd	r25, Y+7	; 0x07
     b52:	08 97       	sbiw	r24, 0x08	; 8
     b54:	08 97       	sbiw	r24, 0x08	; 8
     b56:	30 f7       	brcc	.-52     	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
_ZN6IRrecv12decodeNECMSBEP14decode_results():
     b58:	10 86       	std	Z+8, r1	; 0x08
     b5a:	4f ef       	ldi	r20, 0xFF	; 255
     b5c:	5f ef       	ldi	r21, 0xFF	; 255
     b5e:	ba 01       	movw	r22, r20
     b60:	44 83       	std	Z+4, r20	; 0x04
     b62:	55 83       	std	Z+5, r21	; 0x05
     b64:	66 83       	std	Z+6, r22	; 0x06
     b66:	77 83       	std	Z+7, r23	; 0x07
     b68:	1a 96       	adiw	r26, 0x0a	; 10
     b6a:	8c 91       	ld	r24, X
     b6c:	1a 97       	sbiw	r26, 0x0a	; 10
     b6e:	81 60       	ori	r24, 0x01	; 1
     b70:	1a 96       	adiw	r26, 0x0a	; 10
     b72:	8c 93       	st	X, r24
     b74:	1a 97       	sbiw	r26, 0x0a	; 10
     b76:	88 e0       	ldi	r24, 0x08	; 8
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	8d 93       	st	X+, r24
     b7c:	9c 93       	st	X, r25
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	d2 cf       	rjmp	.-92     	; 0xb26 <IRrecv::decodeNECMSB(decode_results*)+0x2e>
     b82:	84 34       	cpi	r24, 0x44	; 68
     b84:	79 f6       	brne	.-98     	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
_Z10matchSpacejj():
     b86:	8c 81       	ldd	r24, Y+4	; 0x04
     b88:	9d 81       	ldd	r25, Y+5	; 0x05
     b8a:	82 54       	subi	r24, 0x42	; 66
     b8c:	91 09       	sbc	r25, r1
     b8e:	8f 97       	sbiw	r24, 0x2f	; 47
     b90:	48 f6       	brcc	.-110    	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
     b92:	eb 01       	movw	r28, r22
     b94:	4d 01       	movw	r8, r26
_ZN6IRrecv12decodeNECMSBEP14decode_results():
     b96:	aa 24       	eor	r10, r10
     b98:	a3 94       	inc	r10
     b9a:	80 e3       	ldi	r24, 0x30	; 48
     b9c:	c8 2e       	mov	r12, r24
     b9e:	82 e0       	ldi	r24, 0x02	; 2
     ba0:	d8 2e       	mov	r13, r24
     ba2:	90 e9       	ldi	r25, 0x90	; 144
     ba4:	e9 2e       	mov	r14, r25
     ba6:	96 e0       	ldi	r25, 0x06	; 6
     ba8:	f9 2e       	mov	r15, r25
     baa:	10 e0       	ldi	r17, 0x00	; 0
     bac:	00 e0       	ldi	r16, 0x00	; 0
     bae:	20 e3       	ldi	r18, 0x30	; 48
     bb0:	32 e0       	ldi	r19, 0x02	; 2
     bb2:	43 e0       	ldi	r20, 0x03	; 3
     bb4:	60 e2       	ldi	r22, 0x20	; 32
     bb6:	cd 01       	movw	r24, r26
     bb8:	0e 94 af 03 	call	0x75e	; 0x75e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
     bbc:	88 23       	and	r24, r24
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <IRrecv::decodeNECMSB(decode_results*)+0xca>
     bc0:	b1 cf       	rjmp	.-158    	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
     bc2:	ec 85       	ldd	r30, Y+12	; 0x0c
     bc4:	fd 85       	ldd	r31, Y+13	; 0x0d
     bc6:	ea 57       	subi	r30, 0x7A	; 122
     bc8:	ff 4f       	sbci	r31, 0xFF	; 255
_Z9matchMarkjj():
     bca:	20 81       	ld	r18, Z
     bcc:	31 81       	ldd	r19, Z+1	; 0x01
     bce:	28 50       	subi	r18, 0x08	; 8
     bd0:	31 09       	sbc	r19, r1
     bd2:	28 30       	cpi	r18, 0x08	; 8
     bd4:	31 05       	cpc	r19, r1
     bd6:	08 f0       	brcs	.+2      	; 0xbda <IRrecv::decodeNECMSB(decode_results*)+0xe2>
     bd8:	a5 cf       	rjmp	.-182    	; 0xb24 <IRrecv::decodeNECMSB(decode_results*)+0x2c>
_ZN6IRrecv12decodeNECMSBEP14decode_results():
     bda:	f4 01       	movw	r30, r8
     bdc:	43 85       	ldd	r20, Z+11	; 0x0b
     bde:	54 85       	ldd	r21, Z+12	; 0x0c
     be0:	65 85       	ldd	r22, Z+13	; 0x0d
     be2:	76 85       	ldd	r23, Z+14	; 0x0e
     be4:	4c 83       	std	Y+4, r20	; 0x04
     be6:	5d 83       	std	Y+5, r21	; 0x05
     be8:	6e 83       	std	Y+6, r22	; 0x06
     bea:	7f 83       	std	Y+7, r23	; 0x07
     bec:	90 e2       	ldi	r25, 0x20	; 32
     bee:	98 87       	std	Y+8, r25	; 0x08
     bf0:	28 e0       	ldi	r18, 0x08	; 8
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	39 83       	std	Y+1, r19	; 0x01
     bf6:	28 83       	st	Y, r18
     bf8:	31 83       	std	Z+1, r19	; 0x01
     bfa:	20 83       	st	Z, r18
     bfc:	94 cf       	rjmp	.-216    	; 0xb26 <IRrecv::decodeNECMSB(decode_results*)+0x2e>

00000bfe <IRrecv::decodeRC5()>:
_ZN6IRrecv9decodeRC5Ev():
     bfe:	cf 92       	push	r12
     c00:	df 92       	push	r13
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	ec 01       	movw	r28, r24
_ZN6IRrecv16initBiphaselevelEhj():
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     c16:	89 e7       	ldi	r24, 0x79	; 121
     c18:	93 e0       	ldi	r25, 0x03	; 3
     c1a:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <sBiphaseTimeUnit+0x1>
     c1e:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <sBiphaseTimeUnit>
     c22:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <sBiphaseUsedTimingIntervals>
_ZN6IRrecv9decodeRC5Ev():
     c26:	ce 01       	movw	r24, r28
     c28:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     c2c:	81 30       	cpi	r24, 0x01	; 1
     c2e:	51 f0       	breq	.+20     	; 0xc44 <IRrecv::decodeRC5()+0x46>
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	df 91       	pop	r29
     c34:	cf 91       	pop	r28
     c36:	1f 91       	pop	r17
     c38:	0f 91       	pop	r16
     c3a:	ff 90       	pop	r15
     c3c:	ef 90       	pop	r14
     c3e:	df 90       	pop	r13
     c40:	cf 90       	pop	r12
     c42:	08 95       	ret
     c44:	c1 2c       	mov	r12, r1
     c46:	d1 2c       	mov	r13, r1
     c48:	76 01       	movw	r14, r12
     c4a:	10 e0       	ldi	r17, 0x00	; 0
     c4c:	ef 89       	ldd	r30, Y+23	; 0x17
     c4e:	f8 8d       	ldd	r31, Y+24	; 0x18
     c50:	92 85       	ldd	r25, Z+10	; 0x0a
     c52:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     c56:	89 17       	cp	r24, r25
     c58:	e0 f4       	brcc	.+56     	; 0xc92 <IRrecv::decodeRC5()+0x94>
     c5a:	ce 01       	movw	r24, r28
     c5c:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     c60:	08 2f       	mov	r16, r24
     c62:	ce 01       	movw	r24, r28
     c64:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     c68:	01 11       	cpse	r16, r1
     c6a:	0a c0       	rjmp	.+20     	; 0xc80 <IRrecv::decodeRC5()+0x82>
     c6c:	81 30       	cpi	r24, 0x01	; 1
     c6e:	01 f7       	brne	.-64     	; 0xc30 <IRrecv::decodeRC5()+0x32>
     c70:	cc 0c       	add	r12, r12
     c72:	dd 1c       	adc	r13, r13
     c74:	ee 1c       	adc	r14, r14
     c76:	ff 1c       	adc	r15, r15
     c78:	68 94       	set
     c7a:	c0 f8       	bld	r12, 0
     c7c:	1f 5f       	subi	r17, 0xFF	; 255
     c7e:	e6 cf       	rjmp	.-52     	; 0xc4c <IRrecv::decodeRC5()+0x4e>
     c80:	01 30       	cpi	r16, 0x01	; 1
     c82:	b1 f6       	brne	.-84     	; 0xc30 <IRrecv::decodeRC5()+0x32>
     c84:	81 11       	cpse	r24, r1
     c86:	d4 cf       	rjmp	.-88     	; 0xc30 <IRrecv::decodeRC5()+0x32>
     c88:	cc 0c       	add	r12, r12
     c8a:	dd 1c       	adc	r13, r13
     c8c:	ee 1c       	adc	r14, r14
     c8e:	ff 1c       	adc	r15, r15
     c90:	f5 cf       	rjmp	.-22     	; 0xc7c <IRrecv::decodeRC5()+0x7e>
     c92:	81 2f       	mov	r24, r17
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	99 87       	std	Y+9, r25	; 0x09
     c98:	88 87       	std	Y+8, r24	; 0x08
     c9a:	cb 86       	std	Y+11, r12	; 0x0b
     c9c:	dc 86       	std	Y+12, r13	; 0x0c
     c9e:	ed 86       	std	Y+13, r14	; 0x0d
     ca0:	fe 86       	std	Y+14, r15	; 0x0e
     ca2:	8c 2d       	mov	r24, r12
     ca4:	8f 73       	andi	r24, 0x3F	; 63
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	9d 83       	std	Y+5, r25	; 0x05
     caa:	8c 83       	std	Y+4, r24	; 0x04
     cac:	96 01       	movw	r18, r12
     cae:	46 e0       	ldi	r20, 0x06	; 6
     cb0:	36 95       	lsr	r19
     cb2:	27 95       	ror	r18
     cb4:	4a 95       	dec	r20
     cb6:	e1 f7       	brne	.-8      	; 0xcb0 <IRrecv::decodeRC5()+0xb2>
     cb8:	2f 71       	andi	r18, 0x1F	; 31
     cba:	33 27       	eor	r19, r19
     cbc:	3b 83       	std	Y+3, r19	; 0x03
     cbe:	2a 83       	std	Y+2, r18	; 0x02
     cc0:	96 01       	movw	r18, r12
     cc2:	22 27       	eor	r18, r18
     cc4:	30 71       	andi	r19, 0x10	; 16
     cc6:	23 2b       	or	r18, r19
     cc8:	21 f4       	brne	.+8      	; 0xcd2 <IRrecv::decodeRC5()+0xd4>
     cca:	80 5c       	subi	r24, 0xC0	; 192
     ccc:	9f 4f       	sbci	r25, 0xFF	; 255
     cce:	9d 83       	std	Y+5, r25	; 0x05
     cd0:	8c 83       	std	Y+4, r24	; 0x04
     cd2:	80 e8       	ldi	r24, 0x80	; 128
     cd4:	d3 fc       	sbrc	r13, 3
     cd6:	88 e8       	ldi	r24, 0x88	; 136
     cd8:	8a 87       	std	Y+10, r24	; 0x0a
     cda:	81 e1       	ldi	r24, 0x11	; 17
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	99 83       	std	Y+1, r25	; 0x01
     ce0:	88 83       	st	Y, r24
     ce2:	6f ec       	ldi	r22, 0xCF	; 207
     ce4:	79 e0       	ldi	r23, 0x09	; 9
     ce6:	ce 01       	movw	r24, r28
     ce8:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <IRrecv::checkForRepeatSpaceTicksAndSetFlag(unsigned int)>
     cec:	81 e0       	ldi	r24, 0x01	; 1
     cee:	a1 cf       	rjmp	.-190    	; 0xc32 <IRrecv::decodeRC5()+0x34>

00000cf0 <IRrecv::decodeRC6()>:
_ZN6IRrecv9decodeRC6Ev():
     cf0:	bf 92       	push	r11
     cf2:	cf 92       	push	r12
     cf4:	df 92       	push	r13
     cf6:	ef 92       	push	r14
     cf8:	ff 92       	push	r15
     cfa:	0f 93       	push	r16
     cfc:	1f 93       	push	r17
     cfe:	cf 93       	push	r28
     d00:	df 93       	push	r29
     d02:	dc 01       	movw	r26, r24
     d04:	57 96       	adiw	r26, 0x17	; 23
     d06:	ed 91       	ld	r30, X+
     d08:	fc 91       	ld	r31, X
     d0a:	58 97       	sbiw	r26, 0x18	; 24
_Z9matchMarkjj():
     d0c:	25 85       	ldd	r18, Z+13	; 0x0d
     d0e:	36 85       	ldd	r19, Z+14	; 0x0e
     d10:	28 52       	subi	r18, 0x28	; 40
     d12:	31 09       	sbc	r19, r1
     d14:	2d 31       	cpi	r18, 0x1D	; 29
     d16:	31 05       	cpc	r19, r1
     d18:	58 f0       	brcs	.+22     	; 0xd30 <IRrecv::decodeRC6()+0x40>
_ZN6IRrecv9decodeRC6Ev():
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	df 91       	pop	r29
     d1e:	cf 91       	pop	r28
     d20:	1f 91       	pop	r17
     d22:	0f 91       	pop	r16
     d24:	ff 90       	pop	r15
     d26:	ef 90       	pop	r14
     d28:	df 90       	pop	r13
     d2a:	cf 90       	pop	r12
     d2c:	bf 90       	pop	r11
     d2e:	08 95       	ret
_Z10matchSpacejj():
     d30:	27 85       	ldd	r18, Z+15	; 0x0f
     d32:	30 89       	ldd	r19, Z+16	; 0x10
     d34:	2c 50       	subi	r18, 0x0C	; 12
     d36:	31 09       	sbc	r19, r1
     d38:	2b 30       	cpi	r18, 0x0B	; 11
     d3a:	31 05       	cpc	r19, r1
     d3c:	70 f7       	brcc	.-36     	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     d3e:	ec 01       	movw	r28, r24
_ZN6IRrecv16initBiphaselevelEhj():
     d40:	83 e0       	ldi	r24, 0x03	; 3
     d42:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     d46:	8c eb       	ldi	r24, 0xBC	; 188
     d48:	91 e0       	ldi	r25, 0x01	; 1
     d4a:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <sBiphaseTimeUnit+0x1>
     d4e:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <sBiphaseTimeUnit>
     d52:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <sBiphaseUsedTimingIntervals>
_ZN6IRrecv9decodeRC6Ev():
     d56:	cd 01       	movw	r24, r26
     d58:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     d5c:	81 30       	cpi	r24, 0x01	; 1
     d5e:	e9 f6       	brne	.-70     	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     d60:	ce 01       	movw	r24, r28
     d62:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     d66:	81 11       	cpse	r24, r1
     d68:	d8 cf       	rjmp	.-80     	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     d6a:	c1 2c       	mov	r12, r1
     d6c:	d1 2c       	mov	r13, r1
     d6e:	76 01       	movw	r14, r12
     d70:	10 e0       	ldi	r17, 0x00	; 0
     d72:	ef 89       	ldd	r30, Y+23	; 0x17
     d74:	f8 8d       	ldd	r31, Y+24	; 0x18
     d76:	92 85       	ldd	r25, Z+10	; 0x0a
     d78:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <sBiphaseDecodeRawbuffOffset>
     d7c:	89 17       	cp	r24, r25
     d7e:	70 f5       	brcc	.+92     	; 0xddc <IRrecv::decodeRC6()+0xec>
     d80:	ce 01       	movw	r24, r28
     d82:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     d86:	b8 2e       	mov	r11, r24
     d88:	13 30       	cpi	r17, 0x03	; 3
     d8a:	c1 f0       	breq	.+48     	; 0xdbc <IRrecv::decodeRC6()+0xcc>
     d8c:	ce 01       	movw	r24, r28
     d8e:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     d92:	08 2f       	mov	r16, r24
     d94:	13 30       	cpi	r17, 0x03	; 3
     d96:	29 f4       	brne	.+10     	; 0xda2 <IRrecv::decodeRC6()+0xb2>
     d98:	ce 01       	movw	r24, r28
     d9a:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     d9e:	08 13       	cpse	r16, r24
     da0:	bc cf       	rjmp	.-136    	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     da2:	b1 e0       	ldi	r27, 0x01	; 1
     da4:	bb 12       	cpse	r11, r27
     da6:	10 c0       	rjmp	.+32     	; 0xdc8 <IRrecv::decodeRC6()+0xd8>
     da8:	01 11       	cpse	r16, r1
     daa:	b7 cf       	rjmp	.-146    	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     dac:	cc 0c       	add	r12, r12
     dae:	dd 1c       	adc	r13, r13
     db0:	ee 1c       	adc	r14, r14
     db2:	ff 1c       	adc	r15, r15
     db4:	68 94       	set
     db6:	c0 f8       	bld	r12, 0
     db8:	1f 5f       	subi	r17, 0xFF	; 255
     dba:	db cf       	rjmp	.-74     	; 0xd72 <IRrecv::decodeRC6()+0x82>
     dbc:	ce 01       	movw	r24, r28
     dbe:	0e 94 10 03 	call	0x620	; 0x620 <IRrecv::getBiphaselevel()>
     dc2:	b8 16       	cp	r11, r24
     dc4:	19 f3       	breq	.-58     	; 0xd8c <IRrecv::decodeRC6()+0x9c>
     dc6:	a9 cf       	rjmp	.-174    	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     dc8:	b1 10       	cpse	r11, r1
     dca:	a7 cf       	rjmp	.-178    	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     dcc:	01 30       	cpi	r16, 0x01	; 1
     dce:	09 f0       	breq	.+2      	; 0xdd2 <IRrecv::decodeRC6()+0xe2>
     dd0:	a4 cf       	rjmp	.-184    	; 0xd1a <IRrecv::decodeRC6()+0x2a>
     dd2:	cc 0c       	add	r12, r12
     dd4:	dd 1c       	adc	r13, r13
     dd6:	ee 1c       	adc	r14, r14
     dd8:	ff 1c       	adc	r15, r15
     dda:	ee cf       	rjmp	.-36     	; 0xdb8 <IRrecv::decodeRC6()+0xc8>
     ddc:	81 2f       	mov	r24, r17
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	99 87       	std	Y+9, r25	; 0x09
     de2:	88 87       	std	Y+8, r24	; 0x08
     de4:	cb 86       	std	Y+11, r12	; 0x0b
     de6:	dc 86       	std	Y+12, r13	; 0x0c
     de8:	ed 86       	std	Y+13, r14	; 0x0d
     dea:	fe 86       	std	Y+14, r15	; 0x0e
     dec:	8d 2d       	mov	r24, r13
     dee:	2c 2d       	mov	r18, r12
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	14 32       	cpi	r17, 0x24	; 36
     df4:	e0 f4       	brcc	.+56     	; 0xe2e <IRrecv::decodeRC6()+0x13e>
     df6:	80 e8       	ldi	r24, 0x80	; 128
     df8:	8a 87       	std	Y+10, r24	; 0x0a
     dfa:	3d 83       	std	Y+5, r19	; 0x05
     dfc:	2c 83       	std	Y+4, r18	; 0x04
     dfe:	8d 2d       	mov	r24, r13
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	9b 83       	std	Y+3, r25	; 0x03
     e04:	8a 83       	std	Y+2, r24	; 0x02
     e06:	e0 fe       	sbrs	r14, 0
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <IRrecv::decodeRC6()+0x11e>
     e0a:	88 e8       	ldi	r24, 0x88	; 136
     e0c:	8a 87       	std	Y+10, r24	; 0x0a
     e0e:	15 31       	cpi	r17, 0x15	; 21
     e10:	18 f0       	brcs	.+6      	; 0xe18 <IRrecv::decodeRC6()+0x128>
     e12:	8a 85       	ldd	r24, Y+10	; 0x0a
     e14:	80 61       	ori	r24, 0x10	; 16
     e16:	8a 87       	std	Y+10, r24	; 0x0a
     e18:	63 e7       	ldi	r22, 0x73	; 115
     e1a:	7a e0       	ldi	r23, 0x0A	; 10
     e1c:	ce 01       	movw	r24, r28
     e1e:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <IRrecv::checkForRepeatSpaceTicksAndSetFlag(unsigned int)>
     e22:	82 e1       	ldi	r24, 0x12	; 18
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	99 83       	std	Y+1, r25	; 0x01
     e28:	88 83       	st	Y, r24
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	77 cf       	rjmp	.-274    	; 0xd1c <IRrecv::decodeRC6()+0x2c>
     e2e:	90 e8       	ldi	r25, 0x80	; 128
     e30:	d7 fc       	sbrc	r13, 7
     e32:	98 e8       	ldi	r25, 0x88	; 136
     e34:	9a 87       	std	Y+10, r25	; 0x0a
     e36:	3d 83       	std	Y+5, r19	; 0x05
     e38:	2c 83       	std	Y+4, r18	; 0x04
     e3a:	8f 77       	andi	r24, 0x7F	; 127
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	9b 83       	std	Y+3, r25	; 0x03
     e40:	8a 83       	std	Y+2, r24	; 0x02
     e42:	ea cf       	rjmp	.-44     	; 0xe18 <IRrecv::decodeRC6()+0x128>

00000e44 <IRrecv::decodeSAMSUNG(decode_results*)>:
_ZN6IRrecv13decodeSAMSUNGEP14decode_results():
     e44:	8f 92       	push	r8
     e46:	9f 92       	push	r9
     e48:	af 92       	push	r10
     e4a:	cf 92       	push	r12
     e4c:	df 92       	push	r13
     e4e:	ef 92       	push	r14
     e50:	ff 92       	push	r15
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	ec 01       	movw	r28, r24
     e5c:	fb 01       	movw	r30, r22
     e5e:	a4 85       	ldd	r26, Z+12	; 0x0c
     e60:	b5 85       	ldd	r27, Z+13	; 0x0d
_Z9matchMarkjj():
     e62:	12 96       	adiw	r26, 0x02	; 2
     e64:	8d 91       	ld	r24, X+
     e66:	9c 91       	ld	r25, X
     e68:	13 97       	sbiw	r26, 0x03	; 3
     e6a:	83 54       	subi	r24, 0x43	; 67
     e6c:	91 09       	sbc	r25, r1
     e6e:	8f 97       	sbiw	r24, 0x2f	; 47
     e70:	68 f0       	brcs	.+26     	; 0xe8c <IRrecv::decodeSAMSUNG(decode_results*)+0x48>
_ZN6IRrecv13decodeSAMSUNGEP14decode_results():
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	df 91       	pop	r29
     e76:	cf 91       	pop	r28
     e78:	1f 91       	pop	r17
     e7a:	0f 91       	pop	r16
     e7c:	ff 90       	pop	r15
     e7e:	ef 90       	pop	r14
     e80:	df 90       	pop	r13
     e82:	cf 90       	pop	r12
     e84:	af 90       	pop	r10
     e86:	9f 90       	pop	r9
     e88:	8f 90       	pop	r8
     e8a:	08 95       	ret
     e8c:	86 85       	ldd	r24, Z+14	; 0x0e
     e8e:	84 30       	cpi	r24, 0x04	; 4
     e90:	e9 f4       	brne	.+58     	; 0xecc <IRrecv::decodeSAMSUNG(decode_results*)+0x88>
_Z10matchSpacejj():
     e92:	14 96       	adiw	r26, 0x04	; 4
     e94:	8d 91       	ld	r24, X+
     e96:	9c 91       	ld	r25, X
     e98:	15 97       	sbiw	r26, 0x05	; 5
     e9a:	81 97       	sbiw	r24, 0x21	; 33
     e9c:	48 97       	sbiw	r24, 0x18	; 24
     e9e:	48 f7       	brcc	.-46     	; 0xe72 <IRrecv::decodeSAMSUNG(decode_results*)+0x2e>
_Z9matchMarkjj():
     ea0:	16 96       	adiw	r26, 0x06	; 6
     ea2:	8d 91       	ld	r24, X+
     ea4:	9c 91       	ld	r25, X
     ea6:	08 97       	sbiw	r24, 0x08	; 8
     ea8:	08 97       	sbiw	r24, 0x08	; 8
     eaa:	18 f7       	brcc	.-58     	; 0xe72 <IRrecv::decodeSAMSUNG(decode_results*)+0x2e>
_ZN6IRrecv13decodeSAMSUNGEP14decode_results():
     eac:	10 86       	std	Z+8, r1	; 0x08
     eae:	8f ef       	ldi	r24, 0xFF	; 255
     eb0:	9f ef       	ldi	r25, 0xFF	; 255
     eb2:	dc 01       	movw	r26, r24
     eb4:	84 83       	std	Z+4, r24	; 0x04
     eb6:	95 83       	std	Z+5, r25	; 0x05
     eb8:	a6 83       	std	Z+6, r26	; 0x06
     eba:	b7 83       	std	Z+7, r27	; 0x07
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	8a 87       	std	Y+10, r24	; 0x0a
     ec0:	83 e1       	ldi	r24, 0x13	; 19
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	99 83       	std	Y+1, r25	; 0x01
     ec6:	88 83       	st	Y, r24
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	d4 cf       	rjmp	.-88     	; 0xe74 <IRrecv::decodeSAMSUNG(decode_results*)+0x30>
     ecc:	84 34       	cpi	r24, 0x44	; 68
     ece:	88 f2       	brcs	.-94     	; 0xe72 <IRrecv::decodeSAMSUNG(decode_results*)+0x2e>
_Z10matchSpacejj():
     ed0:	14 96       	adiw	r26, 0x04	; 4
     ed2:	8d 91       	ld	r24, X+
     ed4:	9c 91       	ld	r25, X
     ed6:	82 54       	subi	r24, 0x42	; 66
     ed8:	91 09       	sbc	r25, r1
     eda:	8f 97       	sbiw	r24, 0x2f	; 47
     edc:	50 f6       	brcc	.-108    	; 0xe72 <IRrecv::decodeSAMSUNG(decode_results*)+0x2e>
     ede:	4b 01       	movw	r8, r22
_ZN6IRrecv13decodeSAMSUNGEP14decode_results():
     ee0:	aa 24       	eor	r10, r10
     ee2:	a3 94       	inc	r10
     ee4:	80 e3       	ldi	r24, 0x30	; 48
     ee6:	c8 2e       	mov	r12, r24
     ee8:	82 e0       	ldi	r24, 0x02	; 2
     eea:	d8 2e       	mov	r13, r24
     eec:	90 e9       	ldi	r25, 0x90	; 144
     eee:	e9 2e       	mov	r14, r25
     ef0:	96 e0       	ldi	r25, 0x06	; 6
     ef2:	f9 2e       	mov	r15, r25
     ef4:	10 e0       	ldi	r17, 0x00	; 0
     ef6:	00 e0       	ldi	r16, 0x00	; 0
     ef8:	20 e3       	ldi	r18, 0x30	; 48
     efa:	32 e0       	ldi	r19, 0x02	; 2
     efc:	43 e0       	ldi	r20, 0x03	; 3
     efe:	60 e2       	ldi	r22, 0x20	; 32
     f00:	ce 01       	movw	r24, r28
     f02:	0e 94 af 03 	call	0x75e	; 0x75e <IRrecv::decodePulseDistanceWidthData(unsigned char, unsigned char, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
     f06:	88 23       	and	r24, r24
     f08:	09 f4       	brne	.+2      	; 0xf0c <IRrecv::decodeSAMSUNG(decode_results*)+0xc8>
     f0a:	b3 cf       	rjmp	.-154    	; 0xe72 <IRrecv::decodeSAMSUNG(decode_results*)+0x2e>
     f0c:	4b 85       	ldd	r20, Y+11	; 0x0b
     f0e:	5c 85       	ldd	r21, Y+12	; 0x0c
     f10:	6d 85       	ldd	r22, Y+13	; 0x0d
     f12:	7e 85       	ldd	r23, Y+14	; 0x0e
     f14:	f4 01       	movw	r30, r8
     f16:	44 83       	std	Z+4, r20	; 0x04
     f18:	55 83       	std	Z+5, r21	; 0x05
     f1a:	66 83       	std	Z+6, r22	; 0x06
     f1c:	77 83       	std	Z+7, r23	; 0x07
     f1e:	90 e2       	ldi	r25, 0x20	; 32
     f20:	90 87       	std	Z+8, r25	; 0x08
     f22:	23 e1       	ldi	r18, 0x13	; 19
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	31 83       	std	Z+1, r19	; 0x01
     f28:	20 83       	st	Z, r18
     f2a:	39 83       	std	Y+1, r19	; 0x01
     f2c:	28 83       	st	Y, r18
     f2e:	a2 cf       	rjmp	.-188    	; 0xe74 <IRrecv::decodeSAMSUNG(decode_results*)+0x30>

00000f30 <IRrecv::decodeSonyMSB(decode_results*)>:
_ZN6IRrecv13decodeSonyMSBEP14decode_results():
     f30:	ff 92       	push	r15
     f32:	0f 93       	push	r16
     f34:	1f 93       	push	r17
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	ec 01       	movw	r28, r24
     f3c:	db 01       	movw	r26, r22
     f3e:	1e 96       	adiw	r26, 0x0e	; 14
     f40:	2c 91       	ld	r18, X
     f42:	1e 97       	sbiw	r26, 0x0e	; 14
     f44:	2a 31       	cpi	r18, 0x1A	; 26
     f46:	08 f4       	brcc	.+2      	; 0xf4a <IRrecv::decodeSonyMSB(decode_results*)+0x1a>
     f48:	3f c0       	rjmp	.+126    	; 0xfc8 <IRrecv::decodeSonyMSB(decode_results*)+0x98>
     f4a:	1c 96       	adiw	r26, 0x0c	; 12
     f4c:	ed 91       	ld	r30, X+
     f4e:	fc 91       	ld	r31, X
     f50:	1d 97       	sbiw	r26, 0x0d	; 13
     f52:	80 81       	ld	r24, Z
     f54:	91 81       	ldd	r25, Z+1	; 0x01
     f56:	0a 97       	sbiw	r24, 0x0a	; 10
     f58:	c8 f4       	brcc	.+50     	; 0xf8c <IRrecv::decodeSonyMSB(decode_results*)+0x5c>
     f5a:	18 96       	adiw	r26, 0x08	; 8
     f5c:	1c 92       	st	X, r1
     f5e:	18 97       	sbiw	r26, 0x08	; 8
     f60:	4f ef       	ldi	r20, 0xFF	; 255
     f62:	5f ef       	ldi	r21, 0xFF	; 255
     f64:	ba 01       	movw	r22, r20
     f66:	14 96       	adiw	r26, 0x04	; 4
     f68:	4d 93       	st	X+, r20
     f6a:	5d 93       	st	X+, r21
     f6c:	6d 93       	st	X+, r22
     f6e:	7c 93       	st	X, r23
     f70:	17 97       	sbiw	r26, 0x07	; 7
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	8a 87       	std	Y+10, r24	; 0x0a
     f76:	87 e1       	ldi	r24, 0x17	; 23
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	99 83       	std	Y+1, r25	; 0x01
     f7c:	88 83       	st	Y, r24
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	1f 91       	pop	r17
     f86:	0f 91       	pop	r16
     f88:	ff 90       	pop	r15
     f8a:	08 95       	ret
_Z9matchMarkjj():
     f8c:	82 81       	ldd	r24, Z+2	; 0x02
     f8e:	93 81       	ldd	r25, Z+3	; 0x03
     f90:	84 97       	sbiw	r24, 0x24	; 36
     f92:	4a 97       	sbiw	r24, 0x1a	; 26
     f94:	c8 f4       	brcc	.+50     	; 0xfc8 <IRrecv::decodeSonyMSB(decode_results*)+0x98>
     f96:	83 e0       	ldi	r24, 0x03	; 3
     f98:	90 e0       	ldi	r25, 0x00	; 0
_ZN6IRrecv13decodeSonyMSBEP14decode_results():
     f9a:	f1 2c       	mov	r15, r1
     f9c:	40 e0       	ldi	r20, 0x00	; 0
     f9e:	50 e0       	ldi	r21, 0x00	; 0
     fa0:	ba 01       	movw	r22, r20
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	82 17       	cp	r24, r18
     fa6:	93 07       	cpc	r25, r19
     fa8:	28 f5       	brcc	.+74     	; 0xff4 <IRrecv::decodeSonyMSB(decode_results*)+0xc4>
_Z10matchSpacejj():
     faa:	04 81       	ldd	r16, Z+4	; 0x04
     fac:	15 81       	ldd	r17, Z+5	; 0x05
     fae:	08 50       	subi	r16, 0x08	; 8
     fb0:	11 09       	sbc	r17, r1
     fb2:	08 30       	cpi	r16, 0x08	; 8
     fb4:	11 05       	cpc	r17, r1
     fb6:	40 f4       	brcc	.+16     	; 0xfc8 <IRrecv::decodeSonyMSB(decode_results*)+0x98>
_ZN6IRrecv13decodeSonyMSBEP14decode_results():
     fb8:	06 81       	ldd	r16, Z+6	; 0x06
     fba:	17 81       	ldd	r17, Z+7	; 0x07
_Z9matchMarkjj():
     fbc:	02 31       	cpi	r16, 0x12	; 18
     fbe:	11 05       	cpc	r17, r1
     fc0:	28 f0       	brcs	.+10     	; 0xfcc <IRrecv::decodeSonyMSB(decode_results*)+0x9c>
     fc2:	00 32       	cpi	r16, 0x20	; 32
     fc4:	11 05       	cpc	r17, r1
     fc6:	68 f0       	brcs	.+26     	; 0xfe2 <IRrecv::decodeSonyMSB(decode_results*)+0xb2>
_ZN6IRrecv13decodeSonyMSBEP14decode_results():
     fc8:	80 e0       	ldi	r24, 0x00	; 0
     fca:	da cf       	rjmp	.-76     	; 0xf80 <IRrecv::decodeSonyMSB(decode_results*)+0x50>
_Z9matchMarkjj():
     fcc:	09 30       	cpi	r16, 0x09	; 9
     fce:	11 05       	cpc	r17, r1
     fd0:	d8 f3       	brcs	.-10     	; 0xfc8 <IRrecv::decodeSonyMSB(decode_results*)+0x98>
     fd2:	01 31       	cpi	r16, 0x11	; 17
     fd4:	11 05       	cpc	r17, r1
     fd6:	c0 f7       	brcc	.-16     	; 0xfc8 <IRrecv::decodeSonyMSB(decode_results*)+0x98>
_ZN6IRrecv13decodeSonyMSBEP14decode_results():
     fd8:	44 0f       	add	r20, r20
     fda:	55 1f       	adc	r21, r21
     fdc:	66 1f       	adc	r22, r22
     fde:	77 1f       	adc	r23, r23
     fe0:	05 c0       	rjmp	.+10     	; 0xfec <IRrecv::decodeSonyMSB(decode_results*)+0xbc>
     fe2:	44 0f       	add	r20, r20
     fe4:	55 1f       	adc	r21, r21
     fe6:	66 1f       	adc	r22, r22
     fe8:	77 1f       	adc	r23, r23
     fea:	41 60       	ori	r20, 0x01	; 1
     fec:	f3 94       	inc	r15
     fee:	02 96       	adiw	r24, 0x02	; 2
     ff0:	34 96       	adiw	r30, 0x04	; 4
     ff2:	d8 cf       	rjmp	.-80     	; 0xfa4 <IRrecv::decodeSonyMSB(decode_results*)+0x74>
     ff4:	18 96       	adiw	r26, 0x08	; 8
     ff6:	fc 92       	st	X, r15
     ff8:	18 97       	sbiw	r26, 0x08	; 8
     ffa:	14 96       	adiw	r26, 0x04	; 4
     ffc:	4d 93       	st	X+, r20
     ffe:	5d 93       	st	X+, r21
    1000:	6d 93       	st	X+, r22
    1002:	7c 93       	st	X, r23
    1004:	17 97       	sbiw	r26, 0x07	; 7
    1006:	87 e1       	ldi	r24, 0x17	; 23
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	8d 93       	st	X+, r24
    100c:	9c 93       	st	X, r25
    100e:	b5 cf       	rjmp	.-150    	; 0xf7a <IRrecv::decodeSonyMSB(decode_results*)+0x4a>

00001010 <IRrecv::decode(decode_results*)>:
_ZN6IRrecv6decodeEP14decode_results():
    1010:	ff 92       	push	r15
    1012:	0f 93       	push	r16
    1014:	1f 93       	push	r17
    1016:	cf 93       	push	r28
    1018:	df 93       	push	r29
    101a:	20 91 ed 03 	lds	r18, 0x03ED	; 0x8003ed <irparams>
    101e:	f1 2c       	mov	r15, r1
    1020:	23 30       	cpi	r18, 0x03	; 3
    1022:	81 f5       	brne	.+96     	; 0x1084 <IRrecv::decode(decode_results*)+0x74>
    1024:	eb 01       	movw	r28, r22
    1026:	8c 01       	movw	r16, r24
    1028:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <IRrecv::decode(decode_results*)::sDeprecationMessageSent>
    102c:	81 11       	cpse	r24, r1
    102e:	09 c0       	rjmp	.+18     	; 0x1042 <IRrecv::decode(decode_results*)+0x32>
    1030:	6e e0       	ldi	r22, 0x0E	; 14
    1032:	71 e0       	ldi	r23, 0x01	; 1
    1034:	82 e1       	ldi	r24, 0x12	; 18
    1036:	96 e0       	ldi	r25, 0x06	; 6
    1038:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <IRrecv::decode(decode_results*)::sDeprecationMessageSent>
    1042:	88 ef       	ldi	r24, 0xF8	; 248
    1044:	93 e0       	ldi	r25, 0x03	; 3
    1046:	9d 87       	std	Y+13, r25	; 0x0d
    1048:	8c 87       	std	Y+12, r24	; 0x0c
    104a:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <irparams+0xa>
    104e:	8e 87       	std	Y+14, r24	; 0x0e
    1050:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <irparams+0x9>
    1054:	88 23       	and	r24, r24
    1056:	21 f0       	breq	.+8      	; 0x1060 <IRrecv::decode(decode_results*)+0x50>
    1058:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <irparams+0x9>
    105c:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <irparams+0xa>
    1060:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <irparams+0x9>
    1064:	8f 87       	std	Y+15, r24	; 0x0f
    1066:	1c 82       	std	Y+4, r1	; 0x04
    1068:	1d 82       	std	Y+5, r1	; 0x05
    106a:	1e 82       	std	Y+6, r1	; 0x06
    106c:	1f 82       	std	Y+7, r1	; 0x07
    106e:	80 e8       	ldi	r24, 0x80	; 128
    1070:	f8 01       	movw	r30, r16
    1072:	82 87       	std	Z+10, r24	; 0x0a
    1074:	be 01       	movw	r22, r28
    1076:	c8 01       	movw	r24, r16
    1078:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <IRrecv::decodeNECMSB(decode_results*)>
    107c:	88 23       	and	r24, r24
    107e:	49 f0       	breq	.+18     	; 0x1092 <IRrecv::decode(decode_results*)+0x82>
    1080:	ff 24       	eor	r15, r15
    1082:	f3 94       	inc	r15
    1084:	8f 2d       	mov	r24, r15
    1086:	df 91       	pop	r29
    1088:	cf 91       	pop	r28
    108a:	1f 91       	pop	r17
    108c:	0f 91       	pop	r16
    108e:	ff 90       	pop	r15
    1090:	08 95       	ret
    1092:	be 01       	movw	r22, r28
    1094:	c8 01       	movw	r24, r16
    1096:	0e 94 98 07 	call	0xf30	; 0xf30 <IRrecv::decodeSonyMSB(decode_results*)>
    109a:	81 11       	cpse	r24, r1
    109c:	f1 cf       	rjmp	.-30     	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    109e:	c8 01       	movw	r24, r16
    10a0:	0e 94 ff 05 	call	0xbfe	; 0xbfe <IRrecv::decodeRC5()>
    10a4:	f8 2e       	mov	r15, r24
    10a6:	88 23       	and	r24, r24
    10a8:	81 f0       	breq	.+32     	; 0x10ca <IRrecv::decode(decode_results*)+0xba>
    10aa:	f8 01       	movw	r30, r16
    10ac:	80 85       	ldd	r24, Z+8	; 0x08
    10ae:	88 87       	std	Y+8, r24	; 0x08
    10b0:	83 85       	ldd	r24, Z+11	; 0x0b
    10b2:	94 85       	ldd	r25, Z+12	; 0x0c
    10b4:	a5 85       	ldd	r26, Z+13	; 0x0d
    10b6:	b6 85       	ldd	r27, Z+14	; 0x0e
    10b8:	8c 83       	std	Y+4, r24	; 0x04
    10ba:	9d 83       	std	Y+5, r25	; 0x05
    10bc:	ae 83       	std	Y+6, r26	; 0x06
    10be:	bf 83       	std	Y+7, r27	; 0x07
    10c0:	81 e1       	ldi	r24, 0x11	; 17
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	99 83       	std	Y+1, r25	; 0x01
    10c6:	88 83       	st	Y, r24
    10c8:	dd cf       	rjmp	.-70     	; 0x1084 <IRrecv::decode(decode_results*)+0x74>
    10ca:	c8 01       	movw	r24, r16
    10cc:	0e 94 78 06 	call	0xcf0	; 0xcf0 <IRrecv::decodeRC6()>
    10d0:	f8 2e       	mov	r15, r24
    10d2:	88 23       	and	r24, r24
    10d4:	71 f0       	breq	.+28     	; 0x10f2 <IRrecv::decode(decode_results*)+0xe2>
    10d6:	f8 01       	movw	r30, r16
    10d8:	80 85       	ldd	r24, Z+8	; 0x08
    10da:	88 87       	std	Y+8, r24	; 0x08
    10dc:	83 85       	ldd	r24, Z+11	; 0x0b
    10de:	94 85       	ldd	r25, Z+12	; 0x0c
    10e0:	a5 85       	ldd	r26, Z+13	; 0x0d
    10e2:	b6 85       	ldd	r27, Z+14	; 0x0e
    10e4:	8c 83       	std	Y+4, r24	; 0x04
    10e6:	9d 83       	std	Y+5, r25	; 0x05
    10e8:	ae 83       	std	Y+6, r26	; 0x06
    10ea:	bf 83       	std	Y+7, r27	; 0x07
    10ec:	82 e1       	ldi	r24, 0x12	; 18
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	e9 cf       	rjmp	.-46     	; 0x10c4 <IRrecv::decode(decode_results*)+0xb4>
    10f2:	be 01       	movw	r22, r28
    10f4:	c8 01       	movw	r24, r16
    10f6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <IRrecv::decodeLGMSB(decode_results*)>
    10fa:	81 11       	cpse	r24, r1
    10fc:	c1 cf       	rjmp	.-126    	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    10fe:	be 01       	movw	r22, r28
    1100:	c8 01       	movw	r24, r16
    1102:	0e 94 99 04 	call	0x932	; 0x932 <IRrecv::decodeJVCMSB(decode_results*)>
    1106:	81 11       	cpse	r24, r1
    1108:	bb cf       	rjmp	.-138    	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    110a:	be 01       	movw	r22, r28
    110c:	c8 01       	movw	r24, r16
    110e:	0e 94 22 07 	call	0xe44	; 0xe44 <IRrecv::decodeSAMSUNG(decode_results*)>
    1112:	81 11       	cpse	r24, r1
    1114:	b5 cf       	rjmp	.-150    	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    1116:	be 01       	movw	r22, r28
    1118:	c8 01       	movw	r24, r16
    111a:	0e 94 3f 04 	call	0x87e	; 0x87e <IRrecv::decodeDenonOld(decode_results*)>
    111e:	81 11       	cpse	r24, r1
    1120:	af cf       	rjmp	.-162    	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    1122:	be 01       	movw	r22, r28
    1124:	c8 01       	movw	r24, r16
    1126:	0e 94 96 02 	call	0x52c	; 0x52c <IRrecv::decodeHashOld(decode_results*)>
    112a:	f8 2e       	mov	r15, r24
    112c:	81 11       	cpse	r24, r1
    112e:	a8 cf       	rjmp	.-176    	; 0x1080 <IRrecv::decode(decode_results*)+0x70>
    1130:	c8 01       	movw	r24, r16
    1132:	0e 94 5f 02 	call	0x4be	; 0x4be <IRrecv::resume()>
    1136:	a6 cf       	rjmp	.-180    	; 0x1084 <IRrecv::decode(decode_results*)+0x74>

00001138 <Read_dust_value()>:
_Z15Read_dust_valuev():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:40
    1138:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <dust_cnt>
    113c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <dust_cnt+0x1>
    1140:	01 96       	adiw	r24, 0x01	; 1
    1142:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <dust_cnt+0x1>
    1146:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <dust_cnt>
    114a:	84 3c       	cpi	r24, 0xC4	; 196
    114c:	99 40       	sbci	r25, 0x09	; 9
    114e:	09 f0       	breq	.+2      	; 0x1152 <Read_dust_value()+0x1a>
    1150:	46 c0       	rjmp	.+140    	; 0x11de <Read_dust_value()+0xa6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:42
    1152:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <dust_cnt+0x1>
    1156:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <dust_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:43
    115a:	80 e8       	ldi	r24, 0x80	; 128
    115c:	93 e0       	ldi	r25, 0x03	; 3
    115e:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <AM1008W_K_I2C::read_data_command()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:44
    1162:	81 11       	cpse	r24, r1
    1164:	3c c0       	rjmp	.+120    	; 0x11de <Read_dust_value()+0xa6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:46
    1166:	80 e8       	ldi	r24, 0x80	; 128
    1168:	93 e0       	ldi	r25, 0x03	; 3
    116a:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <AM1008W_K_I2C::get_pm1p0()>
    116e:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <p1dot0+0x1>
    1172:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <p1dot0>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:47
    1176:	80 e8       	ldi	r24, 0x80	; 128
    1178:	93 e0       	ldi	r25, 0x03	; 3
    117a:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <AM1008W_K_I2C::get_pm2p5()>
    117e:	90 93 d1 03 	sts	0x03D1, r25	; 0x8003d1 <p2dot5+0x1>
    1182:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <p2dot5>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:48
    1186:	80 e8       	ldi	r24, 0x80	; 128
    1188:	93 e0       	ldi	r25, 0x03	; 3
    118a:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <AM1008W_K_I2C::get_pm10()>
    118e:	90 93 cf 03 	sts	0x03CF, r25	; 0x8003cf <p10+0x1>
    1192:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <p10>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:49
    1196:	80 e8       	ldi	r24, 0x80	; 128
    1198:	93 e0       	ldi	r25, 0x03	; 3
    119a:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <AM1008W_K_I2C::get_humidity()>
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e2       	ldi	r20, 0x20	; 32
    11a4:	51 e4       	ldi	r21, 0x41	; 65
    11a6:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    11aa:	60 93 ca 03 	sts	0x03CA, r22	; 0x8003ca <humidity>
    11ae:	70 93 cb 03 	sts	0x03CB, r23	; 0x8003cb <humidity+0x1>
    11b2:	80 93 cc 03 	sts	0x03CC, r24	; 0x8003cc <humidity+0x2>
    11b6:	90 93 cd 03 	sts	0x03CD, r25	; 0x8003cd <humidity+0x3>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:50
    11ba:	80 e8       	ldi	r24, 0x80	; 128
    11bc:	93 e0       	ldi	r25, 0x03	; 3
    11be:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <AM1008W_K_I2C::get_temperature()>
    11c2:	20 e0       	ldi	r18, 0x00	; 0
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	40 e2       	ldi	r20, 0x20	; 32
    11c8:	51 e4       	ldi	r21, 0x41	; 65
    11ca:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    11ce:	60 93 c6 03 	sts	0x03C6, r22	; 0x8003c6 <temperature>
    11d2:	70 93 c7 03 	sts	0x03C7, r23	; 0x8003c7 <temperature+0x1>
    11d6:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <temperature+0x2>
    11da:	90 93 c9 03 	sts	0x03C9, r25	; 0x8003c9 <temperature+0x3>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:53
    11de:	08 95       	ret

000011e0 <WindDirectionControl()>:
_Z20WindDirectionControlv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:239
    11e0:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <wind_flag>
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	99 f0       	breq	.+38     	; 0x120e <WindDirectionControl()+0x2e>
    11e8:	28 f0       	brcs	.+10     	; 0x11f4 <WindDirectionControl()+0x14>
    11ea:	82 30       	cpi	r24, 0x02	; 2
    11ec:	d9 f0       	breq	.+54     	; 0x1224 <WindDirectionControl()+0x44>
    11ee:	83 30       	cpi	r24, 0x03	; 3
    11f0:	01 f1       	breq	.+64     	; 0x1232 <WindDirectionControl()+0x52>
    11f2:	08 95       	ret
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:241
    11f4:	60 e0       	ldi	r22, 0x00	; 0
    11f6:	80 e1       	ldi	r24, 0x10	; 16
    11f8:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:242
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	8f e0       	ldi	r24, 0x0F	; 15
    1200:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:243
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:257
    1208:	89 e0       	ldi	r24, 0x09	; 9
    120a:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <analogWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:246
    120e:	61 e0       	ldi	r22, 0x01	; 1
    1210:	80 e1       	ldi	r24, 0x10	; 16
    1212:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:247
    1216:	61 e0       	ldi	r22, 0x01	; 1
    1218:	8f e0       	ldi	r24, 0x0F	; 15
    121a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:248
    121e:	6c ed       	ldi	r22, 0xDC	; 220
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	f2 cf       	rjmp	.-28     	; 0x1208 <WindDirectionControl()+0x28>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:251
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	8f e0       	ldi	r24, 0x0F	; 15
    1228:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:252
    122c:	6f ef       	ldi	r22, 0xFF	; 255
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	eb cf       	rjmp	.-42     	; 0x1208 <WindDirectionControl()+0x28>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:255
    1232:	60 e0       	ldi	r22, 0x00	; 0
    1234:	80 e1       	ldi	r24, 0x10	; 16
    1236:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:256
    123a:	61 e0       	ldi	r22, 0x01	; 1
    123c:	8f e0       	ldi	r24, 0x0F	; 15
    123e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:257
    1242:	64 eb       	ldi	r22, 0xB4	; 180
    1244:	70 e0       	ldi	r23, 0x00	; 0
    1246:	e0 cf       	rjmp	.-64     	; 0x1208 <WindDirectionControl()+0x28>

00001248 <PlasmaControl()>:
_Z13PlasmaControlv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:263
    1248:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <plasma_flag>
    124c:	88 23       	and	r24, r24
    124e:	19 f0       	breq	.+6      	; 0x1256 <PlasmaControl()+0xe>
    1250:	81 30       	cpi	r24, 0x01	; 1
    1252:	c9 f1       	breq	.+114    	; 0x12c6 <PlasmaControl()+0x7e>
    1254:	08 95       	ret
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:266
    1256:	61 e0       	ldi	r22, 0x01	; 1
    1258:	83 e0       	ldi	r24, 0x03	; 3
    125a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:267
    125e:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <plasma_cnt>
    1262:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <plasma_cnt+0x1>
    1266:	01 96       	adiw	r24, 0x01	; 1
    1268:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <plasma_cnt+0x1>
    126c:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:268
    1270:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <plasma_duty>
    1274:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <plasma_duty+0x1>
    1278:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <plasma_cnt>
    127c:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <plasma_cnt+0x1>
    1280:	28 17       	cp	r18, r24
    1282:	39 07       	cpc	r19, r25
    1284:	41 f4       	brne	.+16     	; 0x1296 <PlasmaControl()+0x4e>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:269
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	85 e0       	ldi	r24, 0x05	; 5
    128a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:270
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	86 e0       	ldi	r24, 0x06	; 6
    1292:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:272
    1296:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <plasma_period>
    129a:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <plasma_period+0x1>
    129e:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <plasma_cnt>
    12a2:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <plasma_cnt+0x1>
    12a6:	28 17       	cp	r18, r24
    12a8:	39 07       	cpc	r19, r25
    12aa:	c9 f4       	brne	.+50     	; 0x12de <PlasmaControl()+0x96>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:273
    12ac:	61 e0       	ldi	r22, 0x01	; 1
    12ae:	85 e0       	ldi	r24, 0x05	; 5
    12b0:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:274
    12b4:	61 e0       	ldi	r22, 0x01	; 1
    12b6:	86 e0       	ldi	r24, 0x06	; 6
    12b8:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:275
    12bc:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    12c0:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
    12c4:	08 95       	ret
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:279
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	83 e0       	ldi	r24, 0x03	; 3
    12ca:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:280
    12ce:	60 e0       	ldi	r22, 0x00	; 0
    12d0:	85 e0       	ldi	r24, 0x05	; 5
    12d2:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:281
    12d6:	60 e0       	ldi	r22, 0x00	; 0
    12d8:	86 e0       	ldi	r24, 0x06	; 6
    12da:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:284
    12de:	08 95       	ret

000012e0 <CheckO3()>:
_Z7CheckO3v():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:286
    12e0:	cf 92       	push	r12
    12e2:	df 92       	push	r13
    12e4:	ef 92       	push	r14
    12e6:	ff 92       	push	r15
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:287
    12e8:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <O3_cnt>
    12ec:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <O3_cnt+0x1>
    12f0:	01 96       	adiw	r24, 0x01	; 1
    12f2:	90 93 d5 03 	sts	0x03D5, r25	; 0x8003d5 <O3_cnt+0x1>
    12f6:	80 93 d4 03 	sts	0x03D4, r24	; 0x8003d4 <O3_cnt>
    12fa:	81 33       	cpi	r24, 0x31	; 49
    12fc:	95 47       	sbci	r25, 0x75	; 117
    12fe:	08 f4       	brcc	.+2      	; 0x1302 <CheckO3()+0x22>
    1300:	87 c0       	rjmp	.+270    	; 0x1410 <CheckO3()+0x130>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:289
    1302:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <O3_cnt+0x1>
    1306:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <O3_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:290
    130a:	6a ea       	ldi	r22, 0xAA	; 170
    130c:	71 e0       	ldi	r23, 0x01	; 1
    130e:	82 e1       	ldi	r24, 0x12	; 18
    1310:	96 e0       	ldi	r25, 0x06	; 6
    1312:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:291
    1316:	8e ef       	ldi	r24, 0xFE	; 254
    1318:	94 e0       	ldi	r25, 0x04	; 4
    131a:	0e 94 b8 10 	call	0x2170	; 0x2170 <MQ131Class::sample()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:293
    131e:	65 eb       	ldi	r22, 0xB5	; 181
    1320:	71 e0       	ldi	r23, 0x01	; 1
    1322:	82 e1       	ldi	r24, 0x12	; 18
    1324:	96 e0       	ldi	r25, 0x06	; 6
    1326:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:294
    132a:	70 e0       	ldi	r23, 0x00	; 0
    132c:	60 e0       	ldi	r22, 0x00	; 0
    132e:	8e ef       	ldi	r24, 0xFE	; 254
    1330:	94 e0       	ldi	r25, 0x04	; 4
    1332:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <MQ131Class::getO3(MQ131Unit)>
    1336:	ab 01       	movw	r20, r22
    1338:	bc 01       	movw	r22, r24
    133a:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <ozSensorRdValue>
    133e:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <ozSensorRdValue+0x1>
    1342:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <ozSensorRdValue+0x2>
    1346:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <ozSensorRdValue+0x3>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:295
    134a:	22 e0       	ldi	r18, 0x02	; 2
    134c:	30 e0       	ldi	r19, 0x00	; 0
    134e:	82 e1       	ldi	r24, 0x12	; 18
    1350:	96 e0       	ldi	r25, 0x06	; 6
    1352:	0e 94 4f 21 	call	0x429e	; 0x429e <Print::print(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:296
    1356:	6f eb       	ldi	r22, 0xBF	; 191
    1358:	71 e0       	ldi	r23, 0x01	; 1
    135a:	82 e1       	ldi	r24, 0x12	; 18
    135c:	96 e0       	ldi	r25, 0x06	; 6
    135e:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:297
    1362:	61 e0       	ldi	r22, 0x01	; 1
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	8e ef       	ldi	r24, 0xFE	; 254
    1368:	94 e0       	ldi	r25, 0x04	; 4
    136a:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <MQ131Class::getO3(MQ131Unit)>
    136e:	ab 01       	movw	r20, r22
    1370:	bc 01       	movw	r22, r24
    1372:	22 e0       	ldi	r18, 0x02	; 2
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	82 e1       	ldi	r24, 0x12	; 18
    1378:	96 e0       	ldi	r25, 0x06	; 6
    137a:	0e 94 4f 21 	call	0x429e	; 0x429e <Print::print(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:298
    137e:	63 ed       	ldi	r22, 0xD3	; 211
    1380:	71 e0       	ldi	r23, 0x01	; 1
    1382:	82 e1       	ldi	r24, 0x12	; 18
    1384:	96 e0       	ldi	r25, 0x06	; 6
    1386:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:299
    138a:	6f eb       	ldi	r22, 0xBF	; 191
    138c:	71 e0       	ldi	r23, 0x01	; 1
    138e:	82 e1       	ldi	r24, 0x12	; 18
    1390:	96 e0       	ldi	r25, 0x06	; 6
    1392:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:300
    1396:	62 e0       	ldi	r22, 0x02	; 2
    1398:	70 e0       	ldi	r23, 0x00	; 0
    139a:	8e ef       	ldi	r24, 0xFE	; 254
    139c:	94 e0       	ldi	r25, 0x04	; 4
    139e:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <MQ131Class::getO3(MQ131Unit)>
    13a2:	ab 01       	movw	r20, r22
    13a4:	bc 01       	movw	r22, r24
    13a6:	22 e0       	ldi	r18, 0x02	; 2
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	82 e1       	ldi	r24, 0x12	; 18
    13ac:	96 e0       	ldi	r25, 0x06	; 6
    13ae:	0e 94 4f 21 	call	0x429e	; 0x429e <Print::print(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:301
    13b2:	68 ed       	ldi	r22, 0xD8	; 216
    13b4:	71 e0       	ldi	r23, 0x01	; 1
    13b6:	82 e1       	ldi	r24, 0x12	; 18
    13b8:	96 e0       	ldi	r25, 0x06	; 6
    13ba:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:302
    13be:	6f eb       	ldi	r22, 0xBF	; 191
    13c0:	71 e0       	ldi	r23, 0x01	; 1
    13c2:	82 e1       	ldi	r24, 0x12	; 18
    13c4:	96 e0       	ldi	r25, 0x06	; 6
    13c6:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:303
    13ca:	63 e0       	ldi	r22, 0x03	; 3
    13cc:	70 e0       	ldi	r23, 0x00	; 0
    13ce:	8e ef       	ldi	r24, 0xFE	; 254
    13d0:	94 e0       	ldi	r25, 0x04	; 4
    13d2:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <MQ131Class::getO3(MQ131Unit)>
    13d6:	ab 01       	movw	r20, r22
    13d8:	bc 01       	movw	r22, r24
    13da:	22 e0       	ldi	r18, 0x02	; 2
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	82 e1       	ldi	r24, 0x12	; 18
    13e0:	96 e0       	ldi	r25, 0x06	; 6
    13e2:	0e 94 4f 21 	call	0x429e	; 0x429e <Print::print(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:304
    13e6:	6f ed       	ldi	r22, 0xDF	; 223
    13e8:	71 e0       	ldi	r23, 0x01	; 1
    13ea:	82 e1       	ldi	r24, 0x12	; 18
    13ec:	96 e0       	ldi	r25, 0x06	; 6
    13ee:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:305
    13f2:	8e ef       	ldi	r24, 0xFE	; 254
    13f4:	94 e0       	ldi	r25, 0x04	; 4
    13f6:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <MQ131Class::getR0()>
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e4       	ldi	r19, 0x40	; 64
    13fe:	4c e1       	ldi	r20, 0x1C	; 28
    1400:	56 e4       	ldi	r21, 0x46	; 70
    1402:	0e 94 30 23 	call	0x4660	; 0x4660 <__gesf2>
    1406:	87 fd       	sbrc	r24, 7
    1408:	08 c0       	rjmp	.+16     	; 0x141a <CheckO3()+0x13a>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:306
    140a:	81 e0       	ldi	r24, 0x01	; 1
    140c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <plasma_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:323
    1410:	ff 90       	pop	r15
    1412:	ef 90       	pop	r14
    1414:	df 90       	pop	r13
    1416:	cf 90       	pop	r12
    1418:	08 95       	ret
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:308
    141a:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <ozSensorRdValue>
    141e:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <ozSensorRdValue+0x1>
    1422:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <ozSensorRdValue+0x2>
    1426:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <ozSensorRdValue+0x3>
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	a9 01       	movw	r20, r18
    1430:	c7 01       	movw	r24, r14
    1432:	b6 01       	movw	r22, r12
    1434:	0e 94 30 23 	call	0x4660	; 0x4660 <__gesf2>
    1438:	87 fd       	sbrc	r24, 7
    143a:	ea cf       	rjmp	.-44     	; 0x1410 <CheckO3()+0x130>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:310
    143c:	2f e8       	ldi	r18, 0x8F	; 143
    143e:	32 ec       	ldi	r19, 0xC2	; 194
    1440:	45 ef       	ldi	r20, 0xF5	; 245
    1442:	5c e3       	ldi	r21, 0x3C	; 60
    1444:	c7 01       	movw	r24, r14
    1446:	b6 01       	movw	r22, r12
    1448:	0e 94 30 23 	call	0x4660	; 0x4660 <__gesf2>
    144c:	87 fd       	sbrc	r24, 7
    144e:	0d c0       	rjmp	.+26     	; 0x146a <CheckO3()+0x18a>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:312
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <plasma_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:313
    1456:	66 ee       	ldi	r22, 0xE6	; 230
    1458:	71 e0       	ldi	r23, 0x01	; 1
    145a:	82 e1       	ldi	r24, 0x12	; 18
    145c:	96 e0       	ldi	r25, 0x06	; 6
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:323
    145e:	ff 90       	pop	r15
    1460:	ef 90       	pop	r14
    1462:	df 90       	pop	r13
    1464:	cf 90       	pop	r12
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:313
    1466:	0c 94 7b 1f 	jmp	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:317
    146a:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <plasma_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:323
    146e:	d0 cf       	rjmp	.-96     	; 0x1410 <CheckO3()+0x130>

00001470 <_GLOBAL__sub_I__Z27timerEnableReceiveInterruptv>:
_GLOBAL__sub_I__Z27timerEnableReceiveInterruptv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:372
    1470:	cf 92       	push	r12
    1472:	ef 92       	push	r14
    1474:	0f 93       	push	r16
__static_initialization_and_destruction_0():
C:\Users\dlcks\Documents\Arduino\libraries\IRremote-4.0.0\src/IRReceive.hpp:59
 * @{
 */
/**
 * The receiver instance
 */
IRrecv IrReceiver;
    1476:	88 ed       	ldi	r24, 0xD8	; 216
    1478:	94 e0       	ldi	r25, 0x04	; 4
    147a:	0e 94 4a 02 	call	0x494	; 0x494 <IRrecv::IRrecv()>
_ZN6IRsendC4Ev():
C:\Users\dlcks\Documents\Arduino\libraries\IRremote-4.0.0\src/IRSend.hpp:63
// The sender instance
IRsend IrSender;

IRsend::IRsend() { // @suppress("Class members should be properly initialized")
#if !defined(IR_SEND_PIN)
    sendPin = 0;
    147e:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <IrSender>
_Z14setLEDFeedbackhh():
C:\Users\dlcks\Documents\Arduino\libraries\IRremote-4.0.0\src/IRFeedbackLED.hpp:58
 *                        If FeedbackLEDPin == 0 and no LED_BUILTIN defined, disable LED feedback
 * @param aEnableLEDFeedback If LED_FEEDBACK_ENABLED_FOR_RECEIVE or LED_FEEDBACK_ENABLED_FOR_SEND -> enable blinking of Feedback LED
 */
void setLEDFeedback(uint8_t aFeedbackLEDPin, uint8_t aEnableLEDFeedback) {

    FeedbackLEDControl.FeedbackLEDPin = aFeedbackLEDPin; // default is 0 -> use LED_BUILTIN if available, else disable feedback
    1482:	10 92 fc 04 	sts	0x04FC, r1	; 0x8004fc <FeedbackLEDControl>
__static_initialization_and_destruction_0():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/Sketch11.ino:33
    1486:	cc 24       	eor	r12, r12
    1488:	c3 94       	inc	r12
    148a:	87 e0       	ldi	r24, 0x07	; 7
    148c:	e8 2e       	mov	r14, r24
    148e:	01 e0       	ldi	r16, 0x01	; 1
    1490:	24 e0       	ldi	r18, 0x04	; 4
    1492:	4c e0       	ldi	r20, 0x0C	; 12
    1494:	6b e0       	ldi	r22, 0x0B	; 11
    1496:	8c eb       	ldi	r24, 0xBC	; 188
    1498:	93 e0       	ldi	r25, 0x03	; 3
    149a:	0e 94 fc 13 	call	0x27f8	; 0x27f8 <TM1650::TM1650(unsigned char, unsigned char, unsigned char, bool, unsigned char, unsigned char)>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/Sketch11.ino:35
    149e:	64 e1       	ldi	r22, 0x14	; 20
    14a0:	8c e5       	ldi	r24, 0x5C	; 92
    14a2:	93 e0       	ldi	r25, 0x03	; 3
_GLOBAL__sub_I__Z27timerEnableReceiveInterruptv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:372
    14a4:	0f 91       	pop	r16
    14a6:	ef 90       	pop	r14
    14a8:	cf 90       	pop	r12
__static_initialization_and_destruction_0():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/Sketch11.ino:35
    14aa:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <IRrecv::IRrecv(unsigned char)>

000014ae <ReceiveIR()>:
_Z9ReceiveIRv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:149
    14ae:	cf 93       	push	r28
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:150
    14b0:	6c e4       	ldi	r22, 0x4C	; 76
    14b2:	73 e0       	ldi	r23, 0x03	; 3
    14b4:	8c e5       	ldi	r24, 0x5C	; 92
    14b6:	93 e0       	ldi	r25, 0x03	; 3
    14b8:	0e 94 08 08 	call	0x1010	; 0x1010 <IRrecv::decode(decode_results*)>
    14bc:	88 23       	and	r24, r24
    14be:	09 f4       	brne	.+2      	; 0x14c2 <ReceiveIR()+0x14>
    14c0:	36 c1       	rjmp	.+620    	; 0x172e <ReceiveIR()+0x280>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:151
    14c2:	40 91 50 03 	lds	r20, 0x0350	; 0x800350 <__data_end+0x4>
    14c6:	50 91 51 03 	lds	r21, 0x0351	; 0x800351 <__data_end+0x5>
    14ca:	60 91 52 03 	lds	r22, 0x0352	; 0x800352 <__data_end+0x6>
    14ce:	70 91 53 03 	lds	r23, 0x0353	; 0x800353 <__data_end+0x7>
    14d2:	2a e0       	ldi	r18, 0x0A	; 10
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	82 e1       	ldi	r24, 0x12	; 18
    14d8:	96 e0       	ldi	r25, 0x06	; 6
    14da:	0e 94 59 20 	call	0x40b2	; 0x40b2 <Print::println(unsigned long, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:152
    14de:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <__data_end+0x4>
    14e2:	90 91 51 03 	lds	r25, 0x0351	; 0x800351 <__data_end+0x5>
    14e6:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <__data_end+0x6>
    14ea:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <__data_end+0x7>
    14ee:	84 34       	cpi	r24, 0x44	; 68
    14f0:	21 e9       	ldi	r18, 0x91	; 145
    14f2:	92 07       	cpc	r25, r18
    14f4:	29 ef       	ldi	r18, 0xF9	; 249
    14f6:	a2 07       	cpc	r26, r18
    14f8:	25 e8       	ldi	r18, 0x85	; 133
    14fa:	b2 07       	cpc	r27, r18
    14fc:	09 f4       	brne	.+2      	; 0x1500 <ReceiveIR()+0x52>
    14fe:	de c0       	rjmp	.+444    	; 0x16bc <ReceiveIR()+0x20e>
    1500:	80 f5       	brcc	.+96     	; 0x1562 <ReceiveIR()+0xb4>
    1502:	81 15       	cp	r24, r1
    1504:	26 e3       	ldi	r18, 0x36	; 54
    1506:	92 07       	cpc	r25, r18
    1508:	27 e8       	ldi	r18, 0x87	; 135
    150a:	a2 07       	cpc	r26, r18
    150c:	26 e4       	ldi	r18, 0x46	; 70
    150e:	b2 07       	cpc	r27, r18
    1510:	09 f4       	brne	.+2      	; 0x1514 <ReceiveIR()+0x66>
    1512:	62 c0       	rjmp	.+196    	; 0x15d8 <ReceiveIR()+0x12a>
    1514:	58 f4       	brcc	.+22     	; 0x152c <ReceiveIR()+0x7e>
    1516:	88 32       	cpi	r24, 0x28	; 40
    1518:	94 4f       	sbci	r25, 0xF4	; 244
    151a:	a2 4d       	sbci	r26, 0xD2	; 210
    151c:	be 40       	sbci	r27, 0x0E	; 14
    151e:	09 f4       	brne	.+2      	; 0x1522 <ReceiveIR()+0x74>
    1520:	e8 c0       	rjmp	.+464    	; 0x16f2 <ReceiveIR()+0x244>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:234
    1522:	8c e5       	ldi	r24, 0x5C	; 92
    1524:	93 e0       	ldi	r25, 0x03	; 3
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:236
    1526:	cf 91       	pop	r28
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:234
    1528:	0c 94 5f 02 	jmp	0x4be	; 0x4be <IRrecv::resume()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:152
    152c:	84 3e       	cpi	r24, 0xE4	; 228
    152e:	2e e1       	ldi	r18, 0x1E	; 30
    1530:	92 07       	cpc	r25, r18
    1532:	22 e3       	ldi	r18, 0x32	; 50
    1534:	a2 07       	cpc	r26, r18
    1536:	25 e5       	ldi	r18, 0x55	; 85
    1538:	b2 07       	cpc	r27, r18
    153a:	09 f4       	brne	.+2      	; 0x153e <ReceiveIR()+0x90>
    153c:	4d c0       	rjmp	.+154    	; 0x15d8 <ReceiveIR()+0x12a>
    153e:	80 3a       	cpi	r24, 0xA0	; 160
    1540:	9c 41       	sbci	r25, 0x1C	; 28
    1542:	ab 48       	sbci	r26, 0x8B	; 139
    1544:	b9 46       	sbci	r27, 0x69	; 105
    1546:	69 f7       	brne	.-38     	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:229
    1548:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    154c:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:230
    1550:	8a e0       	ldi	r24, 0x0A	; 10
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    1558:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:231
    155c:	80 ea       	ldi	r24, 0xA0	; 160
    155e:	9f e0       	ldi	r25, 0x0F	; 15
    1560:	d4 c0       	rjmp	.+424    	; 0x170a <ReceiveIR()+0x25c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:152
    1562:	84 30       	cpi	r24, 0x04	; 4
    1564:	2d ee       	ldi	r18, 0xED	; 237
    1566:	92 07       	cpc	r25, r18
    1568:	2d e7       	ldi	r18, 0x7D	; 125
    156a:	a2 07       	cpc	r26, r18
    156c:	2a ea       	ldi	r18, 0xAA	; 170
    156e:	b2 07       	cpc	r27, r18
    1570:	09 f4       	brne	.+2      	; 0x1574 <ReceiveIR()+0xc6>
    1572:	50 c0       	rjmp	.+160    	; 0x1614 <ReceiveIR()+0x166>
    1574:	a8 f4       	brcc	.+42     	; 0x15a0 <ReceiveIR()+0xf2>
    1576:	84 32       	cpi	r24, 0x24	; 36
    1578:	96 44       	sbci	r25, 0x46	; 70
    157a:	a7 44       	sbci	r26, 0x47	; 71
    157c:	bf 49       	sbci	r27, 0x9F	; 159
    157e:	89 f6       	brne	.-94     	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:208
    1580:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    1584:	88 23       	and	r24, r24
    1586:	69 f2       	breq	.-102    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:209
    1588:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <wind_flag>
    158c:	8f 5f       	subi	r24, 0xFF	; 255
    158e:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <wind_flag>
    1592:	84 30       	cpi	r24, 0x04	; 4
    1594:	08 f4       	brcc	.+2      	; 0x1598 <ReceiveIR()+0xea>
    1596:	6e c0       	rjmp	.+220    	; 0x1674 <ReceiveIR()+0x1c6>
    1598:	81 e0       	ldi	r24, 0x01	; 1
    159a:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <wind_flag>
    159e:	6a c0       	rjmp	.+212    	; 0x1674 <ReceiveIR()+0x1c6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:152
    15a0:	84 30       	cpi	r24, 0x04	; 4
    15a2:	2c e8       	ldi	r18, 0x8C	; 140
    15a4:	92 07       	cpc	r25, r18
    15a6:	2d ed       	ldi	r18, 0xDD	; 221
    15a8:	a2 07       	cpc	r26, r18
    15aa:	21 ee       	ldi	r18, 0xE1	; 225
    15ac:	b2 07       	cpc	r27, r18
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <ReceiveIR()+0x104>
    15b0:	b1 c0       	rjmp	.+354    	; 0x1714 <ReceiveIR()+0x266>
    15b2:	84 34       	cpi	r24, 0x44	; 68
    15b4:	96 40       	sbci	r25, 0x06	; 6
    15b6:	ad 4f       	sbci	r26, 0xFD	; 253
    15b8:	bb 4e       	sbci	r27, 0xEB	; 235
    15ba:	09 f0       	breq	.+2      	; 0x15be <ReceiveIR()+0x110>
    15bc:	b2 cf       	rjmp	.-156    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:219
    15be:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    15c2:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:220
    15c6:	8a e0       	ldi	r24, 0x0A	; 10
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    15ce:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:221
    15d2:	80 ed       	ldi	r24, 0xD0	; 208
    15d4:	97 e0       	ldi	r25, 0x07	; 7
    15d6:	99 c0       	rjmp	.+306    	; 0x170a <ReceiveIR()+0x25c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:155
    15d8:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    15dc:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:156
    15e0:	8a e0       	ldi	r24, 0x0A	; 10
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    15e8:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:157
    15ec:	86 e9       	ldi	r24, 0x96	; 150
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <plasma_period+0x1>
    15f4:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <plasma_period>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:158
    15f8:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    15fc:	88 23       	and	r24, r24
    15fe:	09 f4       	brne	.+2      	; 0x1602 <ReceiveIR()+0x154>
    1600:	90 cf       	rjmp	.-224    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:159
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	82 e0       	ldi	r24, 0x02	; 2
    1606:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:160
    160a:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:195
    160c:	8e e0       	ldi	r24, 0x0E	; 14
    160e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    1612:	87 cf       	rjmp	.-242    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:164
    1614:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    1618:	c1 e0       	ldi	r28, 0x01	; 1
    161a:	8c 27       	eor	r24, r28
    161c:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <Power>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:165
    1620:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    1624:	88 23       	and	r24, r24
    1626:	49 f1       	breq	.+82     	; 0x167a <ReceiveIR()+0x1cc>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:166
    1628:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <plasma_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:167
    162c:	61 e0       	ldi	r22, 0x01	; 1
    162e:	8d e0       	ldi	r24, 0x0D	; 13
    1630:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:168
    1634:	61 e0       	ldi	r22, 0x01	; 1
    1636:	82 e0       	ldi	r24, 0x02	; 2
    1638:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:169
    163c:	61 e0       	ldi	r22, 0x01	; 1
    163e:	85 e1       	ldi	r24, 0x15	; 21
    1640:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:170
    1644:	c0 93 df 03 	sts	0x03DF, r28	; 0x8003df <wind_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:171
    1648:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    164c:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:172
    1650:	8a e0       	ldi	r24, 0x0A	; 10
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    1658:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:173
    165c:	80 ed       	ldi	r24, 0xD0	; 208
    165e:	97 e0       	ldi	r25, 0x07	; 7
    1660:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <plasma_period+0x1>
    1664:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <plasma_period>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:174
    1668:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <segement_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:175
    166c:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <segment_cnt+0x1>
    1670:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <segment_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:187
    1674:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <WindDirectionControl()>
    1678:	54 cf       	rjmp	.-344    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:177
    167a:	c0 93 0c 01 	sts	0x010C, r28	; 0x80010c <plasma_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:178
    167e:	60 e0       	ldi	r22, 0x00	; 0
    1680:	82 e0       	ldi	r24, 0x02	; 2
    1682:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:179
    1686:	60 e0       	ldi	r22, 0x00	; 0
    1688:	85 e1       	ldi	r24, 0x15	; 21
    168a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:180
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	89 e0       	ldi	r24, 0x09	; 9
    1692:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:181
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	83 e0       	ldi	r24, 0x03	; 3
    169a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:182
    169e:	60 e0       	ldi	r22, 0x00	; 0
    16a0:	8d e0       	ldi	r24, 0x0D	; 13
    16a2:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:183
    16a6:	60 e0       	ldi	r22, 0x00	; 0
    16a8:	8e e0       	ldi	r24, 0x0E	; 14
    16aa:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:184
    16ae:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <wind_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:185
    16b2:	8c eb       	ldi	r24, 0xBC	; 188
    16b4:	93 e0       	ldi	r25, 0x03	; 3
    16b6:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
    16ba:	dc cf       	rjmp	.-72     	; 0x1674 <ReceiveIR()+0x1c6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:190
    16bc:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    16c0:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:191
    16c4:	8a e0       	ldi	r24, 0x0A	; 10
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    16cc:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:192
    16d0:	80 ed       	ldi	r24, 0xD0	; 208
    16d2:	97 e0       	ldi	r25, 0x07	; 7
    16d4:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <plasma_period+0x1>
    16d8:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <plasma_period>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:193
    16dc:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    16e0:	88 23       	and	r24, r24
    16e2:	09 f4       	brne	.+2      	; 0x16e6 <ReceiveIR()+0x238>
    16e4:	1e cf       	rjmp	.-452    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:194
    16e6:	61 e0       	ldi	r22, 0x01	; 1
    16e8:	82 e0       	ldi	r24, 0x02	; 2
    16ea:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:195
    16ee:	60 e0       	ldi	r22, 0x00	; 0
    16f0:	8d cf       	rjmp	.-230    	; 0x160c <ReceiveIR()+0x15e>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:214
    16f2:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    16f6:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:215
    16fa:	8a e0       	ldi	r24, 0x0A	; 10
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    1702:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:216
    1706:	84 ef       	ldi	r24, 0xF4	; 244
    1708:	91 e0       	ldi	r25, 0x01	; 1
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:231
    170a:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <plasma_period+0x1>
    170e:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <plasma_period>
    1712:	07 cf       	rjmp	.-498    	; 0x1522 <ReceiveIR()+0x74>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:224
    1714:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <plasma_cnt+0x1>
    1718:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <plasma_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:225
    171c:	8a e0       	ldi	r24, 0x0A	; 10
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <plasma_duty+0x1>
    1724:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <plasma_duty>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:226
    1728:	88 eb       	ldi	r24, 0xB8	; 184
    172a:	9b e0       	ldi	r25, 0x0B	; 11
    172c:	ee cf       	rjmp	.-36     	; 0x170a <ReceiveIR()+0x25c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:236
    172e:	cf 91       	pop	r28
    1730:	08 95       	ret

00001732 <setup>:
setup():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:325
    1732:	cf 92       	push	r12
    1734:	df 92       	push	r13
    1736:	ef 92       	push	r14
    1738:	ff 92       	push	r15
    173a:	0f 93       	push	r16
    173c:	1f 93       	push	r17
    173e:	48 eb       	ldi	r20, 0xB8	; 184
    1740:	5b e0       	ldi	r21, 0x0B	; 11
    1742:	60 e0       	ldi	r22, 0x00	; 0
    1744:	70 e0       	ldi	r23, 0x00	; 0
    1746:	8d e1       	ldi	r24, 0x1D	; 29
    1748:	95 e0       	ldi	r25, 0x05	; 5
    174a:	0e 94 28 17 	call	0x2e50	; 0x2e50 <VisualMicroDebug::init(unsigned long)>
    174e:	40 e0       	ldi	r20, 0x00	; 0
    1750:	5b e4       	ldi	r21, 0x4B	; 75
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	70 e0       	ldi	r23, 0x00	; 0
    1756:	8d e1       	ldi	r24, 0x1D	; 29
    1758:	95 e0       	ldi	r25, 0x05	; 5
    175a:	0e 94 11 17 	call	0x2e22	; 0x2e22 <VisualMicroDebug::begin(unsigned long)>
    175e:	61 e0       	ldi	r22, 0x01	; 1
    1760:	8d e1       	ldi	r24, 0x1D	; 29
    1762:	95 e0       	ldi	r25, 0x05	; 5
    1764:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <VisualMicroDebug::outPacketStart(bool)>
    1768:	88 23       	and	r24, r24
    176a:	91 f0       	breq	.+36     	; 0x1790 <setup+0x5e>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:325 (discriminator 1)
    176c:	64 ef       	ldi	r22, 0xF4	; 244
    176e:	71 e0       	ldi	r23, 0x01	; 1
    1770:	82 e1       	ldi	r24, 0x12	; 18
    1772:	96 e0       	ldi	r25, 0x06	; 6
    1774:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
    1778:	4a e0       	ldi	r20, 0x0A	; 10
    177a:	50 e0       	ldi	r21, 0x00	; 0
    177c:	60 e0       	ldi	r22, 0x00	; 0
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	8d e1       	ldi	r24, 0x1D	; 29
    1782:	95 e0       	ldi	r25, 0x05	; 5
    1784:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <VisualMicroDebug::DBG_YieldAndWait(unsigned long)>
    1788:	8d e1       	ldi	r24, 0x1D	; 29
    178a:	95 e0       	ldi	r25, 0x05	; 5
    178c:	0e 94 10 17 	call	0x2e20	; 0x2e20 <VisualMicroDebug::outPacketEnd()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:325 (discriminator 3)
    1790:	41 e0       	ldi	r20, 0x01	; 1
    1792:	60 e0       	ldi	r22, 0x00	; 0
    1794:	8d e1       	ldi	r24, 0x1D	; 29
    1796:	95 e0       	ldi	r25, 0x05	; 5
    1798:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <VisualMicroDebug::start(bool, bool)>
    179c:	61 e0       	ldi	r22, 0x01	; 1
    179e:	8d e1       	ldi	r24, 0x1D	; 29
    17a0:	95 e0       	ldi	r25, 0x05	; 5
    17a2:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <VisualMicroDebug::outPacketStart(bool)>
    17a6:	88 23       	and	r24, r24
    17a8:	51 f0       	breq	.+20     	; 0x17be <setup+0x8c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:325 (discriminator 4)
    17aa:	65 e0       	ldi	r22, 0x05	; 5
    17ac:	72 e0       	ldi	r23, 0x02	; 2
    17ae:	82 e1       	ldi	r24, 0x12	; 18
    17b0:	96 e0       	ldi	r25, 0x06	; 6
    17b2:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
    17b6:	8d e1       	ldi	r24, 0x1D	; 29
    17b8:	95 e0       	ldi	r25, 0x05	; 5
    17ba:	0e 94 10 17 	call	0x2e20	; 0x2e20 <VisualMicroDebug::outPacketEnd()>
_ZN14HardwareSerial5beginEm():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.h:121
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    17be:	26 e0       	ldi	r18, 0x06	; 6
    17c0:	40 e0       	ldi	r20, 0x00	; 0
    17c2:	5b e4       	ldi	r21, 0x4B	; 75
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	82 e1       	ldi	r24, 0x12	; 18
    17ca:	96 e0       	ldi	r25, 0x06	; 6
    17cc:	0e 94 31 1e 	call	0x3c62	; 0x3c62 <HardwareSerial::begin(unsigned long, unsigned char)>
setup():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:328
    17d0:	6c e0       	ldi	r22, 0x0C	; 12
    17d2:	72 e0       	ldi	r23, 0x02	; 2
    17d4:	82 e1       	ldi	r24, 0x12	; 18
    17d6:	96 e0       	ldi	r25, 0x06	; 6
    17d8:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:329
    17dc:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
    17e0:	88 7f       	andi	r24, 0xF8	; 248
    17e2:	82 60       	ori	r24, 0x02	; 2
    17e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:331
    17e8:	6b e1       	ldi	r22, 0x1B	; 27
    17ea:	72 e0       	ldi	r23, 0x02	; 2
    17ec:	82 e1       	ldi	r24, 0x12	; 18
    17ee:	96 e0       	ldi	r25, 0x06	; 6
    17f0:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:332
    17f4:	63 e6       	ldi	r22, 0x63	; 99
    17f6:	75 e0       	ldi	r23, 0x05	; 5
    17f8:	80 e8       	ldi	r24, 0x80	; 128
    17fa:	93 e0       	ldi	r25, 0x03	; 3
    17fc:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <AM1008W_K_I2C::begin(TwoWire&)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:334
    1800:	6c e2       	ldi	r22, 0x2C	; 44
    1802:	72 e0       	ldi	r23, 0x02	; 2
    1804:	82 e1       	ldi	r24, 0x12	; 18
    1806:	96 e0       	ldi	r25, 0x06	; 6
    1808:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
_ZN6IRrecv10enableIRInEv():
C:\Users\dlcks\Documents\Arduino\libraries\IRremote-4.0.0\src/IRReceive.hpp:326
}
/**
 * Alias for start().
 */
void IRrecv::enableIRIn() {
    start();
    180c:	8c e5       	ldi	r24, 0x5C	; 92
    180e:	93 e0       	ldi	r25, 0x03	; 3
    1810:	0e 94 66 02 	call	0x4cc	; 0x4cc <IRrecv::start()>
setup():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:336
    1814:	68 e3       	ldi	r22, 0x38	; 56
    1816:	72 e0       	ldi	r23, 0x02	; 2
    1818:	82 e1       	ldi	r24, 0x12	; 18
    181a:	96 e0       	ldi	r25, 0x06	; 6
    181c:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:337
    1820:	d1 2c       	mov	r13, r1
    1822:	c1 2c       	mov	r12, r1
    1824:	10 e4       	ldi	r17, 0x40	; 64
    1826:	e1 2e       	mov	r14, r17
    1828:	12 e4       	ldi	r17, 0x42	; 66
    182a:	f1 2e       	mov	r15, r17
    182c:	0f e0       	ldi	r16, 0x0F	; 15
    182e:	10 e0       	ldi	r17, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	46 e0       	ldi	r20, 0x06	; 6
    1836:	63 e0       	ldi	r22, 0x03	; 3
    1838:	8e ef       	ldi	r24, 0xFE	; 254
    183a:	94 e0       	ldi	r25, 0x04	; 4
    183c:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:338
    1840:	48 e4       	ldi	r20, 0x48	; 72
    1842:	51 e6       	ldi	r21, 0x61	; 97
    1844:	64 e7       	ldi	r22, 0x74	; 116
    1846:	74 e4       	ldi	r23, 0x44	; 68
    1848:	8e ef       	ldi	r24, 0xFE	; 254
    184a:	94 e0       	ldi	r25, 0x04	; 4
    184c:	0e 94 f5 11 	call	0x23ea	; 0x23ea <MQ131Class::setR0(float)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:339
    1850:	40 e0       	ldi	r20, 0x00	; 0
    1852:	50 e0       	ldi	r21, 0x00	; 0
    1854:	ba 01       	movw	r22, r20
    1856:	8e ef       	ldi	r24, 0xFE	; 254
    1858:	94 e0       	ldi	r25, 0x04	; 4
    185a:	0e 94 5f 10 	call	0x20be	; 0x20be <MQ131Class::setTimeToRead(unsigned long)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:341
    185e:	67 e4       	ldi	r22, 0x47	; 71
    1860:	72 e0       	ldi	r23, 0x02	; 2
    1862:	82 e1       	ldi	r24, 0x12	; 18
    1864:	96 e0       	ldi	r25, 0x06	; 6
    1866:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:342
    186a:	61 e0       	ldi	r22, 0x01	; 1
    186c:	89 e0       	ldi	r24, 0x09	; 9
    186e:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:343
    1872:	61 e0       	ldi	r22, 0x01	; 1
    1874:	83 e0       	ldi	r24, 0x03	; 3
    1876:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:344
    187a:	61 e0       	ldi	r22, 0x01	; 1
    187c:	85 e0       	ldi	r24, 0x05	; 5
    187e:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:345
    1882:	61 e0       	ldi	r22, 0x01	; 1
    1884:	86 e0       	ldi	r24, 0x06	; 6
    1886:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:346
    188a:	61 e0       	ldi	r22, 0x01	; 1
    188c:	82 e0       	ldi	r24, 0x02	; 2
    188e:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:347
    1892:	61 e0       	ldi	r22, 0x01	; 1
    1894:	89 e0       	ldi	r24, 0x09	; 9
    1896:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:348
    189a:	61 e0       	ldi	r22, 0x01	; 1
    189c:	8d e0       	ldi	r24, 0x0D	; 13
    189e:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:349
    18a2:	61 e0       	ldi	r22, 0x01	; 1
    18a4:	8f e0       	ldi	r24, 0x0F	; 15
    18a6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:350
    18aa:	61 e0       	ldi	r22, 0x01	; 1
    18ac:	80 e1       	ldi	r24, 0x10	; 16
    18ae:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:351
    18b2:	61 e0       	ldi	r22, 0x01	; 1
    18b4:	8e e0       	ldi	r24, 0x0E	; 14
    18b6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:352
    18ba:	61 e0       	ldi	r22, 0x01	; 1
    18bc:	85 e1       	ldi	r24, 0x15	; 21
    18be:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:353
    18c2:	8c eb       	ldi	r24, 0xBC	; 188
    18c4:	93 e0       	ldi	r25, 0x03	; 3
    18c6:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:355
    18ca:	60 e0       	ldi	r22, 0x00	; 0
    18cc:	87 e0       	ldi	r24, 0x07	; 7
    18ce:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:356
    18d2:	60 e0       	ldi	r22, 0x00	; 0
    18d4:	8a e0       	ldi	r24, 0x0A	; 10
    18d6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:357
    18da:	60 e0       	ldi	r22, 0x00	; 0
    18dc:	88 e0       	ldi	r24, 0x08	; 8
    18de:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:358
    18e2:	60 e0       	ldi	r22, 0x00	; 0
    18e4:	84 e0       	ldi	r24, 0x04	; 4
    18e6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:359
    18ea:	6b e5       	ldi	r22, 0x5B	; 91
    18ec:	72 e0       	ldi	r23, 0x02	; 2
    18ee:	82 e1       	ldi	r24, 0x12	; 18
    18f0:	96 e0       	ldi	r25, 0x06	; 6
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:360
    18f2:	1f 91       	pop	r17
    18f4:	0f 91       	pop	r16
    18f6:	ff 90       	pop	r15
    18f8:	ef 90       	pop	r14
    18fa:	df 90       	pop	r13
    18fc:	cf 90       	pop	r12
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:359
    18fe:	0c 94 7b 1f 	jmp	0x3ef6	; 0x3ef6 <Print::println(char const*)>

00001902 <setSegmentFloat(float, bool)>:
_Z15setSegmentFloatfb():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:55
    1902:	8f 92       	push	r8
    1904:	9f 92       	push	r9
    1906:	af 92       	push	r10
    1908:	bf 92       	push	r11
    190a:	ef 92       	push	r14
    190c:	ff 92       	push	r15
    190e:	0f 93       	push	r16
    1910:	1f 93       	push	r17
    1912:	cf 93       	push	r28
    1914:	df 93       	push	r29
    1916:	4b 01       	movw	r8, r22
    1918:	5c 01       	movw	r10, r24
    191a:	f4 2e       	mov	r15, r20
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:56
    191c:	8c eb       	ldi	r24, 0xBC	; 188
    191e:	93 e0       	ldi	r25, 0x03	; 3
    1920:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:57
    1924:	c5 01       	movw	r24, r10
    1926:	b4 01       	movw	r22, r8
    1928:	0e 94 48 22 	call	0x4490	; 0x4490 <__fixsfsi>
    192c:	eb 01       	movw	r28, r22
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:58
    192e:	cb 01       	movw	r24, r22
    1930:	64 e6       	ldi	r22, 0x64	; 100
    1932:	70 e0       	ldi	r23, 0x00	; 0
    1934:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    1938:	e6 2e       	mov	r14, r22
    193a:	42 e0       	ldi	r20, 0x02	; 2
    193c:	bc 01       	movw	r22, r24
    193e:	8c eb       	ldi	r24, 0xBC	; 188
    1940:	93 e0       	ldi	r25, 0x03	; 3
    1942:	0e 94 aa 14 	call	0x2954	; 0x2954 <TM16xx::setDisplayToDecNumber(int, unsigned char)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:59
    1946:	2a e0       	ldi	r18, 0x0A	; 10
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	ce 01       	movw	r24, r28
    194c:	b9 01       	movw	r22, r18
    194e:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    1952:	cb 01       	movw	r24, r22
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:60
    1954:	b9 01       	movw	r22, r18
    1956:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    195a:	09 e4       	ldi	r16, 0x49	; 73
    195c:	11 e0       	ldi	r17, 0x01	; 1
    195e:	21 e0       	ldi	r18, 0x01	; 1
    1960:	41 e0       	ldi	r20, 0x01	; 1
    1962:	68 2f       	mov	r22, r24
    1964:	8c eb       	ldi	r24, 0xBC	; 188
    1966:	93 e0       	ldi	r25, 0x03	; 3
    1968:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:62
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	40 e0       	ldi	r20, 0x00	; 0
    1970:	6e 2d       	mov	r22, r14
    1972:	8c eb       	ldi	r24, 0xBC	; 188
    1974:	93 e0       	ldi	r25, 0x03	; 3
    1976:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:64
    197a:	20 e0       	ldi	r18, 0x00	; 0
    197c:	43 e0       	ldi	r20, 0x03	; 3
    197e:	61 e0       	ldi	r22, 0x01	; 1
    1980:	f1 10       	cpse	r15, r1
    1982:	05 c0       	rjmp	.+10     	; 0x198e <setSegmentFloat(float, bool)+0x8c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:65
    1984:	09 e4       	ldi	r16, 0x49	; 73
    1986:	11 e0       	ldi	r17, 0x01	; 1
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	43 e0       	ldi	r20, 0x03	; 3
    198c:	65 e0       	ldi	r22, 0x05	; 5
    198e:	8c eb       	ldi	r24, 0xBC	; 188
    1990:	93 e0       	ldi	r25, 0x03	; 3
    1992:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:66
    1996:	df 91       	pop	r29
    1998:	cf 91       	pop	r28
    199a:	1f 91       	pop	r17
    199c:	0f 91       	pop	r16
    199e:	ff 90       	pop	r15
    19a0:	ef 90       	pop	r14
    19a2:	bf 90       	pop	r11
    19a4:	af 90       	pop	r10
    19a6:	9f 90       	pop	r9
    19a8:	8f 90       	pop	r8
    19aa:	08 95       	ret

000019ac <setSegmentInt(int)>:
_Z13setSegmentInti():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:68
    19ac:	ef 92       	push	r14
    19ae:	ff 92       	push	r15
    19b0:	0f 93       	push	r16
    19b2:	1f 93       	push	r17
    19b4:	cf 93       	push	r28
    19b6:	df 93       	push	r29
    19b8:	7c 01       	movw	r14, r24
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:69
    19ba:	8c eb       	ldi	r24, 0xBC	; 188
    19bc:	93 e0       	ldi	r25, 0x03	; 3
    19be:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:70
    19c2:	62 e6       	ldi	r22, 0x62	; 98
    19c4:	72 e0       	ldi	r23, 0x02	; 2
    19c6:	82 e1       	ldi	r24, 0x12	; 18
    19c8:	96 e0       	ldi	r25, 0x06	; 6
    19ca:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:71
    19ce:	60 91 c4 03 	lds	r22, 0x03C4	; 0x8003c4 <tmp>
    19d2:	70 91 c5 03 	lds	r23, 0x03C5	; 0x8003c5 <tmp+0x1>
    19d6:	4a e0       	ldi	r20, 0x0A	; 10
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	82 e1       	ldi	r24, 0x12	; 18
    19dc:	96 e0       	ldi	r25, 0x06	; 6
    19de:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:72
    19e2:	f0 92 c5 03 	sts	0x03C5, r15	; 0x8003c5 <tmp+0x1>
    19e6:	e0 92 c4 03 	sts	0x03C4, r14	; 0x8003c4 <tmp>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:73
    19ea:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <tmp>
    19ee:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <tmp+0x1>
    19f2:	ca e0       	ldi	r28, 0x0A	; 10
    19f4:	d0 e0       	ldi	r29, 0x00	; 0
    19f6:	be 01       	movw	r22, r28
    19f8:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    19fc:	09 e4       	ldi	r16, 0x49	; 73
    19fe:	11 e0       	ldi	r17, 0x01	; 1
    1a00:	20 e0       	ldi	r18, 0x00	; 0
    1a02:	42 e0       	ldi	r20, 0x02	; 2
    1a04:	68 2f       	mov	r22, r24
    1a06:	8c eb       	ldi	r24, 0xBC	; 188
    1a08:	93 e0       	ldi	r25, 0x03	; 3
    1a0a:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:74
    1a0e:	8a e0       	ldi	r24, 0x0A	; 10
    1a10:	e8 16       	cp	r14, r24
    1a12:	f1 04       	cpc	r15, r1
    1a14:	0c f4       	brge	.+2      	; 0x1a18 <setSegmentInt(int)+0x6c>
    1a16:	52 c0       	rjmp	.+164    	; 0x1abc <setSegmentInt(int)+0x110>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:76
    1a18:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <tmp>
    1a1c:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <tmp+0x1>
    1a20:	be 01       	movw	r22, r28
    1a22:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    1a26:	70 93 c5 03 	sts	0x03C5, r23	; 0x8003c5 <tmp+0x1>
    1a2a:	60 93 c4 03 	sts	0x03C4, r22	; 0x8003c4 <tmp>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:77
    1a2e:	62 e6       	ldi	r22, 0x62	; 98
    1a30:	72 e0       	ldi	r23, 0x02	; 2
    1a32:	82 e1       	ldi	r24, 0x12	; 18
    1a34:	96 e0       	ldi	r25, 0x06	; 6
    1a36:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:78
    1a3a:	60 91 c4 03 	lds	r22, 0x03C4	; 0x8003c4 <tmp>
    1a3e:	70 91 c5 03 	lds	r23, 0x03C5	; 0x8003c5 <tmp+0x1>
    1a42:	4a e0       	ldi	r20, 0x0A	; 10
    1a44:	50 e0       	ldi	r21, 0x00	; 0
    1a46:	82 e1       	ldi	r24, 0x12	; 18
    1a48:	96 e0       	ldi	r25, 0x06	; 6
    1a4a:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:79
    1a4e:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <tmp>
    1a52:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <tmp+0x1>
    1a56:	be 01       	movw	r22, r28
    1a58:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	41 e0       	ldi	r20, 0x01	; 1
    1a60:	68 2f       	mov	r22, r24
    1a62:	8c eb       	ldi	r24, 0xBC	; 188
    1a64:	93 e0       	ldi	r25, 0x03	; 3
    1a66:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:80
    1a6a:	84 e6       	ldi	r24, 0x64	; 100
    1a6c:	e8 16       	cp	r14, r24
    1a6e:	f1 04       	cpc	r15, r1
    1a70:	2c f1       	brlt	.+74     	; 0x1abc <setSegmentInt(int)+0x110>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:82
    1a72:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <tmp>
    1a76:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <tmp+0x1>
    1a7a:	be 01       	movw	r22, r28
    1a7c:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    1a80:	70 93 c5 03 	sts	0x03C5, r23	; 0x8003c5 <tmp+0x1>
    1a84:	60 93 c4 03 	sts	0x03C4, r22	; 0x8003c4 <tmp>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:83
    1a88:	62 e6       	ldi	r22, 0x62	; 98
    1a8a:	72 e0       	ldi	r23, 0x02	; 2
    1a8c:	82 e1       	ldi	r24, 0x12	; 18
    1a8e:	96 e0       	ldi	r25, 0x06	; 6
    1a90:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:84
    1a94:	60 91 c4 03 	lds	r22, 0x03C4	; 0x8003c4 <tmp>
    1a98:	70 91 c5 03 	lds	r23, 0x03C5	; 0x8003c5 <tmp+0x1>
    1a9c:	4a e0       	ldi	r20, 0x0A	; 10
    1a9e:	50 e0       	ldi	r21, 0x00	; 0
    1aa0:	82 e1       	ldi	r24, 0x12	; 18
    1aa2:	96 e0       	ldi	r25, 0x06	; 6
    1aa4:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:85
    1aa8:	60 91 c4 03 	lds	r22, 0x03C4	; 0x8003c4 <tmp>
    1aac:	70 91 c5 03 	lds	r23, 0x03C5	; 0x8003c5 <tmp+0x1>
    1ab0:	20 e0       	ldi	r18, 0x00	; 0
    1ab2:	40 e0       	ldi	r20, 0x00	; 0
    1ab4:	8c eb       	ldi	r24, 0xBC	; 188
    1ab6:	93 e0       	ldi	r25, 0x03	; 3
    1ab8:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:89
    1abc:	df 91       	pop	r29
    1abe:	cf 91       	pop	r28
    1ac0:	1f 91       	pop	r17
    1ac2:	0f 91       	pop	r16
    1ac4:	ff 90       	pop	r15
    1ac6:	ef 90       	pop	r14
    1ac8:	08 95       	ret

00001aca <SegmentControl()>:
_Z14SegmentControlv():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:91
    1aca:	0f 93       	push	r16
    1acc:	1f 93       	push	r17
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:92
    1ace:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1ad2:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1ad6:	01 96       	adiw	r24, 0x01	; 1
    1ad8:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <segment_cnt+0x1>
    1adc:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <segment_cnt>
    1ae0:	88 3e       	cpi	r24, 0xE8	; 232
    1ae2:	93 40       	sbci	r25, 0x03	; 3
    1ae4:	79 f4       	brne	.+30     	; 0x1b04 <SegmentControl()+0x3a>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:93
    1ae6:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1aea:	8f 5f       	subi	r24, 0xFF	; 255
    1aec:	80 93 de 03 	sts	0x03DE, r24	; 0x8003de <segement_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:94
    1af0:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <segment_cnt+0x1>
    1af4:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <segment_cnt>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:95
    1af8:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1afc:	85 30       	cpi	r24, 0x05	; 5
    1afe:	10 f0       	brcs	.+4      	; 0x1b04 <SegmentControl()+0x3a>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:95 (discriminator 1)
    1b00:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <segement_flag>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:98
    1b04:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1b08:	81 11       	cpse	r24, r1
    1b0a:	3e c0       	rjmp	.+124    	; 0x1b88 <SegmentControl()+0xbe>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:99
    1b0c:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1b10:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1b14:	01 97       	sbiw	r24, 0x01	; 1
    1b16:	c1 f4       	brne	.+48     	; 0x1b48 <SegmentControl()+0x7e>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:101
    1b18:	8c eb       	ldi	r24, 0xBC	; 188
    1b1a:	93 e0       	ldi	r25, 0x03	; 3
    1b1c:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:102
    1b20:	0a ee       	ldi	r16, 0xEA	; 234
    1b22:	10 e0       	ldi	r17, 0x00	; 0
    1b24:	20 e0       	ldi	r18, 0x00	; 0
    1b26:	50 e0       	ldi	r21, 0x00	; 0
    1b28:	40 e0       	ldi	r20, 0x00	; 0
    1b2a:	62 e7       	ldi	r22, 0x72	; 114
    1b2c:	72 e0       	ldi	r23, 0x02	; 2
    1b2e:	8c eb       	ldi	r24, 0xBC	; 188
    1b30:	93 e0       	ldi	r25, 0x03	; 3
    1b32:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:103
    1b36:	09 e4       	ldi	r16, 0x49	; 73
    1b38:	11 e0       	ldi	r17, 0x01	; 1
    1b3a:	21 e0       	ldi	r18, 0x01	; 1
    1b3c:	41 e0       	ldi	r20, 0x01	; 1
    1b3e:	61 e0       	ldi	r22, 0x01	; 1
    1b40:	8c eb       	ldi	r24, 0xBC	; 188
    1b42:	93 e0       	ldi	r25, 0x03	; 3
    1b44:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:105
    1b48:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1b4c:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1b50:	84 3f       	cpi	r24, 0xF4	; 244
    1b52:	91 40       	sbci	r25, 0x01	; 1
    1b54:	09 f0       	breq	.+2      	; 0x1b58 <SegmentControl()+0x8e>
    1b56:	e1 c0       	rjmp	.+450    	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:106
    1b58:	66 e7       	ldi	r22, 0x76	; 118
    1b5a:	72 e0       	ldi	r23, 0x02	; 2
    1b5c:	82 e1       	ldi	r24, 0x12	; 18
    1b5e:	96 e0       	ldi	r25, 0x06	; 6
    1b60:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:107
    1b64:	60 91 d2 03 	lds	r22, 0x03D2	; 0x8003d2 <p1dot0>
    1b68:	70 91 d3 03 	lds	r23, 0x03D3	; 0x8003d3 <p1dot0+0x1>
    1b6c:	4a e0       	ldi	r20, 0x0A	; 10
    1b6e:	50 e0       	ldi	r21, 0x00	; 0
    1b70:	82 e1       	ldi	r24, 0x12	; 18
    1b72:	96 e0       	ldi	r25, 0x06	; 6
    1b74:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:108
    1b78:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <p1dot0>
    1b7c:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <p1dot0+0x1>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:147
    1b80:	1f 91       	pop	r17
    1b82:	0f 91       	pop	r16
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:119
    1b84:	0c 94 d6 0c 	jmp	0x19ac	; 0x19ac <setSegmentInt(int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:110
    1b88:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1b8c:	81 30       	cpi	r24, 0x01	; 1
    1b8e:	d9 f5       	brne	.+118    	; 0x1c06 <SegmentControl()+0x13c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:111
    1b90:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1b94:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1b98:	89 2b       	or	r24, r25
    1b9a:	c1 f4       	brne	.+48     	; 0x1bcc <SegmentControl()+0x102>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:112
    1b9c:	8c eb       	ldi	r24, 0xBC	; 188
    1b9e:	93 e0       	ldi	r25, 0x03	; 3
    1ba0:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:113
    1ba4:	0a ee       	ldi	r16, 0xEA	; 234
    1ba6:	10 e0       	ldi	r17, 0x00	; 0
    1ba8:	20 e0       	ldi	r18, 0x00	; 0
    1baa:	50 e0       	ldi	r21, 0x00	; 0
    1bac:	40 e0       	ldi	r20, 0x00	; 0
    1bae:	6e e7       	ldi	r22, 0x7E	; 126
    1bb0:	72 e0       	ldi	r23, 0x02	; 2
    1bb2:	8c eb       	ldi	r24, 0xBC	; 188
    1bb4:	93 e0       	ldi	r25, 0x03	; 3
    1bb6:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:114
    1bba:	09 e4       	ldi	r16, 0x49	; 73
    1bbc:	11 e0       	ldi	r17, 0x01	; 1
    1bbe:	21 e0       	ldi	r18, 0x01	; 1
    1bc0:	41 e0       	ldi	r20, 0x01	; 1
    1bc2:	62 e0       	ldi	r22, 0x02	; 2
    1bc4:	8c eb       	ldi	r24, 0xBC	; 188
    1bc6:	93 e0       	ldi	r25, 0x03	; 3
    1bc8:	0e 94 98 14 	call	0x2930	; 0x2930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:116
    1bcc:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1bd0:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1bd4:	84 3f       	cpi	r24, 0xF4	; 244
    1bd6:	91 40       	sbci	r25, 0x01	; 1
    1bd8:	09 f0       	breq	.+2      	; 0x1bdc <SegmentControl()+0x112>
    1bda:	9f c0       	rjmp	.+318    	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:117
    1bdc:	62 e8       	ldi	r22, 0x82	; 130
    1bde:	72 e0       	ldi	r23, 0x02	; 2
    1be0:	82 e1       	ldi	r24, 0x12	; 18
    1be2:	96 e0       	ldi	r25, 0x06	; 6
    1be4:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:118
    1be8:	60 91 d0 03 	lds	r22, 0x03D0	; 0x8003d0 <p2dot5>
    1bec:	70 91 d1 03 	lds	r23, 0x03D1	; 0x8003d1 <p2dot5+0x1>
    1bf0:	4a e0       	ldi	r20, 0x0A	; 10
    1bf2:	50 e0       	ldi	r21, 0x00	; 0
    1bf4:	82 e1       	ldi	r24, 0x12	; 18
    1bf6:	96 e0       	ldi	r25, 0x06	; 6
    1bf8:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:119
    1bfc:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <p2dot5>
    1c00:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <p2dot5+0x1>
    1c04:	bd cf       	rjmp	.-134    	; 0x1b80 <SegmentControl()+0xb6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:121
    1c06:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1c0a:	82 30       	cpi	r24, 0x02	; 2
    1c0c:	91 f5       	brne	.+100    	; 0x1c72 <SegmentControl()+0x1a8>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:122
    1c0e:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1c12:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1c16:	89 2b       	or	r24, r25
    1c18:	79 f4       	brne	.+30     	; 0x1c38 <SegmentControl()+0x16e>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:123
    1c1a:	8c eb       	ldi	r24, 0xBC	; 188
    1c1c:	93 e0       	ldi	r25, 0x03	; 3
    1c1e:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:124
    1c22:	0a ee       	ldi	r16, 0xEA	; 234
    1c24:	10 e0       	ldi	r17, 0x00	; 0
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	50 e0       	ldi	r21, 0x00	; 0
    1c2a:	40 e0       	ldi	r20, 0x00	; 0
    1c2c:	62 e7       	ldi	r22, 0x72	; 114
    1c2e:	72 e0       	ldi	r23, 0x02	; 2
    1c30:	8c eb       	ldi	r24, 0xBC	; 188
    1c32:	93 e0       	ldi	r25, 0x03	; 3
    1c34:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:126
    1c38:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1c3c:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1c40:	84 3f       	cpi	r24, 0xF4	; 244
    1c42:	91 40       	sbci	r25, 0x01	; 1
    1c44:	09 f0       	breq	.+2      	; 0x1c48 <SegmentControl()+0x17e>
    1c46:	69 c0       	rjmp	.+210    	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:127
    1c48:	6a e8       	ldi	r22, 0x8A	; 138
    1c4a:	72 e0       	ldi	r23, 0x02	; 2
    1c4c:	82 e1       	ldi	r24, 0x12	; 18
    1c4e:	96 e0       	ldi	r25, 0x06	; 6
    1c50:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:128
    1c54:	60 91 ce 03 	lds	r22, 0x03CE	; 0x8003ce <p10>
    1c58:	70 91 cf 03 	lds	r23, 0x03CF	; 0x8003cf <p10+0x1>
    1c5c:	4a e0       	ldi	r20, 0x0A	; 10
    1c5e:	50 e0       	ldi	r21, 0x00	; 0
    1c60:	82 e1       	ldi	r24, 0x12	; 18
    1c62:	96 e0       	ldi	r25, 0x06	; 6
    1c64:	0e 94 2d 20 	call	0x405a	; 0x405a <Print::println(int, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:129
    1c68:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <p10>
    1c6c:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <p10+0x1>
    1c70:	87 cf       	rjmp	.-242    	; 0x1b80 <SegmentControl()+0xb6>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:131
    1c72:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1c76:	83 30       	cpi	r24, 0x03	; 3
    1c78:	41 f5       	brne	.+80     	; 0x1cca <SegmentControl()+0x200>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:132
    1c7a:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1c7e:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1c82:	89 2b       	or	r24, r25
    1c84:	09 f0       	breq	.+2      	; 0x1c88 <SegmentControl()+0x1be>
    1c86:	49 c0       	rjmp	.+146    	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:133
    1c88:	61 e9       	ldi	r22, 0x91	; 145
    1c8a:	72 e0       	ldi	r23, 0x02	; 2
    1c8c:	82 e1       	ldi	r24, 0x12	; 18
    1c8e:	96 e0       	ldi	r25, 0x06	; 6
    1c90:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:134
    1c94:	40 91 ca 03 	lds	r20, 0x03CA	; 0x8003ca <humidity>
    1c98:	50 91 cb 03 	lds	r21, 0x03CB	; 0x8003cb <humidity+0x1>
    1c9c:	60 91 cc 03 	lds	r22, 0x03CC	; 0x8003cc <humidity+0x2>
    1ca0:	70 91 cd 03 	lds	r23, 0x03CD	; 0x8003cd <humidity+0x3>
    1ca4:	22 e0       	ldi	r18, 0x02	; 2
    1ca6:	30 e0       	ldi	r19, 0x00	; 0
    1ca8:	82 e1       	ldi	r24, 0x12	; 18
    1caa:	96 e0       	ldi	r25, 0x06	; 6
    1cac:	0e 94 51 21 	call	0x42a2	; 0x42a2 <Print::println(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:136
    1cb0:	60 91 ca 03 	lds	r22, 0x03CA	; 0x8003ca <humidity>
    1cb4:	70 91 cb 03 	lds	r23, 0x03CB	; 0x8003cb <humidity+0x1>
    1cb8:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <humidity+0x2>
    1cbc:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <humidity+0x3>
    1cc0:	41 e0       	ldi	r20, 0x01	; 1
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:147
    1cc2:	1f 91       	pop	r17
    1cc4:	0f 91       	pop	r16
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:143
    1cc6:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <setSegmentFloat(float, bool)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:138
    1cca:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <segement_flag>
    1cce:	84 30       	cpi	r24, 0x04	; 4
    1cd0:	21 f5       	brne	.+72     	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:139
    1cd2:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <segment_cnt>
    1cd6:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <segment_cnt+0x1>
    1cda:	89 2b       	or	r24, r25
    1cdc:	f1 f4       	brne	.+60     	; 0x1d1a <SegmentControl()+0x250>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:140
    1cde:	6c e9       	ldi	r22, 0x9C	; 156
    1ce0:	72 e0       	ldi	r23, 0x02	; 2
    1ce2:	82 e1       	ldi	r24, 0x12	; 18
    1ce4:	96 e0       	ldi	r25, 0x06	; 6
    1ce6:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:141
    1cea:	40 91 c6 03 	lds	r20, 0x03C6	; 0x8003c6 <temperature>
    1cee:	50 91 c7 03 	lds	r21, 0x03C7	; 0x8003c7 <temperature+0x1>
    1cf2:	60 91 c8 03 	lds	r22, 0x03C8	; 0x8003c8 <temperature+0x2>
    1cf6:	70 91 c9 03 	lds	r23, 0x03C9	; 0x8003c9 <temperature+0x3>
    1cfa:	22 e0       	ldi	r18, 0x02	; 2
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	82 e1       	ldi	r24, 0x12	; 18
    1d00:	96 e0       	ldi	r25, 0x06	; 6
    1d02:	0e 94 51 21 	call	0x42a2	; 0x42a2 <Print::println(double, int)>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:143
    1d06:	60 91 c6 03 	lds	r22, 0x03C6	; 0x8003c6 <temperature>
    1d0a:	70 91 c7 03 	lds	r23, 0x03C7	; 0x8003c7 <temperature+0x1>
    1d0e:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <temperature+0x2>
    1d12:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <temperature+0x3>
    1d16:	40 e0       	ldi	r20, 0x00	; 0
    1d18:	d4 cf       	rjmp	.-88     	; 0x1cc2 <SegmentControl()+0x1f8>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:147
    1d1a:	1f 91       	pop	r17
    1d1c:	0f 91       	pop	r16
    1d1e:	08 95       	ret

00001d20 <loop>:
loop():
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:364
    1d20:	0e 94 57 0a 	call	0x14ae	; 0x14ae <ReceiveIR()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:365
    1d24:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <Power>
    1d28:	88 23       	and	r24, r24
    1d2a:	41 f0       	breq	.+16     	; 0x1d3c <loop+0x1c>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:366
    1d2c:	0e 94 24 09 	call	0x1248	; 0x1248 <PlasmaControl()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:367
    1d30:	0e 94 65 0d 	call	0x1aca	; 0x1aca <SegmentControl()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:368
    1d34:	0e 94 9c 08 	call	0x1138	; 0x1138 <Read_dust_value()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:369
    1d38:	0e 94 70 09 	call	0x12e0	; 0x12e0 <CheckO3()>
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\Sketch11\MiniCore_328\Debug/.vmpreproc/C:\Users\dlcks\Desktop\?꾨몢?대끂\7segment ?뚮씪利덈쭏\ver\Ide_test\Sketch11/Sketch11.ino:371
    1d3c:	61 e0       	ldi	r22, 0x01	; 1
    1d3e:	70 e0       	ldi	r23, 0x00	; 0
    1d40:	80 e0       	ldi	r24, 0x00	; 0
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0c 94 b4 1b 	jmp	0x3768	; 0x3768 <delay>

00001d48 <AM1008W_K_I2C::begin(TwoWire&)>:
_ZN13AM1008W_K_I2C5beginER7TwoWire():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:212
    1d48:	fc 01       	movw	r30, r24
    1d4a:	71 a3       	std	Z+33, r23	; 0x21
    1d4c:	60 a3       	std	Z+32, r22	; 0x20
    1d4e:	cb 01       	movw	r24, r22
    1d50:	0c 94 78 18 	jmp	0x30f0	; 0x30f0 <TwoWire::begin()>

00001d54 <AM1008W_K_I2C::read_data_command()>:
_ZN13AM1008W_K_I2C17read_data_commandEv():
    1d54:	ef 92       	push	r14
    1d56:	ff 92       	push	r15
    1d58:	0f 93       	push	r16
    1d5a:	1f 93       	push	r17
    1d5c:	cf 93       	push	r28
    1d5e:	df 93       	push	r29
    1d60:	ec 01       	movw	r28, r24
    1d62:	49 e1       	ldi	r20, 0x19	; 25
    1d64:	50 e0       	ldi	r21, 0x00	; 0
    1d66:	68 e2       	ldi	r22, 0x28	; 40
    1d68:	70 e0       	ldi	r23, 0x00	; 0
    1d6a:	88 a1       	ldd	r24, Y+32	; 0x20
    1d6c:	99 a1       	ldd	r25, Y+33	; 0x21
    1d6e:	0e 94 0a 19 	call	0x3214	; 0x3214 <TwoWire::requestFrom(int, int)>
    1d72:	7e 01       	movw	r14, r28
    1d74:	89 e1       	ldi	r24, 0x19	; 25
    1d76:	e8 0e       	add	r14, r24
    1d78:	f1 1c       	adc	r15, r1
    1d7a:	8e 01       	movw	r16, r28
    1d7c:	88 a1       	ldd	r24, Y+32	; 0x20
    1d7e:	99 a1       	ldd	r25, Y+33	; 0x21
    1d80:	dc 01       	movw	r26, r24
    1d82:	ed 91       	ld	r30, X+
    1d84:	fc 91       	ld	r31, X
    1d86:	00 84       	ldd	r0, Z+8	; 0x08
    1d88:	f1 85       	ldd	r31, Z+9	; 0x09
    1d8a:	e0 2d       	mov	r30, r0
    1d8c:	09 95       	icall
    1d8e:	89 2b       	or	r24, r25
    1d90:	09 f4       	brne	.+2      	; 0x1d94 <AM1008W_K_I2C::read_data_command()+0x40>
    1d92:	ad c0       	rjmp	.+346    	; 0x1eee <AM1008W_K_I2C::read_data_command()+0x19a>
    1d94:	88 a1       	ldd	r24, Y+32	; 0x20
    1d96:	99 a1       	ldd	r25, Y+33	; 0x21
    1d98:	dc 01       	movw	r26, r24
    1d9a:	ed 91       	ld	r30, X+
    1d9c:	fc 91       	ld	r31, X
    1d9e:	02 84       	ldd	r0, Z+10	; 0x0a
    1da0:	f3 85       	ldd	r31, Z+11	; 0x0b
    1da2:	e0 2d       	mov	r30, r0
    1da4:	09 95       	icall
    1da6:	f8 01       	movw	r30, r16
    1da8:	81 93       	st	Z+, r24
    1daa:	8f 01       	movw	r16, r30
    1dac:	ee 15       	cp	r30, r14
    1dae:	ff 05       	cpc	r31, r15
    1db0:	29 f7       	brne	.-54     	; 0x1d7c <AM1008W_K_I2C::read_data_command()+0x28>
    1db2:	88 81       	ld	r24, Y
    1db4:	86 31       	cpi	r24, 0x16	; 22
    1db6:	11 f0       	breq	.+4      	; 0x1dbc <AM1008W_K_I2C::read_data_command()+0x68>
    1db8:	82 e0       	ldi	r24, 0x02	; 2
    1dba:	92 c0       	rjmp	.+292    	; 0x1ee0 <AM1008W_K_I2C::read_data_command()+0x18c>
    1dbc:	99 81       	ldd	r25, Y+1	; 0x01
    1dbe:	99 31       	cpi	r25, 0x19	; 25
    1dc0:	09 f0       	breq	.+2      	; 0x1dc4 <AM1008W_K_I2C::read_data_command()+0x70>
    1dc2:	97 c0       	rjmp	.+302    	; 0x1ef2 <AM1008W_K_I2C::read_data_command()+0x19e>
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	31 96       	adiw	r30, 0x01	; 1
    1dc8:	9e 01       	movw	r18, r28
    1dca:	28 5e       	subi	r18, 0xE8	; 232
    1dcc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dce:	91 91       	ld	r25, Z+
    1dd0:	89 27       	eor	r24, r25
    1dd2:	2e 17       	cp	r18, r30
    1dd4:	3f 07       	cpc	r19, r31
    1dd6:	d9 f7       	brne	.-10     	; 0x1dce <AM1008W_K_I2C::read_data_command()+0x7a>
    1dd8:	98 8d       	ldd	r25, Y+24	; 0x18
    1dda:	98 13       	cpse	r25, r24
    1ddc:	8c c0       	rjmp	.+280    	; 0x1ef6 <AM1008W_K_I2C::read_data_command()+0x1a2>
    1dde:	8a 81       	ldd	r24, Y+2	; 0x02
    1de0:	8a a3       	std	Y+34, r24	; 0x22
    1de2:	8b 81       	ldd	r24, Y+3	; 0x03
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	98 2f       	mov	r25, r24
    1de8:	88 27       	eor	r24, r24
    1dea:	2c 81       	ldd	r18, Y+4	; 0x04
    1dec:	82 0f       	add	r24, r18
    1dee:	91 1d       	adc	r25, r1
    1df0:	9c a3       	std	Y+36, r25	; 0x24
    1df2:	8b a3       	std	Y+35, r24	; 0x23
    1df4:	8d 81       	ldd	r24, Y+5	; 0x05
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	98 2f       	mov	r25, r24
    1dfa:	88 27       	eor	r24, r24
    1dfc:	2e 81       	ldd	r18, Y+6	; 0x06
    1dfe:	82 0f       	add	r24, r18
    1e00:	91 1d       	adc	r25, r1
    1e02:	9e a3       	std	Y+38, r25	; 0x26
    1e04:	8d a3       	std	Y+37, r24	; 0x25
    1e06:	6f 81       	ldd	r22, Y+7	; 0x07
    1e08:	86 2f       	mov	r24, r22
    1e0a:	90 e0       	ldi	r25, 0x00	; 0
    1e0c:	98 2f       	mov	r25, r24
    1e0e:	88 27       	eor	r24, r24
    1e10:	68 85       	ldd	r22, Y+8	; 0x08
    1e12:	68 0f       	add	r22, r24
    1e14:	79 2f       	mov	r23, r25
    1e16:	71 1d       	adc	r23, r1
    1e18:	07 2e       	mov	r0, r23
    1e1a:	00 0c       	add	r0, r0
    1e1c:	88 0b       	sbc	r24, r24
    1e1e:	99 0b       	sbc	r25, r25
    1e20:	0e 94 80 22 	call	0x4500	; 0x4500 <__floatsisf>
    1e24:	20 e0       	ldi	r18, 0x00	; 0
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	40 e2       	ldi	r20, 0x20	; 32
    1e2a:	51 e4       	ldi	r21, 0x41	; 65
    1e2c:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    1e30:	6f a3       	std	Y+39, r22	; 0x27
    1e32:	78 a7       	std	Y+40, r23	; 0x28
    1e34:	89 a7       	std	Y+41, r24	; 0x29
    1e36:	9a a7       	std	Y+42, r25	; 0x2a
    1e38:	69 85       	ldd	r22, Y+9	; 0x09
    1e3a:	86 2f       	mov	r24, r22
    1e3c:	90 e0       	ldi	r25, 0x00	; 0
    1e3e:	98 2f       	mov	r25, r24
    1e40:	88 27       	eor	r24, r24
    1e42:	6a 85       	ldd	r22, Y+10	; 0x0a
    1e44:	68 0f       	add	r22, r24
    1e46:	79 2f       	mov	r23, r25
    1e48:	71 1d       	adc	r23, r1
    1e4a:	64 5f       	subi	r22, 0xF4	; 244
    1e4c:	71 40       	sbci	r23, 0x01	; 1
    1e4e:	07 2e       	mov	r0, r23
    1e50:	00 0c       	add	r0, r0
    1e52:	88 0b       	sbc	r24, r24
    1e54:	99 0b       	sbc	r25, r25
    1e56:	0e 94 80 22 	call	0x4500	; 0x4500 <__floatsisf>
    1e5a:	20 e0       	ldi	r18, 0x00	; 0
    1e5c:	30 e0       	ldi	r19, 0x00	; 0
    1e5e:	40 e2       	ldi	r20, 0x20	; 32
    1e60:	51 e4       	ldi	r21, 0x41	; 65
    1e62:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    1e66:	6b a7       	std	Y+43, r22	; 0x2b
    1e68:	7c a7       	std	Y+44, r23	; 0x2c
    1e6a:	8d a7       	std	Y+45, r24	; 0x2d
    1e6c:	9e a7       	std	Y+46, r25	; 0x2e
    1e6e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e70:	90 e0       	ldi	r25, 0x00	; 0
    1e72:	98 2f       	mov	r25, r24
    1e74:	88 27       	eor	r24, r24
    1e76:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e78:	82 0f       	add	r24, r18
    1e7a:	91 1d       	adc	r25, r1
    1e7c:	98 ab       	std	Y+48, r25	; 0x30
    1e7e:	8f a7       	std	Y+47, r24	; 0x2f
    1e80:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	98 2f       	mov	r25, r24
    1e86:	88 27       	eor	r24, r24
    1e88:	2e 85       	ldd	r18, Y+14	; 0x0e
    1e8a:	82 0f       	add	r24, r18
    1e8c:	91 1d       	adc	r25, r1
    1e8e:	9a ab       	std	Y+50, r25	; 0x32
    1e90:	89 ab       	std	Y+49, r24	; 0x31
    1e92:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	98 2f       	mov	r25, r24
    1e98:	88 27       	eor	r24, r24
    1e9a:	28 89       	ldd	r18, Y+16	; 0x10
    1e9c:	82 0f       	add	r24, r18
    1e9e:	91 1d       	adc	r25, r1
    1ea0:	9c ab       	std	Y+52, r25	; 0x34
    1ea2:	8b ab       	std	Y+51, r24	; 0x33
    1ea4:	89 89       	ldd	r24, Y+17	; 0x11
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	98 2f       	mov	r25, r24
    1eaa:	88 27       	eor	r24, r24
    1eac:	2a 89       	ldd	r18, Y+18	; 0x12
    1eae:	82 0f       	add	r24, r18
    1eb0:	91 1d       	adc	r25, r1
    1eb2:	9e ab       	std	Y+54, r25	; 0x36
    1eb4:	8d ab       	std	Y+53, r24	; 0x35
    1eb6:	8b 89       	ldd	r24, Y+19	; 0x13
    1eb8:	90 e0       	ldi	r25, 0x00	; 0
    1eba:	98 2f       	mov	r25, r24
    1ebc:	88 27       	eor	r24, r24
    1ebe:	2c 89       	ldd	r18, Y+20	; 0x14
    1ec0:	82 0f       	add	r24, r18
    1ec2:	91 1d       	adc	r25, r1
    1ec4:	98 af       	std	Y+56, r25	; 0x38
    1ec6:	8f ab       	std	Y+55, r24	; 0x37
    1ec8:	8d 89       	ldd	r24, Y+21	; 0x15
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	98 2f       	mov	r25, r24
    1ece:	88 27       	eor	r24, r24
    1ed0:	2e 89       	ldd	r18, Y+22	; 0x16
    1ed2:	82 0f       	add	r24, r18
    1ed4:	91 1d       	adc	r25, r1
    1ed6:	9a af       	std	Y+58, r25	; 0x3a
    1ed8:	89 af       	std	Y+57, r24	; 0x39
    1eda:	8f 89       	ldd	r24, Y+23	; 0x17
    1edc:	8b af       	std	Y+59, r24	; 0x3b
    1ede:	80 e0       	ldi	r24, 0x00	; 0
    1ee0:	df 91       	pop	r29
    1ee2:	cf 91       	pop	r28
    1ee4:	1f 91       	pop	r17
    1ee6:	0f 91       	pop	r16
    1ee8:	ff 90       	pop	r15
    1eea:	ef 90       	pop	r14
    1eec:	08 95       	ret
    1eee:	81 e0       	ldi	r24, 0x01	; 1
    1ef0:	f7 cf       	rjmp	.-18     	; 0x1ee0 <AM1008W_K_I2C::read_data_command()+0x18c>
    1ef2:	83 e0       	ldi	r24, 0x03	; 3
    1ef4:	f5 cf       	rjmp	.-22     	; 0x1ee0 <AM1008W_K_I2C::read_data_command()+0x18c>
    1ef6:	84 e0       	ldi	r24, 0x04	; 4
    1ef8:	f3 cf       	rjmp	.-26     	; 0x1ee0 <AM1008W_K_I2C::read_data_command()+0x18c>

00001efa <AM1008W_K_I2C::get_humidity()>:
_ZN13AM1008W_K_I2C12get_humidityEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:220
    1efa:	fc 01       	movw	r30, r24
    1efc:	67 a1       	ldd	r22, Z+39	; 0x27
    1efe:	70 a5       	ldd	r23, Z+40	; 0x28
    1f00:	81 a5       	ldd	r24, Z+41	; 0x29
    1f02:	92 a5       	ldd	r25, Z+42	; 0x2a
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:221
    1f04:	08 95       	ret

00001f06 <AM1008W_K_I2C::get_temperature()>:
_ZN13AM1008W_K_I2C15get_temperatureEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:229
    1f06:	fc 01       	movw	r30, r24
    1f08:	63 a5       	ldd	r22, Z+43	; 0x2b
    1f0a:	74 a5       	ldd	r23, Z+44	; 0x2c
    1f0c:	85 a5       	ldd	r24, Z+45	; 0x2d
    1f0e:	96 a5       	ldd	r25, Z+46	; 0x2e
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:230
    1f10:	08 95       	ret

00001f12 <AM1008W_K_I2C::get_pm1p0()>:
_ZN13AM1008W_K_I2C9get_pm1p0Ev():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:239
    1f12:	fc 01       	movw	r30, r24
    1f14:	87 a5       	ldd	r24, Z+47	; 0x2f
    1f16:	90 a9       	ldd	r25, Z+48	; 0x30
    1f18:	08 95       	ret

00001f1a <AM1008W_K_I2C::get_pm2p5()>:
_ZN13AM1008W_K_I2C9get_pm2p5Ev():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:248
    1f1a:	fc 01       	movw	r30, r24
    1f1c:	81 a9       	ldd	r24, Z+49	; 0x31
    1f1e:	92 a9       	ldd	r25, Z+50	; 0x32
    1f20:	08 95       	ret

00001f22 <AM1008W_K_I2C::get_pm10()>:
_ZN13AM1008W_K_I2C8get_pm10Ev():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/am1008w_k_i2c.cpp:257
    1f22:	fc 01       	movw	r30, r24
    1f24:	83 a9       	ldd	r24, Z+51	; 0x33
    1f26:	94 a9       	ldd	r25, Z+52	; 0x34
    1f28:	08 95       	ret

00001f2a <MQ131Class::~MQ131Class()>:
_ZN10MQ131ClassD2Ev():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:323
    1f2a:	08 95       	ret

00001f2c <MQ131Class::~MQ131Class()>:
_ZN10MQ131ClassD0Ev():
    1f2c:	6f e1       	ldi	r22, 0x1F	; 31
    1f2e:	70 e0       	ldi	r23, 0x00	; 0
    1f30:	0c 94 2a 1f 	jmp	0x3e54	; 0x3e54 <operator delete(void*, unsigned int)>

00001f34 <MQ131Class::MQ131Class(unsigned long)>:
_ZN10MQ131ClassC2Em():
    1f34:	fc 01       	movw	r30, r24
    1f36:	8e ea       	ldi	r24, 0xAE	; 174
    1f38:	92 e0       	ldi	r25, 0x02	; 2
    1f3a:	91 83       	std	Z+1, r25	; 0x01
    1f3c:	80 83       	st	Z, r24
    1f3e:	15 82       	std	Z+5, r1	; 0x05
    1f40:	14 82       	std	Z+4, r1	; 0x04
    1f42:	16 82       	std	Z+6, r1	; 0x06
    1f44:	8f ef       	ldi	r24, 0xFF	; 255
    1f46:	87 83       	std	Z+7, r24	; 0x07
    1f48:	80 87       	std	Z+8, r24	; 0x08
    1f4a:	8f ef       	ldi	r24, 0xFF	; 255
    1f4c:	9f ef       	ldi	r25, 0xFF	; 255
    1f4e:	dc 01       	movw	r26, r24
    1f50:	85 87       	std	Z+13, r24	; 0x0d
    1f52:	96 87       	std	Z+14, r25	; 0x0e
    1f54:	a7 87       	std	Z+15, r26	; 0x0f
    1f56:	b0 8b       	std	Z+16, r27	; 0x10
    1f58:	81 8b       	std	Z+17, r24	; 0x11
    1f5a:	92 8b       	std	Z+18, r25	; 0x12
    1f5c:	a3 8b       	std	Z+19, r26	; 0x13
    1f5e:	b4 8b       	std	Z+20, r27	; 0x14
    1f60:	80 e0       	ldi	r24, 0x00	; 0
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	a0 e8       	ldi	r26, 0x80	; 128
    1f66:	bf eb       	ldi	r27, 0xBF	; 191
    1f68:	85 8b       	std	Z+21, r24	; 0x15
    1f6a:	96 8b       	std	Z+22, r25	; 0x16
    1f6c:	a7 8b       	std	Z+23, r26	; 0x17
    1f6e:	b0 8f       	std	Z+24, r27	; 0x18
    1f70:	81 8f       	std	Z+25, r24	; 0x19
    1f72:	92 8f       	std	Z+26, r25	; 0x1a
    1f74:	a3 8f       	std	Z+27, r26	; 0x1b
    1f76:	b4 8f       	std	Z+28, r27	; 0x1c
    1f78:	84 e1       	ldi	r24, 0x14	; 20
    1f7a:	85 8f       	std	Z+29, r24	; 0x1d
    1f7c:	81 e4       	ldi	r24, 0x41	; 65
    1f7e:	86 8f       	std	Z+30, r24	; 0x1e
    1f80:	41 87       	std	Z+9, r20	; 0x09
    1f82:	52 87       	std	Z+10, r21	; 0x0a
    1f84:	63 87       	std	Z+11, r22	; 0x0b
    1f86:	74 87       	std	Z+12, r23	; 0x0c
    1f88:	08 95       	ret

00001f8a <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)>:
_ZN10MQ131Class5beginEhh10MQ131ModelmP6Stream():
    1f8a:	cf 92       	push	r12
    1f8c:	df 92       	push	r13
    1f8e:	ef 92       	push	r14
    1f90:	ff 92       	push	r15
    1f92:	0f 93       	push	r16
    1f94:	1f 93       	push	r17
    1f96:	cf 93       	push	r28
    1f98:	df 93       	push	r29
    1f9a:	ec 01       	movw	r28, r24
    1f9c:	86 2f       	mov	r24, r22
    1f9e:	91 e0       	ldi	r25, 0x01	; 1
    1fa0:	c1 14       	cp	r12, r1
    1fa2:	d1 04       	cpc	r13, r1
    1fa4:	09 f4       	brne	.+2      	; 0x1fa8 <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)+0x1e>
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	9e 83       	std	Y+6, r25	; 0x06
    1faa:	dd 82       	std	Y+5, r13	; 0x05
    1fac:	cc 82       	std	Y+4, r12	; 0x04
    1fae:	3b 83       	std	Y+3, r19	; 0x03
    1fb0:	2a 83       	std	Y+2, r18	; 0x02
    1fb2:	8f 83       	std	Y+7, r24	; 0x07
    1fb4:	48 87       	std	Y+8, r20	; 0x08
    1fb6:	e9 86       	std	Y+9, r14	; 0x09
    1fb8:	fa 86       	std	Y+10, r15	; 0x0a
    1fba:	0b 87       	std	Y+11, r16	; 0x0b
    1fbc:	1c 87       	std	Y+12, r17	; 0x0c
    1fbe:	21 30       	cpi	r18, 0x01	; 1
    1fc0:	31 05       	cpc	r19, r1
    1fc2:	39 f1       	breq	.+78     	; 0x2012 <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)+0x88>
    1fc4:	18 f0       	brcs	.+6      	; 0x1fcc <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)+0x42>
    1fc6:	22 30       	cpi	r18, 0x02	; 2
    1fc8:	31 05       	cpc	r19, r1
    1fca:	81 f4       	brne	.+32     	; 0x1fec <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)+0x62>
_ZN10MQ131Class5setR0Ef():
    1fcc:	4a e0       	ldi	r20, 0x0A	; 10
    1fce:	57 ea       	ldi	r21, 0xA7	; 167
    1fd0:	6f ee       	ldi	r22, 0xEF	; 239
    1fd2:	74 e4       	ldi	r23, 0x44	; 68
    1fd4:	4d 8b       	std	Y+21, r20	; 0x15
    1fd6:	5e 8b       	std	Y+22, r21	; 0x16
    1fd8:	6f 8b       	std	Y+23, r22	; 0x17
    1fda:	78 8f       	std	Y+24, r23	; 0x18
_ZN10MQ131Class13setTimeToReadEm():
    1fdc:	40 e5       	ldi	r20, 0x50	; 80
    1fde:	50 e0       	ldi	r21, 0x00	; 0
    1fe0:	60 e0       	ldi	r22, 0x00	; 0
    1fe2:	70 e0       	ldi	r23, 0x00	; 0
    1fe4:	49 8b       	std	Y+17, r20	; 0x11
    1fe6:	5a 8b       	std	Y+18, r21	; 0x12
    1fe8:	6b 8b       	std	Y+19, r22	; 0x13
    1fea:	7c 8b       	std	Y+20, r23	; 0x14
_ZN10MQ131Class5beginEhh10MQ131ModelmP6Stream():
    1fec:	61 e0       	ldi	r22, 0x01	; 1
    1fee:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
    1ff2:	60 e0       	ldi	r22, 0x00	; 0
    1ff4:	88 85       	ldd	r24, Y+8	; 0x08
    1ff6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
    1ffa:	60 e0       	ldi	r22, 0x00	; 0
    1ffc:	8f 81       	ldd	r24, Y+7	; 0x07
    1ffe:	df 91       	pop	r29
    2000:	cf 91       	pop	r28
    2002:	1f 91       	pop	r17
    2004:	0f 91       	pop	r16
    2006:	ff 90       	pop	r15
    2008:	ef 90       	pop	r14
    200a:	df 90       	pop	r13
    200c:	cf 90       	pop	r12
    200e:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>
_ZN10MQ131Class5setR0Ef():
    2012:	40 e0       	ldi	r20, 0x00	; 0
    2014:	50 e0       	ldi	r21, 0x00	; 0
    2016:	6b e6       	ldi	r22, 0x6B	; 107
    2018:	73 e4       	ldi	r23, 0x43	; 67
    201a:	dc cf       	rjmp	.-72     	; 0x1fd4 <MQ131Class::begin(unsigned char, unsigned char, MQ131Model, unsigned long, Stream*)+0x4a>

0000201c <MQ131Class::startHeater()>:
_ZN10MQ131Class11startHeaterEv():
    201c:	cf 93       	push	r28
    201e:	df 93       	push	r29
    2020:	ec 01       	movw	r28, r24
    2022:	61 e0       	ldi	r22, 0x01	; 1
    2024:	8f 81       	ldd	r24, Y+7	; 0x07
    2026:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    202a:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
    202e:	28 ee       	ldi	r18, 0xE8	; 232
    2030:	33 e0       	ldi	r19, 0x03	; 3
    2032:	40 e0       	ldi	r20, 0x00	; 0
    2034:	50 e0       	ldi	r21, 0x00	; 0
    2036:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <__udivmodsi4>
    203a:	2d 87       	std	Y+13, r18	; 0x0d
    203c:	3e 87       	std	Y+14, r19	; 0x0e
    203e:	4f 87       	std	Y+15, r20	; 0x0f
    2040:	58 8b       	std	Y+16, r21	; 0x10
    2042:	df 91       	pop	r29
    2044:	cf 91       	pop	r28
    2046:	08 95       	ret

00002048 <MQ131Class::isTimeToRead()>:
_ZN10MQ131Class12isTimeToReadEv():
    2048:	cf 92       	push	r12
    204a:	df 92       	push	r13
    204c:	ef 92       	push	r14
    204e:	ff 92       	push	r15
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	ec 01       	movw	r28, r24
    2056:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
    205a:	28 ee       	ldi	r18, 0xE8	; 232
    205c:	33 e0       	ldi	r19, 0x03	; 3
    205e:	40 e0       	ldi	r20, 0x00	; 0
    2060:	50 e0       	ldi	r21, 0x00	; 0
    2062:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <__udivmodsi4>
    2066:	cd 84       	ldd	r12, Y+13	; 0x0d
    2068:	de 84       	ldd	r13, Y+14	; 0x0e
    206a:	ef 84       	ldd	r14, Y+15	; 0x0f
    206c:	f8 88       	ldd	r15, Y+16	; 0x10
    206e:	89 89       	ldd	r24, Y+17	; 0x11
    2070:	9a 89       	ldd	r25, Y+18	; 0x12
    2072:	ab 89       	ldd	r26, Y+19	; 0x13
    2074:	bc 89       	ldd	r27, Y+20	; 0x14
    2076:	8c 0d       	add	r24, r12
    2078:	9d 1d       	adc	r25, r13
    207a:	ae 1d       	adc	r26, r14
    207c:	bf 1d       	adc	r27, r15
    207e:	61 e0       	ldi	r22, 0x01	; 1
    2080:	28 17       	cp	r18, r24
    2082:	39 07       	cpc	r19, r25
    2084:	4a 07       	cpc	r20, r26
    2086:	5b 07       	cpc	r21, r27
    2088:	08 f4       	brcc	.+2      	; 0x208c <MQ131Class::isTimeToRead()+0x44>
    208a:	60 e0       	ldi	r22, 0x00	; 0
    208c:	86 2f       	mov	r24, r22
    208e:	df 91       	pop	r29
    2090:	cf 91       	pop	r28
    2092:	ff 90       	pop	r15
    2094:	ef 90       	pop	r14
    2096:	df 90       	pop	r13
    2098:	cf 90       	pop	r12
    209a:	08 95       	ret

0000209c <MQ131Class::stopHeater()>:
_ZN10MQ131Class10stopHeaterEv():
    209c:	cf 93       	push	r28
    209e:	df 93       	push	r29
    20a0:	ec 01       	movw	r28, r24
    20a2:	60 e0       	ldi	r22, 0x00	; 0
    20a4:	8f 81       	ldd	r24, Y+7	; 0x07
    20a6:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    20aa:	8f ef       	ldi	r24, 0xFF	; 255
    20ac:	9f ef       	ldi	r25, 0xFF	; 255
    20ae:	dc 01       	movw	r26, r24
    20b0:	8d 87       	std	Y+13, r24	; 0x0d
    20b2:	9e 87       	std	Y+14, r25	; 0x0e
    20b4:	af 87       	std	Y+15, r26	; 0x0f
    20b6:	b8 8b       	std	Y+16, r27	; 0x10
    20b8:	df 91       	pop	r29
    20ba:	cf 91       	pop	r28
    20bc:	08 95       	ret

000020be <MQ131Class::setTimeToRead(unsigned long)>:
_ZN10MQ131Class13setTimeToReadEm():
    20be:	fc 01       	movw	r30, r24
    20c0:	41 8b       	std	Z+17, r20	; 0x11
    20c2:	52 8b       	std	Z+18, r21	; 0x12
    20c4:	63 8b       	std	Z+19, r22	; 0x13
    20c6:	74 8b       	std	Z+20, r23	; 0x14
    20c8:	08 95       	ret

000020ca <MQ131Class::readRs()>:
_ZN10MQ131Class6readRsEv():
    20ca:	8f 92       	push	r8
    20cc:	9f 92       	push	r9
    20ce:	af 92       	push	r10
    20d0:	bf 92       	push	r11
    20d2:	cf 92       	push	r12
    20d4:	df 92       	push	r13
    20d6:	ef 92       	push	r14
    20d8:	ff 92       	push	r15
    20da:	cf 93       	push	r28
    20dc:	df 93       	push	r29
    20de:	ec 01       	movw	r28, r24
    20e0:	88 85       	ldd	r24, Y+8	; 0x08
    20e2:	0e 94 20 1c 	call	0x3840	; 0x3840 <analogRead>
    20e6:	bc 01       	movw	r22, r24
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	80 e0       	ldi	r24, 0x00	; 0
    20ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <__floatunsisf>
    20f0:	20 e0       	ldi	r18, 0x00	; 0
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	40 e8       	ldi	r20, 0x80	; 128
    20f6:	5a e3       	ldi	r21, 0x3A	; 58
    20f8:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	40 ea       	ldi	r20, 0xA0	; 160
    2102:	50 e4       	ldi	r21, 0x40	; 64
    2104:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2108:	6b 01       	movw	r12, r22
    210a:	7c 01       	movw	r14, r24
    210c:	20 e0       	ldi	r18, 0x00	; 0
    210e:	30 e0       	ldi	r19, 0x00	; 0
    2110:	a9 01       	movw	r20, r18
    2112:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <__cmpsf2>
    2116:	88 23       	and	r24, r24
    2118:	39 f1       	breq	.+78     	; 0x2168 <MQ131Class::readRs()+0x9e>
    211a:	69 85       	ldd	r22, Y+9	; 0x09
    211c:	7a 85       	ldd	r23, Y+10	; 0x0a
    211e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2120:	9c 85       	ldd	r25, Y+12	; 0x0c
    2122:	0e 94 7e 22 	call	0x44fc	; 0x44fc <__floatunsisf>
    2126:	4b 01       	movw	r8, r22
    2128:	5c 01       	movw	r10, r24
    212a:	a7 01       	movw	r20, r14
    212c:	96 01       	movw	r18, r12
    212e:	60 e0       	ldi	r22, 0x00	; 0
    2130:	70 e0       	ldi	r23, 0x00	; 0
    2132:	80 ea       	ldi	r24, 0xA0	; 160
    2134:	90 e4       	ldi	r25, 0x40	; 64
    2136:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    213a:	20 e0       	ldi	r18, 0x00	; 0
    213c:	30 e0       	ldi	r19, 0x00	; 0
    213e:	40 e8       	ldi	r20, 0x80	; 128
    2140:	5f e3       	ldi	r21, 0x3F	; 63
    2142:	0e 94 64 21 	call	0x42c8	; 0x42c8 <__subsf3>
    2146:	9b 01       	movw	r18, r22
    2148:	ac 01       	movw	r20, r24
    214a:	c5 01       	movw	r24, r10
    214c:	b4 01       	movw	r22, r8
    214e:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2152:	df 91       	pop	r29
    2154:	cf 91       	pop	r28
    2156:	ff 90       	pop	r15
    2158:	ef 90       	pop	r14
    215a:	df 90       	pop	r13
    215c:	cf 90       	pop	r12
    215e:	bf 90       	pop	r11
    2160:	af 90       	pop	r10
    2162:	9f 90       	pop	r9
    2164:	8f 90       	pop	r8
    2166:	08 95       	ret
    2168:	60 e0       	ldi	r22, 0x00	; 0
    216a:	70 e0       	ldi	r23, 0x00	; 0
    216c:	cb 01       	movw	r24, r22
    216e:	f1 cf       	rjmp	.-30     	; 0x2152 <MQ131Class::readRs()+0x88>

00002170 <MQ131Class::sample()>:
_ZN10MQ131Class6sampleEv():
    2170:	cf 93       	push	r28
    2172:	df 93       	push	r29
    2174:	ec 01       	movw	r28, r24
    2176:	0e 94 0e 10 	call	0x201c	; 0x201c <MQ131Class::startHeater()>
    217a:	ce 01       	movw	r24, r28
    217c:	0e 94 24 10 	call	0x2048	; 0x2048 <MQ131Class::isTimeToRead()>
    2180:	81 11       	cpse	r24, r1
    2182:	07 c0       	rjmp	.+14     	; 0x2192 <MQ131Class::sample()+0x22>
    2184:	61 e0       	ldi	r22, 0x01	; 1
    2186:	70 e0       	ldi	r23, 0x00	; 0
    2188:	80 e0       	ldi	r24, 0x00	; 0
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	0e 94 b4 1b 	call	0x3768	; 0x3768 <delay>
    2190:	f4 cf       	rjmp	.-24     	; 0x217a <MQ131Class::sample()+0xa>
    2192:	ce 01       	movw	r24, r28
    2194:	0e 94 65 10 	call	0x20ca	; 0x20ca <MQ131Class::readRs()>
    2198:	69 8f       	std	Y+25, r22	; 0x19
    219a:	7a 8f       	std	Y+26, r23	; 0x1a
    219c:	8b 8f       	std	Y+27, r24	; 0x1b
    219e:	9c 8f       	std	Y+28, r25	; 0x1c
    21a0:	ce 01       	movw	r24, r28
    21a2:	df 91       	pop	r29
    21a4:	cf 91       	pop	r28
    21a6:	0c 94 4e 10 	jmp	0x209c	; 0x209c <MQ131Class::stopHeater()>

000021aa <MQ131Class::getEnvCorrectRatio()>:
_ZN10MQ131Class18getEnvCorrectRatioEv():
    21aa:	cf 93       	push	r28
    21ac:	df 93       	push	r29
    21ae:	fc 01       	movw	r30, r24
    21b0:	d6 8d       	ldd	r29, Z+30	; 0x1e
    21b2:	c5 8d       	ldd	r28, Z+29	; 0x1d
    21b4:	dc 33       	cpi	r29, 0x3C	; 60
    21b6:	39 f4       	brne	.+14     	; 0x21c6 <MQ131Class::getEnvCorrectRatio()+0x1c>
    21b8:	c4 31       	cpi	r28, 0x14	; 20
    21ba:	01 f5       	brne	.+64     	; 0x21fc <MQ131Class::getEnvCorrectRatio()+0x52>
    21bc:	60 e0       	ldi	r22, 0x00	; 0
    21be:	70 e0       	ldi	r23, 0x00	; 0
    21c0:	80 e8       	ldi	r24, 0x80	; 128
    21c2:	9f e3       	ldi	r25, 0x3F	; 63
    21c4:	16 c0       	rjmp	.+44     	; 0x21f2 <MQ131Class::getEnvCorrectRatio()+0x48>
    21c6:	6c 2f       	mov	r22, r28
    21c8:	0c 2e       	mov	r0, r28
    21ca:	00 0c       	add	r0, r0
    21cc:	77 0b       	sbc	r23, r23
    21ce:	88 0b       	sbc	r24, r24
    21d0:	99 0b       	sbc	r25, r25
    21d2:	0e 94 80 22 	call	0x4500	; 0x4500 <__floatsisf>
    21d6:	dc 34       	cpi	r29, 0x4C	; 76
    21d8:	78 f0       	brcs	.+30     	; 0x21f8 <MQ131Class::getEnvCorrectRatio()+0x4e>
    21da:	25 e5       	ldi	r18, 0x55	; 85
    21dc:	31 ec       	ldi	r19, 0xC1	; 193
    21de:	48 e2       	ldi	r20, 0x28	; 40
    21e0:	5c eb       	ldi	r21, 0xBC	; 188
    21e2:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    21e6:	23 e2       	ldi	r18, 0x23	; 35
    21e8:	3a e4       	ldi	r19, 0x4A	; 74
    21ea:	43 e9       	ldi	r20, 0x93	; 147
    21ec:	5f e3       	ldi	r21, 0x3F	; 63
    21ee:	0e 94 65 21 	call	0x42ca	; 0x42ca <__addsf3>
    21f2:	df 91       	pop	r29
    21f4:	cf 91       	pop	r28
    21f6:	08 95       	ret
    21f8:	d3 33       	cpi	r29, 0x33	; 51
    21fa:	90 f0       	brcs	.+36     	; 0x2220 <MQ131Class::getEnvCorrectRatio()+0x76>
    21fc:	6c 2f       	mov	r22, r28
    21fe:	cc 0f       	add	r28, r28
    2200:	77 0b       	sbc	r23, r23
    2202:	88 0b       	sbc	r24, r24
    2204:	99 0b       	sbc	r25, r25
    2206:	0e 94 80 22 	call	0x4500	; 0x4500 <__floatsisf>
    220a:	28 e3       	ldi	r18, 0x38	; 56
    220c:	38 ef       	ldi	r19, 0xF8	; 248
    220e:	42 e4       	ldi	r20, 0x42	; 66
    2210:	5c eb       	ldi	r21, 0xBC	; 188
    2212:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2216:	25 ea       	ldi	r18, 0xA5	; 165
    2218:	3d eb       	ldi	r19, 0xBD	; 189
    221a:	49 ea       	ldi	r20, 0xA9	; 169
    221c:	5f e3       	ldi	r21, 0x3F	; 63
    221e:	e7 cf       	rjmp	.-50     	; 0x21ee <MQ131Class::getEnvCorrectRatio()+0x44>
    2220:	20 eb       	ldi	r18, 0xB0	; 176
    2222:	33 e0       	ldi	r19, 0x03	; 3
    2224:	47 e6       	ldi	r20, 0x67	; 103
    2226:	5c eb       	ldi	r21, 0xBC	; 188
    2228:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    222c:	22 e7       	ldi	r18, 0x72	; 114
    222e:	39 ef       	ldi	r19, 0xF9	; 249
    2230:	47 ec       	ldi	r20, 0xC7	; 199
    2232:	5f e3       	ldi	r21, 0x3F	; 63
    2234:	dc cf       	rjmp	.-72     	; 0x21ee <MQ131Class::getEnvCorrectRatio()+0x44>

00002236 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)>:
_ZN10MQ131Class7convertEf9MQ131UnitS0_():
    2236:	0f 93       	push	r16
    2238:	1f 93       	push	r17
    223a:	cb 01       	movw	r24, r22
    223c:	ba 01       	movw	r22, r20
    223e:	20 17       	cp	r18, r16
    2240:	31 07       	cpc	r19, r17
    2242:	51 f0       	breq	.+20     	; 0x2258 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x22>
    2244:	01 30       	cpi	r16, 0x01	; 1
    2246:	11 05       	cpc	r17, r1
    2248:	89 f0       	breq	.+34     	; 0x226c <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x36>
    224a:	48 f0       	brcs	.+18     	; 0x225e <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x28>
    224c:	02 30       	cpi	r16, 0x02	; 2
    224e:	11 05       	cpc	r17, r1
    2250:	a1 f0       	breq	.+40     	; 0x227a <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x44>
    2252:	03 30       	cpi	r16, 0x03	; 3
    2254:	11 05       	cpc	r17, r1
    2256:	21 f1       	breq	.+72     	; 0x22a0 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x6a>
    2258:	1f 91       	pop	r17
    225a:	0f 91       	pop	r16
    225c:	08 95       	ret
    225e:	20 e0       	ldi	r18, 0x00	; 0
    2260:	30 e0       	ldi	r19, 0x00	; 0
    2262:	4a e7       	ldi	r20, 0x7A	; 122
    2264:	54 e4       	ldi	r21, 0x44	; 68
    2266:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    226a:	f6 cf       	rjmp	.-20     	; 0x2258 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x22>
    226c:	20 e0       	ldi	r18, 0x00	; 0
    226e:	30 e0       	ldi	r19, 0x00	; 0
    2270:	4a e7       	ldi	r20, 0x7A	; 122
    2272:	54 e4       	ldi	r21, 0x44	; 68
    2274:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2278:	ef cf       	rjmp	.-34     	; 0x2258 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x22>
    227a:	23 2b       	or	r18, r19
    227c:	31 f0       	breq	.+12     	; 0x228a <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x54>
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	4a e7       	ldi	r20, 0x7A	; 122
    2284:	54 e4       	ldi	r21, 0x44	; 68
    2286:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    228a:	20 e0       	ldi	r18, 0x00	; 0
    228c:	30 e0       	ldi	r19, 0x00	; 0
    228e:	40 e4       	ldi	r20, 0x40	; 64
    2290:	52 e4       	ldi	r21, 0x42	; 66
    2292:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2296:	2b e4       	ldi	r18, 0x4B	; 75
    2298:	30 eb       	ldi	r19, 0xB0	; 176
    229a:	45 eb       	ldi	r20, 0xB5	; 181
    229c:	51 e4       	ldi	r21, 0x41	; 65
    229e:	e3 cf       	rjmp	.-58     	; 0x2266 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x30>
    22a0:	21 30       	cpi	r18, 0x01	; 1
    22a2:	31 05       	cpc	r19, r1
    22a4:	91 f3       	breq	.-28     	; 0x228a <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x54>
    22a6:	20 e0       	ldi	r18, 0x00	; 0
    22a8:	30 e0       	ldi	r19, 0x00	; 0
    22aa:	4a e7       	ldi	r20, 0x7A	; 122
    22ac:	54 e4       	ldi	r21, 0x44	; 68
    22ae:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    22b2:	eb cf       	rjmp	.-42     	; 0x228a <MQ131Class::convert(float, MQ131Unit, MQ131Unit)+0x54>

000022b4 <MQ131Class::getO3(MQ131Unit)>:
_ZN10MQ131Class5getO3E9MQ131Unit():
    22b4:	cf 92       	push	r12
    22b6:	df 92       	push	r13
    22b8:	ef 92       	push	r14
    22ba:	ff 92       	push	r15
    22bc:	0f 93       	push	r16
    22be:	1f 93       	push	r17
    22c0:	cf 93       	push	r28
    22c2:	df 93       	push	r29
    22c4:	ec 01       	movw	r28, r24
    22c6:	8b 01       	movw	r16, r22
    22c8:	c9 8c       	ldd	r12, Y+25	; 0x19
    22ca:	da 8c       	ldd	r13, Y+26	; 0x1a
    22cc:	eb 8c       	ldd	r14, Y+27	; 0x1b
    22ce:	fc 8c       	ldd	r15, Y+28	; 0x1c
    22d0:	20 e0       	ldi	r18, 0x00	; 0
    22d2:	30 e0       	ldi	r19, 0x00	; 0
    22d4:	a9 01       	movw	r20, r18
    22d6:	c7 01       	movw	r24, r14
    22d8:	b6 01       	movw	r22, r12
    22da:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <__cmpsf2>
    22de:	87 fd       	sbrc	r24, 7
    22e0:	09 c0       	rjmp	.+18     	; 0x22f4 <MQ131Class::getO3(MQ131Unit)+0x40>
    22e2:	8a 81       	ldd	r24, Y+2	; 0x02
    22e4:	9b 81       	ldd	r25, Y+3	; 0x03
    22e6:	81 30       	cpi	r24, 0x01	; 1
    22e8:	91 05       	cpc	r25, r1
    22ea:	61 f1       	breq	.+88     	; 0x2344 <MQ131Class::getO3(MQ131Unit)+0x90>
    22ec:	38 f0       	brcs	.+14     	; 0x22fc <MQ131Class::getO3(MQ131Unit)+0x48>
    22ee:	02 97       	sbiw	r24, 0x02	; 2
    22f0:	09 f4       	brne	.+2      	; 0x22f4 <MQ131Class::getO3(MQ131Unit)+0x40>
    22f2:	57 c0       	rjmp	.+174    	; 0x23a2 <MQ131Class::getO3(MQ131Unit)+0xee>
    22f4:	60 e0       	ldi	r22, 0x00	; 0
    22f6:	70 e0       	ldi	r23, 0x00	; 0
    22f8:	cb 01       	movw	r24, r22
    22fa:	4a c0       	rjmp	.+148    	; 0x2390 <MQ131Class::getO3(MQ131Unit)+0xdc>
    22fc:	2d 89       	ldd	r18, Y+21	; 0x15
    22fe:	3e 89       	ldd	r19, Y+22	; 0x16
    2300:	4f 89       	ldd	r20, Y+23	; 0x17
    2302:	58 8d       	ldd	r21, Y+24	; 0x18
    2304:	c7 01       	movw	r24, r14
    2306:	b6 01       	movw	r22, r12
    2308:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    230c:	6b 01       	movw	r12, r22
    230e:	7c 01       	movw	r14, r24
    2310:	ce 01       	movw	r24, r28
    2312:	0e 94 d5 10 	call	0x21aa	; 0x21aa <MQ131Class::getEnvCorrectRatio()>
    2316:	9b 01       	movw	r18, r22
    2318:	ac 01       	movw	r20, r24
    231a:	c7 01       	movw	r24, r14
    231c:	b6 01       	movw	r22, r12
    231e:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2322:	2d e5       	ldi	r18, 0x5D	; 93
    2324:	3d e6       	ldi	r19, 0x6D	; 109
    2326:	45 e1       	ldi	r20, 0x15	; 21
    2328:	50 e4       	ldi	r21, 0x40	; 64
    232a:	0e 94 a2 23 	call	0x4744	; 0x4744 <pow>
    232e:	2e e1       	ldi	r18, 0x1E	; 30
    2330:	37 ea       	ldi	r19, 0xA7	; 167
    2332:	47 e1       	ldi	r20, 0x17	; 23
    2334:	51 e4       	ldi	r21, 0x41	; 65
    2336:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    233a:	ab 01       	movw	r20, r22
    233c:	bc 01       	movw	r22, r24
    233e:	21 e0       	ldi	r18, 0x01	; 1
    2340:	30 e0       	ldi	r19, 0x00	; 0
    2342:	23 c0       	rjmp	.+70     	; 0x238a <MQ131Class::getO3(MQ131Unit)+0xd6>
    2344:	2d 89       	ldd	r18, Y+21	; 0x15
    2346:	3e 89       	ldd	r19, Y+22	; 0x16
    2348:	4f 89       	ldd	r20, Y+23	; 0x17
    234a:	58 8d       	ldd	r21, Y+24	; 0x18
    234c:	c7 01       	movw	r24, r14
    234e:	b6 01       	movw	r22, r12
    2350:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    2354:	6b 01       	movw	r12, r22
    2356:	7c 01       	movw	r14, r24
    2358:	ce 01       	movw	r24, r28
    235a:	0e 94 d5 10 	call	0x21aa	; 0x21aa <MQ131Class::getEnvCorrectRatio()>
    235e:	9b 01       	movw	r18, r22
    2360:	ac 01       	movw	r20, r24
    2362:	c7 01       	movw	r24, r14
    2364:	b6 01       	movw	r22, r12
    2366:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    236a:	2e ec       	ldi	r18, 0xCE	; 206
    236c:	39 e1       	ldi	r19, 0x19	; 25
    236e:	45 e1       	ldi	r20, 0x15	; 21
    2370:	50 e4       	ldi	r21, 0x40	; 64
    2372:	0e 94 a2 23 	call	0x4744	; 0x4744 <pow>
    2376:	28 e0       	ldi	r18, 0x08	; 8
    2378:	3d e3       	ldi	r19, 0x3D	; 61
    237a:	42 e0       	ldi	r20, 0x02	; 2
    237c:	51 e4       	ldi	r21, 0x41	; 65
    237e:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    2382:	ab 01       	movw	r20, r22
    2384:	bc 01       	movw	r22, r24
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	20 e0       	ldi	r18, 0x00	; 0
    238a:	ce 01       	movw	r24, r28
    238c:	0e 94 1b 11 	call	0x2236	; 0x2236 <MQ131Class::convert(float, MQ131Unit, MQ131Unit)>
    2390:	df 91       	pop	r29
    2392:	cf 91       	pop	r28
    2394:	1f 91       	pop	r17
    2396:	0f 91       	pop	r16
    2398:	ff 90       	pop	r15
    239a:	ef 90       	pop	r14
    239c:	df 90       	pop	r13
    239e:	cf 90       	pop	r12
    23a0:	08 95       	ret
    23a2:	26 e6       	ldi	r18, 0x66	; 102
    23a4:	36 e6       	ldi	r19, 0x66	; 102
    23a6:	42 e4       	ldi	r20, 0x42	; 66
    23a8:	51 e4       	ldi	r21, 0x41	; 65
    23aa:	c7 01       	movw	r24, r14
    23ac:	b6 01       	movw	r22, r12
    23ae:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    23b2:	2d 89       	ldd	r18, Y+21	; 0x15
    23b4:	3e 89       	ldd	r19, Y+22	; 0x16
    23b6:	4f 89       	ldd	r20, Y+23	; 0x17
    23b8:	58 8d       	ldd	r21, Y+24	; 0x18
    23ba:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
    23be:	6b 01       	movw	r12, r22
    23c0:	7c 01       	movw	r14, r24
    23c2:	ce 01       	movw	r24, r28
    23c4:	0e 94 d5 10 	call	0x21aa	; 0x21aa <MQ131Class::getEnvCorrectRatio()>
    23c8:	9b 01       	movw	r18, r22
    23ca:	ac 01       	movw	r20, r24
    23cc:	c7 01       	movw	r24, r14
    23ce:	b6 01       	movw	r22, r12
    23d0:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    23d4:	21 ee       	ldi	r18, 0xE1	; 225
    23d6:	3a e7       	ldi	r19, 0x7A	; 122
    23d8:	44 e9       	ldi	r20, 0x94	; 148
    23da:	5f eb       	ldi	r21, 0xBF	; 191
    23dc:	0e 94 a2 23 	call	0x4744	; 0x4744 <pow>
    23e0:	2b e2       	ldi	r18, 0x2B	; 43
    23e2:	37 e8       	ldi	r19, 0x87	; 135
    23e4:	47 ed       	ldi	r20, 0xD7	; 215
    23e6:	51 e4       	ldi	r21, 0x41	; 65
    23e8:	a6 cf       	rjmp	.-180    	; 0x2336 <MQ131Class::getO3(MQ131Unit)+0x82>

000023ea <MQ131Class::setR0(float)>:
_ZN10MQ131Class5setR0Ef():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:350
    23ea:	fc 01       	movw	r30, r24
    23ec:	45 8b       	std	Z+21, r20	; 0x15
    23ee:	56 8b       	std	Z+22, r21	; 0x16
    23f0:	67 8b       	std	Z+23, r22	; 0x17
    23f2:	70 8f       	std	Z+24, r23	; 0x18
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:351
    23f4:	08 95       	ret

000023f6 <MQ131Class::getR0()>:
_ZN10MQ131Class5getR0Ev():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:357
    23f6:	fc 01       	movw	r30, r24
    23f8:	65 89       	ldd	r22, Z+21	; 0x15
    23fa:	76 89       	ldd	r23, Z+22	; 0x16
    23fc:	87 89       	ldd	r24, Z+23	; 0x17
    23fe:	90 8d       	ldd	r25, Z+24	; 0x18
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:358
    2400:	08 95       	ret

00002402 <_GLOBAL__sub_I__ZN10MQ131ClassC2Em>:
_GLOBAL__sub_I__ZN10MQ131ClassC2Em():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/MQ131.cpp:360
    2402:	40 e4       	ldi	r20, 0x40	; 64
    2404:	52 e4       	ldi	r21, 0x42	; 66
    2406:	6f e0       	ldi	r22, 0x0F	; 15
    2408:	70 e0       	ldi	r23, 0x00	; 0
    240a:	8e ef       	ldi	r24, 0xFE	; 254
    240c:	94 e0       	ldi	r25, 0x04	; 4
    240e:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <MQ131Class::MQ131Class(unsigned long)>

00002412 <TM1650::sendData(unsigned char, unsigned char)>:
_ZN6TM16508sendDataEhh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:102
    2412:	0f 93       	push	r16
    2414:	1f 93       	push	r17
    2416:	cf 93       	push	r28
    2418:	df 93       	push	r29
    241a:	ec 01       	movw	r28, r24
    241c:	16 2f       	mov	r17, r22
    241e:	04 2f       	mov	r16, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:103
    2420:	e8 81       	ld	r30, Y
    2422:	f9 81       	ldd	r31, Y+1	; 0x01
    2424:	04 8c       	ldd	r0, Z+28	; 0x1c
    2426:	f5 8d       	ldd	r31, Z+29	; 0x1d
    2428:	e0 2d       	mov	r30, r0
    242a:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:104
    242c:	61 2f       	mov	r22, r17
    242e:	66 0f       	add	r22, r22
    2430:	68 66       	ori	r22, 0x68	; 104
    2432:	e8 81       	ld	r30, Y
    2434:	f9 81       	ldd	r31, Y+1	; 0x01
    2436:	00 a0       	ldd	r0, Z+32	; 0x20
    2438:	f1 a1       	ldd	r31, Z+33	; 0x21
    243a:	e0 2d       	mov	r30, r0
    243c:	ce 01       	movw	r24, r28
    243e:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:105
    2440:	e8 81       	ld	r30, Y
    2442:	f9 81       	ldd	r31, Y+1	; 0x01
    2444:	00 a0       	ldd	r0, Z+32	; 0x20
    2446:	f1 a1       	ldd	r31, Z+33	; 0x21
    2448:	e0 2d       	mov	r30, r0
    244a:	60 2f       	mov	r22, r16
    244c:	ce 01       	movw	r24, r28
    244e:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:106
    2450:	e8 81       	ld	r30, Y
    2452:	f9 81       	ldd	r31, Y+1	; 0x01
    2454:	06 8c       	ldd	r0, Z+30	; 0x1e
    2456:	f7 8d       	ldd	r31, Z+31	; 0x1f
    2458:	e0 2d       	mov	r30, r0
    245a:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:107
    245c:	df 91       	pop	r29
    245e:	cf 91       	pop	r28
    2460:	1f 91       	pop	r17
    2462:	0f 91       	pop	r16
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:106
    2464:	09 94       	ijmp

00002466 <TM1650::clearDisplay()>:
_ZN6TM165012clearDisplayEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:110
    2466:	0f 93       	push	r16
    2468:	1f 93       	push	r17
    246a:	cf 93       	push	r28
    246c:	df 93       	push	r29
    246e:	8c 01       	movw	r16, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:116
    2470:	d0 e0       	ldi	r29, 0x00	; 0
    2472:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:116 (discriminator 3)
    2474:	d8 01       	movw	r26, r16
    2476:	12 96       	adiw	r26, 0x02	; 2
    2478:	8c 91       	ld	r24, X
    247a:	12 97       	sbiw	r26, 0x02	; 2
    247c:	8c 17       	cp	r24, r28
    247e:	1d 06       	cpc	r1, r29
    2480:	61 f0       	breq	.+24     	; 0x249a <TM1650::clearDisplay()+0x34>
    2482:	5c f0       	brlt	.+22     	; 0x249a <TM1650::clearDisplay()+0x34>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:117 (discriminator 2)
    2484:	ed 91       	ld	r30, X+
    2486:	fc 91       	ld	r31, X
    2488:	04 a0       	ldd	r0, Z+36	; 0x24
    248a:	f5 a1       	ldd	r31, Z+37	; 0x25
    248c:	e0 2d       	mov	r30, r0
    248e:	40 e0       	ldi	r20, 0x00	; 0
    2490:	6c 2f       	mov	r22, r28
    2492:	c8 01       	movw	r24, r16
    2494:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:116 (discriminator 2)
    2496:	21 96       	adiw	r28, 0x01	; 1
    2498:	ed cf       	rjmp	.-38     	; 0x2474 <TM1650::clearDisplay()+0xe>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:119
    249a:	df 91       	pop	r29
    249c:	cf 91       	pop	r28
    249e:	1f 91       	pop	r17
    24a0:	0f 91       	pop	r16
    24a2:	08 95       	ret

000024a4 <TM1650::setupDisplay(bool, unsigned char)>:
_ZN6TM165012setupDisplayEbh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:122
    24a4:	0f 93       	push	r16
    24a6:	1f 93       	push	r17
    24a8:	cf 93       	push	r28
    24aa:	df 93       	push	r29
    24ac:	ec 01       	movw	r28, r24
    24ae:	06 2f       	mov	r16, r22
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:124
    24b0:	48 30       	cpi	r20, 0x08	; 8
    24b2:	08 f0       	brcs	.+2      	; 0x24b6 <TM1650::setupDisplay(bool, unsigned char)+0x12>
    24b4:	47 e0       	ldi	r20, 0x07	; 7
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:125
    24b6:	11 e0       	ldi	r17, 0x01	; 1
    24b8:	14 0f       	add	r17, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:126
    24ba:	18 30       	cpi	r17, 0x08	; 8
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <TM1650::setupDisplay(bool, unsigned char)+0x1c>
    24be:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:127
    24c0:	e8 81       	ld	r30, Y
    24c2:	f9 81       	ldd	r31, Y+1	; 0x01
    24c4:	04 8c       	ldd	r0, Z+28	; 0x1c
    24c6:	f5 8d       	ldd	r31, Z+29	; 0x1d
    24c8:	e0 2d       	mov	r30, r0
    24ca:	ce 01       	movw	r24, r28
    24cc:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:128
    24ce:	e8 81       	ld	r30, Y
    24d0:	f9 81       	ldd	r31, Y+1	; 0x01
    24d2:	00 a0       	ldd	r0, Z+32	; 0x20
    24d4:	f1 a1       	ldd	r31, Z+33	; 0x21
    24d6:	e0 2d       	mov	r30, r0
    24d8:	68 e4       	ldi	r22, 0x48	; 72
    24da:	ce 01       	movw	r24, r28
    24dc:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:129
    24de:	e8 81       	ld	r30, Y
    24e0:	f9 81       	ldd	r31, Y+1	; 0x01
    24e2:	00 a0       	ldd	r0, Z+32	; 0x20
    24e4:	f1 a1       	ldd	r31, Z+33	; 0x21
    24e6:	e0 2d       	mov	r30, r0
    24e8:	80 e1       	ldi	r24, 0x10	; 16
    24ea:	18 9f       	mul	r17, r24
    24ec:	a0 01       	movw	r20, r0
    24ee:	11 24       	eor	r1, r1
    24f0:	8b 81       	ldd	r24, Y+3	; 0x03
    24f2:	60 e0       	ldi	r22, 0x00	; 0
    24f4:	87 30       	cpi	r24, 0x07	; 7
    24f6:	09 f4       	brne	.+2      	; 0x24fa <TM1650::setupDisplay(bool, unsigned char)+0x56>
    24f8:	68 e0       	ldi	r22, 0x08	; 8
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:129 (discriminator 4)
    24fa:	40 2b       	or	r20, r16
    24fc:	64 2b       	or	r22, r20
    24fe:	ce 01       	movw	r24, r28
    2500:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:130 (discriminator 4)
    2502:	e8 81       	ld	r30, Y
    2504:	f9 81       	ldd	r31, Y+1	; 0x01
    2506:	06 8c       	ldd	r0, Z+30	; 0x1e
    2508:	f7 8d       	ldd	r31, Z+31	; 0x1f
    250a:	e0 2d       	mov	r30, r0
    250c:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:131 (discriminator 4)
    250e:	df 91       	pop	r29
    2510:	cf 91       	pop	r28
    2512:	1f 91       	pop	r17
    2514:	0f 91       	pop	r16
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:130 (discriminator 4)
    2516:	09 94       	ijmp

00002518 <TM1650::getButtons()>:
_ZN6TM165010getButtonsEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:177
    2518:	0f 93       	push	r16
    251a:	1f 93       	push	r17
    251c:	cf 93       	push	r28
    251e:	8c 01       	movw	r16, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:190
    2520:	dc 01       	movw	r26, r24
    2522:	ed 91       	ld	r30, X+
    2524:	fc 91       	ld	r31, X
    2526:	04 8c       	ldd	r0, Z+28	; 0x1c
    2528:	f5 8d       	ldd	r31, Z+29	; 0x1d
    252a:	e0 2d       	mov	r30, r0
    252c:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:191
    252e:	d8 01       	movw	r26, r16
    2530:	ed 91       	ld	r30, X+
    2532:	fc 91       	ld	r31, X
    2534:	00 a0       	ldd	r0, Z+32	; 0x20
    2536:	f1 a1       	ldd	r31, Z+33	; 0x21
    2538:	e0 2d       	mov	r30, r0
    253a:	69 e4       	ldi	r22, 0x49	; 73
    253c:	c8 01       	movw	r24, r16
    253e:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:192
    2540:	d8 01       	movw	r26, r16
    2542:	ed 91       	ld	r30, X+
    2544:	fc 91       	ld	r31, X
    2546:	06 a0       	ldd	r0, Z+38	; 0x26
    2548:	f7 a1       	ldd	r31, Z+39	; 0x27
    254a:	e0 2d       	mov	r30, r0
    254c:	c8 01       	movw	r24, r16
    254e:	09 95       	icall
    2550:	c8 2f       	mov	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:193
    2552:	d8 01       	movw	r26, r16
    2554:	ed 91       	ld	r30, X+
    2556:	fc 91       	ld	r31, X
    2558:	06 8c       	ldd	r0, Z+30	; 0x1e
    255a:	f7 8d       	ldd	r31, Z+31	; 0x1f
    255c:	e0 2d       	mov	r30, r0
    255e:	c8 01       	movw	r24, r16
    2560:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:200
    2562:	60 e0       	ldi	r22, 0x00	; 0
    2564:	70 e0       	ldi	r23, 0x00	; 0
    2566:	cb 01       	movw	r24, r22
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:199
    2568:	c4 34       	cpi	r28, 0x44	; 68
    256a:	70 f0       	brcs	.+28     	; 0x2588 <TM1650::getButtons()+0x70>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:203
    256c:	c8 34       	cpi	r28, 0x48	; 72
    256e:	80 f4       	brcc	.+32     	; 0x2590 <TM1650::getButtons()+0x78>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:203 (discriminator 1)
    2570:	c4 54       	subi	r28, 0x44	; 68
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:211
    2572:	61 e0       	ldi	r22, 0x01	; 1
    2574:	70 e0       	ldi	r23, 0x00	; 0
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	04 c0       	rjmp	.+8      	; 0x2584 <TM1650::getButtons()+0x6c>
    257c:	66 0f       	add	r22, r22
    257e:	77 1f       	adc	r23, r23
    2580:	88 1f       	adc	r24, r24
    2582:	99 1f       	adc	r25, r25
    2584:	ca 95       	dec	r28
    2586:	d2 f7       	brpl	.-12     	; 0x257c <TM1650::getButtons()+0x64>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:212
    2588:	cf 91       	pop	r28
    258a:	1f 91       	pop	r17
    258c:	0f 91       	pop	r16
    258e:	08 95       	ret
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:204
    2590:	c0 35       	cpi	r28, 0x50	; 80
    2592:	10 f4       	brcc	.+4      	; 0x2598 <TM1650::getButtons()+0x80>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:204 (discriminator 1)
    2594:	c8 54       	subi	r28, 0x48	; 72
    2596:	ed cf       	rjmp	.-38     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:205
    2598:	c8 35       	cpi	r28, 0x58	; 88
    259a:	10 f4       	brcc	.+4      	; 0x25a0 <TM1650::getButtons()+0x88>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:205 (discriminator 1)
    259c:	cc 54       	subi	r28, 0x4C	; 76
    259e:	e9 cf       	rjmp	.-46     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:206
    25a0:	c0 36       	cpi	r28, 0x60	; 96
    25a2:	10 f4       	brcc	.+4      	; 0x25a8 <TM1650::getButtons()+0x90>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:206 (discriminator 1)
    25a4:	c0 55       	subi	r28, 0x50	; 80
    25a6:	e5 cf       	rjmp	.-54     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:207
    25a8:	c8 36       	cpi	r28, 0x68	; 104
    25aa:	10 f4       	brcc	.+4      	; 0x25b0 <TM1650::getButtons()+0x98>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:207 (discriminator 1)
    25ac:	c4 55       	subi	r28, 0x54	; 84
    25ae:	e1 cf       	rjmp	.-62     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:208
    25b0:	c0 37       	cpi	r28, 0x70	; 112
    25b2:	10 f4       	brcc	.+4      	; 0x25b8 <TM1650::getButtons()+0xa0>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:208 (discriminator 1)
    25b4:	c8 55       	subi	r28, 0x58	; 88
    25b6:	dd cf       	rjmp	.-70     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:209
    25b8:	c8 37       	cpi	r28, 0x78	; 120
    25ba:	d8 f6       	brcc	.-74     	; 0x2572 <TM1650::getButtons()+0x5a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:209 (discriminator 1)
    25bc:	cc 55       	subi	r28, 0x5C	; 92
    25be:	d9 cf       	rjmp	.-78     	; 0x2572 <TM1650::getButtons()+0x5a>

000025c0 <TM1650::bitDelay()>:
_ZN6TM16508bitDelayEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:31
    25c0:	85 e0       	ldi	r24, 0x05	; 5
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	0c 94 ed 1b 	jmp	0x37da	; 0x37da <delayMicroseconds>

000025c8 <TM1650::start()>:
_ZN6TM16505startEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:44
    25c8:	cf 93       	push	r28
    25ca:	df 93       	push	r29
    25cc:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:47
    25ce:	61 e0       	ldi	r22, 0x01	; 1
    25d0:	8d 81       	ldd	r24, Y+5	; 0x05
    25d2:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:48
    25d6:	61 e0       	ldi	r22, 0x01	; 1
    25d8:	8e 81       	ldd	r24, Y+6	; 0x06
    25da:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:49
    25de:	e8 81       	ld	r30, Y
    25e0:	f9 81       	ldd	r31, Y+1	; 0x01
    25e2:	02 8c       	ldd	r0, Z+26	; 0x1a
    25e4:	f3 8d       	ldd	r31, Z+27	; 0x1b
    25e6:	e0 2d       	mov	r30, r0
    25e8:	ce 01       	movw	r24, r28
    25ea:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:50
    25ec:	60 e0       	ldi	r22, 0x00	; 0
    25ee:	8d 81       	ldd	r24, Y+5	; 0x05
    25f0:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:51
    25f4:	60 e0       	ldi	r22, 0x00	; 0
    25f6:	8e 81       	ldd	r24, Y+6	; 0x06
    25f8:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:52
    25fc:	e8 81       	ld	r30, Y
    25fe:	f9 81       	ldd	r31, Y+1	; 0x01
    2600:	02 8c       	ldd	r0, Z+26	; 0x1a
    2602:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2604:	e0 2d       	mov	r30, r0
    2606:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:54
    2608:	df 91       	pop	r29
    260a:	cf 91       	pop	r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:52
    260c:	09 94       	ijmp

0000260e <TM1650::stop()>:
_ZN6TM16504stopEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:57
    260e:	cf 93       	push	r28
    2610:	df 93       	push	r29
    2612:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:60
    2614:	60 e0       	ldi	r22, 0x00	; 0
    2616:	8e 81       	ldd	r24, Y+6	; 0x06
    2618:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:61
    261c:	60 e0       	ldi	r22, 0x00	; 0
    261e:	8d 81       	ldd	r24, Y+5	; 0x05
    2620:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:62
    2624:	e8 81       	ld	r30, Y
    2626:	f9 81       	ldd	r31, Y+1	; 0x01
    2628:	02 8c       	ldd	r0, Z+26	; 0x1a
    262a:	f3 8d       	ldd	r31, Z+27	; 0x1b
    262c:	e0 2d       	mov	r30, r0
    262e:	ce 01       	movw	r24, r28
    2630:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:63
    2632:	61 e0       	ldi	r22, 0x01	; 1
    2634:	8e 81       	ldd	r24, Y+6	; 0x06
    2636:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:64
    263a:	61 e0       	ldi	r22, 0x01	; 1
    263c:	8d 81       	ldd	r24, Y+5	; 0x05
    263e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:65
    2642:	e8 81       	ld	r30, Y
    2644:	f9 81       	ldd	r31, Y+1	; 0x01
    2646:	02 8c       	ldd	r0, Z+26	; 0x1a
    2648:	f3 8d       	ldd	r31, Z+27	; 0x1b
    264a:	e0 2d       	mov	r30, r0
    264c:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:66
    264e:	df 91       	pop	r29
    2650:	cf 91       	pop	r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:65
    2652:	09 94       	ijmp

00002654 <TM1650::send(unsigned char)>:
_ZN6TM16504sendEh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:69
    2654:	ff 92       	push	r15
    2656:	0f 93       	push	r16
    2658:	1f 93       	push	r17
    265a:	cf 93       	push	r28
    265c:	df 93       	push	r29
    265e:	ec 01       	movw	r28, r24
    2660:	f6 2e       	mov	r15, r22
    2662:	08 e0       	ldi	r16, 0x08	; 8
    2664:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:74 (discriminator 2)
    2666:	60 e0       	ldi	r22, 0x00	; 0
    2668:	8e 81       	ldd	r24, Y+6	; 0x06
    266a:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:75 (discriminator 2)
    266e:	e8 81       	ld	r30, Y
    2670:	f9 81       	ldd	r31, Y+1	; 0x01
    2672:	02 8c       	ldd	r0, Z+26	; 0x1a
    2674:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2676:	e0 2d       	mov	r30, r0
    2678:	ce 01       	movw	r24, r28
    267a:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:77 (discriminator 2)
    267c:	6f 2d       	mov	r22, r15
    267e:	66 1f       	adc	r22, r22
    2680:	66 27       	eor	r22, r22
    2682:	66 1f       	adc	r22, r22
    2684:	8d 81       	ldd	r24, Y+5	; 0x05
    2686:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:78 (discriminator 2)
    268a:	ff 0c       	add	r15, r15
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:80 (discriminator 2)
    268c:	61 e0       	ldi	r22, 0x01	; 1
    268e:	8e 81       	ldd	r24, Y+6	; 0x06
    2690:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:81 (discriminator 2)
    2694:	e8 81       	ld	r30, Y
    2696:	f9 81       	ldd	r31, Y+1	; 0x01
    2698:	02 8c       	ldd	r0, Z+26	; 0x1a
    269a:	f3 8d       	ldd	r31, Z+27	; 0x1b
    269c:	e0 2d       	mov	r30, r0
    269e:	ce 01       	movw	r24, r28
    26a0:	09 95       	icall
    26a2:	01 50       	subi	r16, 0x01	; 1
    26a4:	11 09       	sbc	r17, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:72 (discriminator 2)
    26a6:	f9 f6       	brne	.-66     	; 0x2666 <TM1650::send(unsigned char)+0x12>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:83
    26a8:	e8 81       	ld	r30, Y
    26aa:	f9 81       	ldd	r31, Y+1	; 0x01
    26ac:	02 8c       	ldd	r0, Z+26	; 0x1a
    26ae:	f3 8d       	ldd	r31, Z+27	; 0x1b
    26b0:	e0 2d       	mov	r30, r0
    26b2:	ce 01       	movw	r24, r28
    26b4:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:84
    26b6:	e8 81       	ld	r30, Y
    26b8:	f9 81       	ldd	r31, Y+1	; 0x01
    26ba:	02 8c       	ldd	r0, Z+26	; 0x1a
    26bc:	f3 8d       	ldd	r31, Z+27	; 0x1b
    26be:	e0 2d       	mov	r30, r0
    26c0:	ce 01       	movw	r24, r28
    26c2:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:90
    26c4:	60 e0       	ldi	r22, 0x00	; 0
    26c6:	8e 81       	ldd	r24, Y+6	; 0x06
    26c8:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:91
    26cc:	60 e0       	ldi	r22, 0x00	; 0
    26ce:	8d 81       	ldd	r24, Y+5	; 0x05
    26d0:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:92
    26d4:	e8 81       	ld	r30, Y
    26d6:	f9 81       	ldd	r31, Y+1	; 0x01
    26d8:	02 8c       	ldd	r0, Z+26	; 0x1a
    26da:	f3 8d       	ldd	r31, Z+27	; 0x1b
    26dc:	e0 2d       	mov	r30, r0
    26de:	ce 01       	movw	r24, r28
    26e0:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:93
    26e2:	61 e0       	ldi	r22, 0x01	; 1
    26e4:	8e 81       	ldd	r24, Y+6	; 0x06
    26e6:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:94
    26ea:	e8 81       	ld	r30, Y
    26ec:	f9 81       	ldd	r31, Y+1	; 0x01
    26ee:	02 8c       	ldd	r0, Z+26	; 0x1a
    26f0:	f3 8d       	ldd	r31, Z+27	; 0x1b
    26f2:	e0 2d       	mov	r30, r0
    26f4:	ce 01       	movw	r24, r28
    26f6:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:95
    26f8:	8d 81       	ldd	r24, Y+5	; 0x05
    26fa:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <digitalRead>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:96
    26fe:	81 11       	cpse	r24, r1
    2700:	04 c0       	rjmp	.+8      	; 0x270a <TM1650::send(unsigned char)+0xb6>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:97
    2702:	60 e0       	ldi	r22, 0x00	; 0
    2704:	8d 81       	ldd	r24, Y+5	; 0x05
    2706:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:98
    270a:	61 e0       	ldi	r22, 0x01	; 1
    270c:	8d 81       	ldd	r24, Y+5	; 0x05
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:99
    270e:	df 91       	pop	r29
    2710:	cf 91       	pop	r28
    2712:	1f 91       	pop	r17
    2714:	0f 91       	pop	r16
    2716:	ff 90       	pop	r15
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:98
    2718:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <pinMode>

0000271c <TM1650::receive()>:
_ZN6TM16507receiveEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:134
    271c:	ef 92       	push	r14
    271e:	ff 92       	push	r15
    2720:	1f 93       	push	r17
    2722:	cf 93       	push	r28
    2724:	df 93       	push	r29
    2726:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:138
    2728:	60 e0       	ldi	r22, 0x00	; 0
    272a:	8e 81       	ldd	r24, Y+6	; 0x06
    272c:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:139
    2730:	60 e0       	ldi	r22, 0x00	; 0
    2732:	8d 81       	ldd	r24, Y+5	; 0x05
    2734:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:140
    2738:	61 e0       	ldi	r22, 0x01	; 1
    273a:	8d 81       	ldd	r24, Y+5	; 0x05
    273c:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    2740:	88 e0       	ldi	r24, 0x08	; 8
    2742:	e8 2e       	mov	r14, r24
    2744:	f1 2c       	mov	r15, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:135
    2746:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:144
    2748:	11 0f       	add	r17, r17
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:146
    274a:	61 e0       	ldi	r22, 0x01	; 1
    274c:	8e 81       	ldd	r24, Y+6	; 0x06
    274e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:147
    2752:	e8 81       	ld	r30, Y
    2754:	f9 81       	ldd	r31, Y+1	; 0x01
    2756:	02 8c       	ldd	r0, Z+26	; 0x1a
    2758:	f3 8d       	ldd	r31, Z+27	; 0x1b
    275a:	e0 2d       	mov	r30, r0
    275c:	ce 01       	movw	r24, r28
    275e:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:149
    2760:	8d 81       	ldd	r24, Y+5	; 0x05
    2762:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <digitalRead>
    2766:	89 2b       	or	r24, r25
    2768:	09 f0       	breq	.+2      	; 0x276c <TM1650::receive()+0x50>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:150
    276a:	11 60       	ori	r17, 0x01	; 1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:153 (discriminator 2)
    276c:	60 e0       	ldi	r22, 0x00	; 0
    276e:	8e 81       	ldd	r24, Y+6	; 0x06
    2770:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:154 (discriminator 2)
    2774:	e8 81       	ld	r30, Y
    2776:	f9 81       	ldd	r31, Y+1	; 0x01
    2778:	02 8c       	ldd	r0, Z+26	; 0x1a
    277a:	f3 8d       	ldd	r31, Z+27	; 0x1b
    277c:	e0 2d       	mov	r30, r0
    277e:	ce 01       	movw	r24, r28
    2780:	09 95       	icall
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	e8 1a       	sub	r14, r24
    2786:	f1 08       	sbc	r15, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:142 (discriminator 2)
    2788:	f9 f6       	brne	.-66     	; 0x2748 <TM1650::receive()+0x2c>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:160
    278a:	60 e0       	ldi	r22, 0x00	; 0
    278c:	8e 81       	ldd	r24, Y+6	; 0x06
    278e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:162
    2792:	60 e0       	ldi	r22, 0x00	; 0
    2794:	8d 81       	ldd	r24, Y+5	; 0x05
    2796:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:163
    279a:	61 e0       	ldi	r22, 0x01	; 1
    279c:	8d 81       	ldd	r24, Y+5	; 0x05
    279e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:164
    27a2:	e8 81       	ld	r30, Y
    27a4:	f9 81       	ldd	r31, Y+1	; 0x01
    27a6:	02 8c       	ldd	r0, Z+26	; 0x1a
    27a8:	f3 8d       	ldd	r31, Z+27	; 0x1b
    27aa:	e0 2d       	mov	r30, r0
    27ac:	ce 01       	movw	r24, r28
    27ae:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:165
    27b0:	61 e0       	ldi	r22, 0x01	; 1
    27b2:	8e 81       	ldd	r24, Y+6	; 0x06
    27b4:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:166
    27b8:	e8 81       	ld	r30, Y
    27ba:	f9 81       	ldd	r31, Y+1	; 0x01
    27bc:	02 8c       	ldd	r0, Z+26	; 0x1a
    27be:	f3 8d       	ldd	r31, Z+27	; 0x1b
    27c0:	e0 2d       	mov	r30, r0
    27c2:	ce 01       	movw	r24, r28
    27c4:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:167
    27c6:	8d 81       	ldd	r24, Y+5	; 0x05
    27c8:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <digitalRead>
    27cc:	f8 2e       	mov	r15, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:168
    27ce:	60 e0       	ldi	r22, 0x00	; 0
    27d0:	8e 81       	ldd	r24, Y+6	; 0x06
    27d2:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:169
    27d6:	f1 10       	cpse	r15, r1
    27d8:	04 c0       	rjmp	.+8      	; 0x27e2 <TM1650::receive()+0xc6>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:170
    27da:	60 e0       	ldi	r22, 0x00	; 0
    27dc:	8d 81       	ldd	r24, Y+5	; 0x05
    27de:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:171
    27e2:	61 e0       	ldi	r22, 0x01	; 1
    27e4:	8d 81       	ldd	r24, Y+5	; 0x05
    27e6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:174
    27ea:	81 2f       	mov	r24, r17
    27ec:	df 91       	pop	r29
    27ee:	cf 91       	pop	r28
    27f0:	1f 91       	pop	r17
    27f2:	ff 90       	pop	r15
    27f4:	ef 90       	pop	r14
    27f6:	08 95       	ret

000027f8 <TM1650::TM1650(unsigned char, unsigned char, unsigned char, bool, unsigned char, unsigned char)>:
_ZN6TM1650C2Ehhhbhh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:14
    27f8:	af 92       	push	r10
    27fa:	cf 92       	push	r12
    27fc:	df 92       	push	r13
    27fe:	ef 92       	push	r14
    2800:	ff 92       	push	r15
    2802:	0f 93       	push	r16
    2804:	1f 93       	push	r17
    2806:	cf 93       	push	r28
    2808:	df 93       	push	r29
    280a:	ec 01       	movw	r28, r24
    280c:	10 2f       	mov	r17, r16
    280e:	fe 2c       	mov	r15, r14
    2810:	dc 2c       	mov	r13, r12
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:15
    2812:	ae 2c       	mov	r10, r14
    2814:	c0 2e       	mov	r12, r16
    2816:	e2 2e       	mov	r14, r18
    2818:	04 e0       	ldi	r16, 0x04	; 4
    281a:	26 2f       	mov	r18, r22
    281c:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <TM16xx::TM16xx(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, bool, unsigned char)>
    2820:	86 eb       	ldi	r24, 0xB6	; 182
    2822:	92 e0       	ldi	r25, 0x02	; 2
    2824:	99 83       	std	Y+1, r25	; 0x01
    2826:	88 83       	st	Y, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:17
    2828:	ce 01       	movw	r24, r28
    282a:	0e 94 33 12 	call	0x2466	; 0x2466 <TM1650::clearDisplay()>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:20
    282e:	81 e0       	ldi	r24, 0x01	; 1
    2830:	d8 16       	cp	r13, r24
    2832:	81 f0       	breq	.+32     	; 0x2854 <TM1650::TM1650(unsigned char, unsigned char, unsigned char, bool, unsigned char, unsigned char)+0x5c>
    2834:	87 e0       	ldi	r24, 0x07	; 7
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:20 (discriminator 4)
    2836:	8b 83       	std	Y+3, r24	; 0x03
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:22 (discriminator 4)
    2838:	4f 2d       	mov	r20, r15
    283a:	61 2f       	mov	r22, r17
    283c:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:23 (discriminator 4)
    283e:	df 91       	pop	r29
    2840:	cf 91       	pop	r28
    2842:	1f 91       	pop	r17
    2844:	0f 91       	pop	r16
    2846:	ff 90       	pop	r15
    2848:	ef 90       	pop	r14
    284a:	df 90       	pop	r13
    284c:	cf 90       	pop	r12
    284e:	af 90       	pop	r10
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:22 (discriminator 4)
    2850:	0c 94 52 12 	jmp	0x24a4	; 0x24a4 <TM1650::setupDisplay(bool, unsigned char)>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM1650.cpp:20
    2854:	88 e0       	ldi	r24, 0x08	; 8
    2856:	ef cf       	rjmp	.-34     	; 0x2836 <TM1650::TM1650(unsigned char, unsigned char, unsigned char, bool, unsigned char, unsigned char)+0x3e>

00002858 <TM16xx::setupDisplay(bool, unsigned char)>:
_ZN6TM16xx12setupDisplayEbh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:64
    2858:	dc 01       	movw	r26, r24
    285a:	ed 91       	ld	r30, X+
    285c:	fc 91       	ld	r31, X
    285e:	02 a0       	ldd	r0, Z+34	; 0x22
    2860:	f3 a1       	ldd	r31, Z+35	; 0x23
    2862:	e0 2d       	mov	r30, r0
    2864:	61 11       	cpse	r22, r1
    2866:	06 c0       	rjmp	.+12     	; 0x2874 <TM16xx::setupDisplay(bool, unsigned char)+0x1c>
    2868:	60 e8       	ldi	r22, 0x80	; 128
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:64 (discriminator 4)
    286a:	48 30       	cpi	r20, 0x08	; 8
    286c:	08 f0       	brcs	.+2      	; 0x2870 <TM16xx::setupDisplay(bool, unsigned char)+0x18>
    286e:	47 e0       	ldi	r20, 0x07	; 7
    2870:	64 2b       	or	r22, r20
    2872:	09 94       	ijmp
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:64
    2874:	68 e8       	ldi	r22, 0x88	; 136
    2876:	f9 cf       	rjmp	.-14     	; 0x286a <TM16xx::setupDisplay(bool, unsigned char)+0x12>

00002878 <TM16xx::clearDisplay()>:
_ZN6TM16xx12clearDisplayEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:68
    2878:	0f 93       	push	r16
    287a:	1f 93       	push	r17
    287c:	cf 93       	push	r28
    287e:	df 93       	push	r29
    2880:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:73
    2882:	e8 81       	ld	r30, Y
    2884:	f9 81       	ldd	r31, Y+1	; 0x01
    2886:	02 a0       	ldd	r0, Z+34	; 0x22
    2888:	f3 a1       	ldd	r31, Z+35	; 0x23
    288a:	e0 2d       	mov	r30, r0
    288c:	60 e4       	ldi	r22, 0x40	; 64
    288e:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:76
    2890:	e8 81       	ld	r30, Y
    2892:	f9 81       	ldd	r31, Y+1	; 0x01
    2894:	04 8c       	ldd	r0, Z+28	; 0x1c
    2896:	f5 8d       	ldd	r31, Z+29	; 0x1d
    2898:	e0 2d       	mov	r30, r0
    289a:	ce 01       	movw	r24, r28
    289c:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:77
    289e:	e8 81       	ld	r30, Y
    28a0:	f9 81       	ldd	r31, Y+1	; 0x01
    28a2:	00 a0       	ldd	r0, Z+32	; 0x20
    28a4:	f1 a1       	ldd	r31, Z+33	; 0x21
    28a6:	e0 2d       	mov	r30, r0
    28a8:	60 ec       	ldi	r22, 0xC0	; 192
    28aa:	ce 01       	movw	r24, r28
    28ac:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:78
    28ae:	10 e0       	ldi	r17, 0x00	; 0
    28b0:	00 e0       	ldi	r16, 0x00	; 0
    28b2:	e8 81       	ld	r30, Y
    28b4:	f9 81       	ldd	r31, Y+1	; 0x01
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:78 (discriminator 1)
    28b6:	8a 81       	ldd	r24, Y+2	; 0x02
    28b8:	80 17       	cp	r24, r16
    28ba:	11 06       	cpc	r1, r17
    28bc:	a9 f0       	breq	.+42     	; 0x28e8 <TM16xx::clearDisplay()+0x70>
    28be:	a4 f0       	brlt	.+40     	; 0x28e8 <TM16xx::clearDisplay()+0x70>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:79
    28c0:	00 a0       	ldd	r0, Z+32	; 0x20
    28c2:	f1 a1       	ldd	r31, Z+33	; 0x21
    28c4:	e0 2d       	mov	r30, r0
    28c6:	60 e0       	ldi	r22, 0x00	; 0
    28c8:	ce 01       	movw	r24, r28
    28ca:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:80
    28cc:	8b 81       	ldd	r24, Y+3	; 0x03
    28ce:	89 30       	cpi	r24, 0x09	; 9
    28d0:	40 f0       	brcs	.+16     	; 0x28e2 <TM16xx::clearDisplay()+0x6a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:81
    28d2:	e8 81       	ld	r30, Y
    28d4:	f9 81       	ldd	r31, Y+1	; 0x01
    28d6:	00 a0       	ldd	r0, Z+32	; 0x20
    28d8:	f1 a1       	ldd	r31, Z+33	; 0x21
    28da:	e0 2d       	mov	r30, r0
    28dc:	60 e0       	ldi	r22, 0x00	; 0
    28de:	ce 01       	movw	r24, r28
    28e0:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:78 (discriminator 2)
    28e2:	0f 5f       	subi	r16, 0xFF	; 255
    28e4:	1f 4f       	sbci	r17, 0xFF	; 255
    28e6:	e5 cf       	rjmp	.-54     	; 0x28b2 <TM16xx::clearDisplay()+0x3a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:83
    28e8:	06 8c       	ldd	r0, Z+30	; 0x1e
    28ea:	f7 8d       	ldd	r31, Z+31	; 0x1f
    28ec:	e0 2d       	mov	r30, r0
    28ee:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:85
    28f0:	df 91       	pop	r29
    28f2:	cf 91       	pop	r28
    28f4:	1f 91       	pop	r17
    28f6:	0f 91       	pop	r16
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:83
    28f8:	09 94       	ijmp

000028fa <TM16xx::setSegments16(unsigned int, unsigned char)>:
_ZN6TM16xx13setSegments16Ejh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:102
    28fa:	08 95       	ret

000028fc <TM16xx::sendChar(unsigned char, unsigned char, bool)>:
_ZN6TM16xx8sendCharEhhb():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:106
    28fc:	36 2f       	mov	r19, r22
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:111
    28fe:	dc 01       	movw	r26, r24
    2900:	ed 91       	ld	r30, X+
    2902:	fc 91       	ld	r31, X
    2904:	04 80       	ldd	r0, Z+4	; 0x04
    2906:	f5 81       	ldd	r31, Z+5	; 0x05
    2908:	e0 2d       	mov	r30, r0
    290a:	60 e0       	ldi	r22, 0x00	; 0
    290c:	21 11       	cpse	r18, r1
    290e:	60 e8       	ldi	r22, 0x80	; 128
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:111 (discriminator 4)
    2910:	64 2b       	or	r22, r20
    2912:	43 2f       	mov	r20, r19
    2914:	09 94       	ijmp

00002916 <TM16xx::sendAsciiChar(unsigned char, char, bool)>:
_ZN6TM16xx13sendAsciiCharEhcb():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:119
    2916:	e4 2f       	mov	r30, r20
    2918:	44 0f       	add	r20, r20
    291a:	ff 0b       	sbc	r31, r31
    291c:	e7 5c       	subi	r30, 0xC7	; 199
    291e:	fe 4f       	sbci	r31, 0xFE	; 254
    2920:	44 91       	lpm	r20, Z
    2922:	dc 01       	movw	r26, r24
    2924:	ed 91       	ld	r30, X+
    2926:	fc 91       	ld	r31, X
    2928:	02 88       	ldd	r0, Z+18	; 0x12
    292a:	f3 89       	ldd	r31, Z+19	; 0x13
    292c:	e0 2d       	mov	r30, r0
    292e:	09 94       	ijmp

00002930 <TM16xx::setDisplayDigit(unsigned char, unsigned char, bool, unsigned char const*)>:
_ZN6TM16xx15setDisplayDigitEhhbPKh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:124
    2930:	0f 93       	push	r16
    2932:	1f 93       	push	r17
    2934:	e6 2f       	mov	r30, r22
    2936:	64 2f       	mov	r22, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:125
    2938:	ef 70       	andi	r30, 0x0F	; 15
    293a:	e0 0f       	add	r30, r16
    293c:	f1 2f       	mov	r31, r17
    293e:	f1 1d       	adc	r31, r1
    2940:	44 91       	lpm	r20, Z
    2942:	dc 01       	movw	r26, r24
    2944:	ed 91       	ld	r30, X+
    2946:	fc 91       	ld	r31, X
    2948:	02 88       	ldd	r0, Z+18	; 0x12
    294a:	f3 89       	ldd	r31, Z+19	; 0x13
    294c:	e0 2d       	mov	r30, r0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:126
    294e:	1f 91       	pop	r17
    2950:	0f 91       	pop	r16
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:125
    2952:	09 94       	ijmp

00002954 <TM16xx::setDisplayToDecNumber(int, unsigned char)>:
_ZN6TM16xx21setDisplayToDecNumberEih():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:129
    2954:	9f 92       	push	r9
    2956:	af 92       	push	r10
    2958:	bf 92       	push	r11
    295a:	cf 92       	push	r12
    295c:	df 92       	push	r13
    295e:	ef 92       	push	r14
    2960:	ff 92       	push	r15
    2962:	0f 93       	push	r16
    2964:	1f 93       	push	r17
    2966:	cf 93       	push	r28
    2968:	df 93       	push	r29
    296a:	7c 01       	movw	r14, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:134
    296c:	c1 e0       	ldi	r28, 0x01	; 1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:136
    296e:	c4 2e       	mov	r12, r20
    2970:	d1 2c       	mov	r13, r1
    2972:	8a e0       	ldi	r24, 0x0A	; 10
    2974:	a8 2e       	mov	r10, r24
    2976:	b1 2c       	mov	r11, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:134 (discriminator 3)
    2978:	d7 01       	movw	r26, r14
    297a:	14 96       	adiw	r26, 0x04	; 4
    297c:	4c 91       	ld	r20, X
    297e:	4c 17       	cp	r20, r28
    2980:	f0 f0       	brcs	.+60     	; 0x29be <TM16xx::setDisplayToDecNumber(int, unsigned char)+0x6a>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:136 (discriminator 2)
    2982:	96 01       	movw	r18, r12
    2984:	0c 2e       	mov	r0, r28
    2986:	02 c0       	rjmp	.+4      	; 0x298c <TM16xx::setDisplayToDecNumber(int, unsigned char)+0x38>
    2988:	35 95       	asr	r19
    298a:	27 95       	ror	r18
    298c:	0a 94       	dec	r0
    298e:	e2 f7       	brpl	.-8      	; 0x2988 <TM16xx::setDisplayToDecNumber(int, unsigned char)+0x34>
    2990:	21 70       	andi	r18, 0x01	; 1
    2992:	4c 1b       	sub	r20, r28
    2994:	cb 01       	movw	r24, r22
    2996:	b5 01       	movw	r22, r10
    2998:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__divmodhi4>
    299c:	96 2e       	mov	r9, r22
    299e:	d7 2f       	mov	r29, r23
    29a0:	d7 01       	movw	r26, r14
    29a2:	ed 91       	ld	r30, X+
    29a4:	fc 91       	ld	r31, X
    29a6:	00 84       	ldd	r0, Z+8	; 0x08
    29a8:	f1 85       	ldd	r31, Z+9	; 0x09
    29aa:	e0 2d       	mov	r30, r0
    29ac:	08 eb       	ldi	r16, 0xB8	; 184
    29ae:	11 e0       	ldi	r17, 0x01	; 1
    29b0:	68 2f       	mov	r22, r24
    29b2:	c7 01       	movw	r24, r14
    29b4:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:137 (discriminator 2)
    29b6:	69 2d       	mov	r22, r9
    29b8:	7d 2f       	mov	r23, r29
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:134 (discriminator 2)
    29ba:	cf 5f       	subi	r28, 0xFF	; 255
    29bc:	dd cf       	rjmp	.-70     	; 0x2978 <TM16xx::setDisplayToDecNumber(int, unsigned char)+0x24>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:139
    29be:	df 91       	pop	r29
    29c0:	cf 91       	pop	r28
    29c2:	1f 91       	pop	r17
    29c4:	0f 91       	pop	r16
    29c6:	ff 90       	pop	r15
    29c8:	ef 90       	pop	r14
    29ca:	df 90       	pop	r13
    29cc:	cf 90       	pop	r12
    29ce:	bf 90       	pop	r11
    29d0:	af 90       	pop	r10
    29d2:	9f 90       	pop	r9
    29d4:	08 95       	ret

000029d6 <TM16xx::clearDisplayDigit(unsigned char, bool)>:
_ZN6TM16xx17clearDisplayDigitEhb():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:142
    29d6:	24 2f       	mov	r18, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:143
    29d8:	dc 01       	movw	r26, r24
    29da:	ed 91       	ld	r30, X+
    29dc:	fc 91       	ld	r31, X
    29de:	02 88       	ldd	r0, Z+18	; 0x12
    29e0:	f3 89       	ldd	r31, Z+19	; 0x13
    29e2:	e0 2d       	mov	r30, r0
    29e4:	40 e0       	ldi	r20, 0x00	; 0
    29e6:	09 94       	ijmp

000029e8 <TM16xx::setDisplay(unsigned char const*, unsigned char)>:
_ZN6TM16xx10setDisplayEPKhh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:147
    29e8:	cf 92       	push	r12
    29ea:	df 92       	push	r13
    29ec:	ef 92       	push	r14
    29ee:	ff 92       	push	r15
    29f0:	0f 93       	push	r16
    29f2:	1f 93       	push	r17
    29f4:	cf 93       	push	r28
    29f6:	df 93       	push	r29
    29f8:	7c 01       	movw	r14, r24
    29fa:	6b 01       	movw	r12, r22
    29fc:	04 2f       	mov	r16, r20
    29fe:	10 e0       	ldi	r17, 0x00	; 0
    2a00:	d0 e0       	ldi	r29, 0x00	; 0
    2a02:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:148 (discriminator 3)
    2a04:	c0 17       	cp	r28, r16
    2a06:	d1 07       	cpc	r29, r17
    2a08:	81 f0       	breq	.+32     	; 0x2a2a <TM16xx::setDisplay(unsigned char const*, unsigned char)+0x42>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:149 (discriminator 2)
    2a0a:	f6 01       	movw	r30, r12
    2a0c:	ec 0f       	add	r30, r28
    2a0e:	fd 1f       	adc	r31, r29
    2a10:	44 91       	lpm	r20, Z
    2a12:	d7 01       	movw	r26, r14
    2a14:	ed 91       	ld	r30, X+
    2a16:	fc 91       	ld	r31, X
    2a18:	02 88       	ldd	r0, Z+18	; 0x12
    2a1a:	f3 89       	ldd	r31, Z+19	; 0x13
    2a1c:	e0 2d       	mov	r30, r0
    2a1e:	20 e0       	ldi	r18, 0x00	; 0
    2a20:	6c 2f       	mov	r22, r28
    2a22:	c7 01       	movw	r24, r14
    2a24:	09 95       	icall
    2a26:	21 96       	adiw	r28, 0x01	; 1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:148 (discriminator 2)
    2a28:	ed cf       	rjmp	.-38     	; 0x2a04 <TM16xx::setDisplay(unsigned char const*, unsigned char)+0x1c>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:151
    2a2a:	df 91       	pop	r29
    2a2c:	cf 91       	pop	r28
    2a2e:	1f 91       	pop	r17
    2a30:	0f 91       	pop	r16
    2a32:	ff 90       	pop	r15
    2a34:	ef 90       	pop	r14
    2a36:	df 90       	pop	r13
    2a38:	cf 90       	pop	r12
    2a3a:	08 95       	ret

00002a3c <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)>:
_ZN6TM16xx18setDisplayToStringEPKcjhPKh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:154
    2a3c:	7f 92       	push	r7
    2a3e:	8f 92       	push	r8
    2a40:	9f 92       	push	r9
    2a42:	af 92       	push	r10
    2a44:	bf 92       	push	r11
    2a46:	cf 92       	push	r12
    2a48:	df 92       	push	r13
    2a4a:	ef 92       	push	r14
    2a4c:	ff 92       	push	r15
    2a4e:	0f 93       	push	r16
    2a50:	1f 93       	push	r17
    2a52:	cf 93       	push	r28
    2a54:	df 93       	push	r29
    2a56:	7c 01       	movw	r14, r24
    2a58:	6a 01       	movw	r12, r20
    2a5a:	72 2e       	mov	r7, r18
    2a5c:	8b 01       	movw	r16, r22
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:155
    2a5e:	d0 e0       	ldi	r29, 0x00	; 0
    2a60:	c0 e0       	ldi	r28, 0x00	; 0
    2a62:	a2 2e       	mov	r10, r18
    2a64:	b1 2c       	mov	r11, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:158
    2a66:	88 24       	eor	r8, r8
    2a68:	83 94       	inc	r8
    2a6a:	91 2c       	mov	r9, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:155 (discriminator 1)
    2a6c:	d7 01       	movw	r26, r14
    2a6e:	14 96       	adiw	r26, 0x04	; 4
    2a70:	8c 91       	ld	r24, X
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	9c 01       	movw	r18, r24
    2a76:	2a 19       	sub	r18, r10
    2a78:	3b 09       	sbc	r19, r11
    2a7a:	c2 17       	cp	r28, r18
    2a7c:	d3 07       	cpc	r29, r19
    2a7e:	0c f5       	brge	.+66     	; 0x2ac2 <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x86>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:156
    2a80:	f8 01       	movw	r30, r16
    2a82:	41 91       	ld	r20, Z+
    2a84:	8f 01       	movw	r16, r30
    2a86:	44 23       	and	r20, r20
    2a88:	e1 f0       	breq	.+56     	; 0x2ac2 <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x86>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:158 (discriminator 2)
    2a8a:	8c 1b       	sub	r24, r28
    2a8c:	9d 0b       	sbc	r25, r29
    2a8e:	01 97       	sbiw	r24, 0x01	; 1
    2a90:	94 01       	movw	r18, r8
    2a92:	02 c0       	rjmp	.+4      	; 0x2a98 <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x5c>
    2a94:	22 0f       	add	r18, r18
    2a96:	33 1f       	adc	r19, r19
    2a98:	8a 95       	dec	r24
    2a9a:	e2 f7       	brpl	.-8      	; 0x2a94 <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x58>
    2a9c:	c9 01       	movw	r24, r18
    2a9e:	8c 21       	and	r24, r12
    2aa0:	9d 21       	and	r25, r13
    2aa2:	21 e0       	ldi	r18, 0x01	; 1
    2aa4:	89 2b       	or	r24, r25
    2aa6:	09 f4       	brne	.+2      	; 0x2aaa <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x6e>
    2aa8:	20 e0       	ldi	r18, 0x00	; 0
    2aaa:	6c 2f       	mov	r22, r28
    2aac:	67 0d       	add	r22, r7
    2aae:	d7 01       	movw	r26, r14
    2ab0:	ed 91       	ld	r30, X+
    2ab2:	fc 91       	ld	r31, X
    2ab4:	06 88       	ldd	r0, Z+22	; 0x16
    2ab6:	f7 89       	ldd	r31, Z+23	; 0x17
    2ab8:	e0 2d       	mov	r30, r0
    2aba:	c7 01       	movw	r24, r14
    2abc:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:155 (discriminator 2)
    2abe:	21 96       	adiw	r28, 0x01	; 1
    2ac0:	d5 cf       	rjmp	.-86     	; 0x2a6c <TM16xx::setDisplayToString(char const*, unsigned int, unsigned char, unsigned char const*)+0x30>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:163
    2ac2:	df 91       	pop	r29
    2ac4:	cf 91       	pop	r28
    2ac6:	1f 91       	pop	r17
    2ac8:	0f 91       	pop	r16
    2aca:	ff 90       	pop	r15
    2acc:	ef 90       	pop	r14
    2ace:	df 90       	pop	r13
    2ad0:	cf 90       	pop	r12
    2ad2:	bf 90       	pop	r11
    2ad4:	af 90       	pop	r10
    2ad6:	9f 90       	pop	r9
    2ad8:	8f 90       	pop	r8
    2ada:	7f 90       	pop	r7
    2adc:	08 95       	ret

00002ade <TM16xx::getNumDigits()>:
_ZN6TM16xx12getNumDigitsEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:168
    2ade:	fc 01       	movw	r30, r24
    2ae0:	84 81       	ldd	r24, Z+4	; 0x04
    2ae2:	08 95       	ret

00002ae4 <TM16xx::getButtons()>:
_ZN6TM16xx10getButtonsEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:174
    2ae4:	60 e0       	ldi	r22, 0x00	; 0
    2ae6:	70 e0       	ldi	r23, 0x00	; 0
    2ae8:	cb 01       	movw	r24, r22
    2aea:	08 95       	ret

00002aec <TM16xx::bitDelay()>:
_ZN6TM16xx8bitDelayEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:195
    2aec:	08 95       	ret

00002aee <TM16xx::sendCommand(unsigned char)>:
_ZN6TM16xx11sendCommandEh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:226
    2aee:	1f 93       	push	r17
    2af0:	cf 93       	push	r28
    2af2:	df 93       	push	r29
    2af4:	ec 01       	movw	r28, r24
    2af6:	16 2f       	mov	r17, r22
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:227
    2af8:	e8 81       	ld	r30, Y
    2afa:	f9 81       	ldd	r31, Y+1	; 0x01
    2afc:	04 8c       	ldd	r0, Z+28	; 0x1c
    2afe:	f5 8d       	ldd	r31, Z+29	; 0x1d
    2b00:	e0 2d       	mov	r30, r0
    2b02:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:228
    2b04:	e8 81       	ld	r30, Y
    2b06:	f9 81       	ldd	r31, Y+1	; 0x01
    2b08:	00 a0       	ldd	r0, Z+32	; 0x20
    2b0a:	f1 a1       	ldd	r31, Z+33	; 0x21
    2b0c:	e0 2d       	mov	r30, r0
    2b0e:	61 2f       	mov	r22, r17
    2b10:	ce 01       	movw	r24, r28
    2b12:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:229
    2b14:	e8 81       	ld	r30, Y
    2b16:	f9 81       	ldd	r31, Y+1	; 0x01
    2b18:	06 8c       	ldd	r0, Z+30	; 0x1e
    2b1a:	f7 8d       	ldd	r31, Z+31	; 0x1f
    2b1c:	e0 2d       	mov	r30, r0
    2b1e:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:230
    2b20:	df 91       	pop	r29
    2b22:	cf 91       	pop	r28
    2b24:	1f 91       	pop	r17
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:229
    2b26:	09 94       	ijmp

00002b28 <TM16xx::sendData(unsigned char, unsigned char)>:
_ZN6TM16xx8sendDataEhh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:233
    2b28:	0f 93       	push	r16
    2b2a:	1f 93       	push	r17
    2b2c:	cf 93       	push	r28
    2b2e:	df 93       	push	r29
    2b30:	ec 01       	movw	r28, r24
    2b32:	16 2f       	mov	r17, r22
    2b34:	04 2f       	mov	r16, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:234
    2b36:	e8 81       	ld	r30, Y
    2b38:	f9 81       	ldd	r31, Y+1	; 0x01
    2b3a:	02 a0       	ldd	r0, Z+34	; 0x22
    2b3c:	f3 a1       	ldd	r31, Z+35	; 0x23
    2b3e:	e0 2d       	mov	r30, r0
    2b40:	64 e4       	ldi	r22, 0x44	; 68
    2b42:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:235
    2b44:	e8 81       	ld	r30, Y
    2b46:	f9 81       	ldd	r31, Y+1	; 0x01
    2b48:	04 8c       	ldd	r0, Z+28	; 0x1c
    2b4a:	f5 8d       	ldd	r31, Z+29	; 0x1d
    2b4c:	e0 2d       	mov	r30, r0
    2b4e:	ce 01       	movw	r24, r28
    2b50:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:236
    2b52:	61 2f       	mov	r22, r17
    2b54:	60 6c       	ori	r22, 0xC0	; 192
    2b56:	e8 81       	ld	r30, Y
    2b58:	f9 81       	ldd	r31, Y+1	; 0x01
    2b5a:	00 a0       	ldd	r0, Z+32	; 0x20
    2b5c:	f1 a1       	ldd	r31, Z+33	; 0x21
    2b5e:	e0 2d       	mov	r30, r0
    2b60:	ce 01       	movw	r24, r28
    2b62:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:237
    2b64:	e8 81       	ld	r30, Y
    2b66:	f9 81       	ldd	r31, Y+1	; 0x01
    2b68:	00 a0       	ldd	r0, Z+32	; 0x20
    2b6a:	f1 a1       	ldd	r31, Z+33	; 0x21
    2b6c:	e0 2d       	mov	r30, r0
    2b6e:	60 2f       	mov	r22, r16
    2b70:	ce 01       	movw	r24, r28
    2b72:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:238
    2b74:	e8 81       	ld	r30, Y
    2b76:	f9 81       	ldd	r31, Y+1	; 0x01
    2b78:	06 8c       	ldd	r0, Z+30	; 0x1e
    2b7a:	f7 8d       	ldd	r31, Z+31	; 0x1f
    2b7c:	e0 2d       	mov	r30, r0
    2b7e:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:239
    2b80:	df 91       	pop	r29
    2b82:	cf 91       	pop	r28
    2b84:	1f 91       	pop	r17
    2b86:	0f 91       	pop	r16
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:238
    2b88:	09 94       	ijmp

00002b8a <TM16xx::start()>:
_ZN6TM16xx5startEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:198
    2b8a:	cf 93       	push	r28
    2b8c:	df 93       	push	r29
    2b8e:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:199
    2b90:	60 e0       	ldi	r22, 0x00	; 0
    2b92:	8f 81       	ldd	r24, Y+7	; 0x07
    2b94:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:200
    2b98:	e8 81       	ld	r30, Y
    2b9a:	f9 81       	ldd	r31, Y+1	; 0x01
    2b9c:	02 8c       	ldd	r0, Z+26	; 0x1a
    2b9e:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2ba0:	e0 2d       	mov	r30, r0
    2ba2:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:201
    2ba4:	df 91       	pop	r29
    2ba6:	cf 91       	pop	r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:200
    2ba8:	09 94       	ijmp

00002baa <TM16xx::stop()>:
_ZN6TM16xx4stopEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:204
    2baa:	cf 93       	push	r28
    2bac:	df 93       	push	r29
    2bae:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:205
    2bb0:	61 e0       	ldi	r22, 0x01	; 1
    2bb2:	8f 81       	ldd	r24, Y+7	; 0x07
    2bb4:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:206
    2bb8:	e8 81       	ld	r30, Y
    2bba:	f9 81       	ldd	r31, Y+1	; 0x01
    2bbc:	02 8c       	ldd	r0, Z+26	; 0x1a
    2bbe:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2bc0:	e0 2d       	mov	r30, r0
    2bc2:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:207
    2bc4:	df 91       	pop	r29
    2bc6:	cf 91       	pop	r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:206
    2bc8:	09 94       	ijmp

00002bca <TM16xx::send(unsigned char)>:
_ZN6TM16xx4sendEh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:210
    2bca:	ff 92       	push	r15
    2bcc:	0f 93       	push	r16
    2bce:	1f 93       	push	r17
    2bd0:	cf 93       	push	r28
    2bd2:	df 93       	push	r29
    2bd4:	ec 01       	movw	r28, r24
    2bd6:	f6 2e       	mov	r15, r22
    2bd8:	08 e0       	ldi	r16, 0x08	; 8
    2bda:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:214 (discriminator 2)
    2bdc:	60 e0       	ldi	r22, 0x00	; 0
    2bde:	8e 81       	ldd	r24, Y+6	; 0x06
    2be0:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:215 (discriminator 2)
    2be4:	e8 81       	ld	r30, Y
    2be6:	f9 81       	ldd	r31, Y+1	; 0x01
    2be8:	02 8c       	ldd	r0, Z+26	; 0x1a
    2bea:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2bec:	e0 2d       	mov	r30, r0
    2bee:	ce 01       	movw	r24, r28
    2bf0:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:216 (discriminator 2)
    2bf2:	6f 2d       	mov	r22, r15
    2bf4:	61 70       	andi	r22, 0x01	; 1
    2bf6:	8d 81       	ldd	r24, Y+5	; 0x05
    2bf8:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:217 (discriminator 2)
    2bfc:	e8 81       	ld	r30, Y
    2bfe:	f9 81       	ldd	r31, Y+1	; 0x01
    2c00:	02 8c       	ldd	r0, Z+26	; 0x1a
    2c02:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2c04:	e0 2d       	mov	r30, r0
    2c06:	ce 01       	movw	r24, r28
    2c08:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:218 (discriminator 2)
    2c0a:	f6 94       	lsr	r15
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:219 (discriminator 2)
    2c0c:	61 e0       	ldi	r22, 0x01	; 1
    2c0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2c10:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:220 (discriminator 2)
    2c14:	e8 81       	ld	r30, Y
    2c16:	f9 81       	ldd	r31, Y+1	; 0x01
    2c18:	02 8c       	ldd	r0, Z+26	; 0x1a
    2c1a:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2c1c:	e0 2d       	mov	r30, r0
    2c1e:	ce 01       	movw	r24, r28
    2c20:	09 95       	icall
    2c22:	01 50       	subi	r16, 0x01	; 1
    2c24:	11 09       	sbc	r17, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:213 (discriminator 2)
    2c26:	d1 f6       	brne	.-76     	; 0x2bdc <TM16xx::send(unsigned char)+0x12>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:222
    2c28:	e8 81       	ld	r30, Y
    2c2a:	f9 81       	ldd	r31, Y+1	; 0x01
    2c2c:	02 8c       	ldd	r0, Z+26	; 0x1a
    2c2e:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2c30:	e0 2d       	mov	r30, r0
    2c32:	ce 01       	movw	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:223
    2c34:	df 91       	pop	r29
    2c36:	cf 91       	pop	r28
    2c38:	1f 91       	pop	r17
    2c3a:	0f 91       	pop	r16
    2c3c:	ff 90       	pop	r15
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:222
    2c3e:	09 94       	ijmp

00002c40 <TM16xx::receive()>:
_ZN6TM16xx7receiveEv():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:242
    2c40:	cf 92       	push	r12
    2c42:	df 92       	push	r13
    2c44:	ef 92       	push	r14
    2c46:	ff 92       	push	r15
    2c48:	1f 93       	push	r17
    2c4a:	cf 93       	push	r28
    2c4c:	df 93       	push	r29
    2c4e:	ec 01       	movw	r28, r24
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:246
    2c50:	60 e0       	ldi	r22, 0x00	; 0
    2c52:	8d 81       	ldd	r24, Y+5	; 0x05
    2c54:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:247
    2c58:	61 e0       	ldi	r22, 0x01	; 1
    2c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    2c5c:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    2c60:	98 e0       	ldi	r25, 0x08	; 8
    2c62:	c9 2e       	mov	r12, r25
    2c64:	d1 2c       	mov	r13, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:243
    2c66:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:250
    2c68:	e1 2e       	mov	r14, r17
    2c6a:	f1 2c       	mov	r15, r1
    2c6c:	f5 94       	asr	r15
    2c6e:	e7 94       	ror	r14
    2c70:	1e 2d       	mov	r17, r14
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:252
    2c72:	60 e0       	ldi	r22, 0x00	; 0
    2c74:	8e 81       	ldd	r24, Y+6	; 0x06
    2c76:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:253
    2c7a:	e8 81       	ld	r30, Y
    2c7c:	f9 81       	ldd	r31, Y+1	; 0x01
    2c7e:	02 8c       	ldd	r0, Z+26	; 0x1a
    2c80:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2c82:	e0 2d       	mov	r30, r0
    2c84:	ce 01       	movw	r24, r28
    2c86:	09 95       	icall
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:255
    2c88:	8d 81       	ldd	r24, Y+5	; 0x05
    2c8a:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <digitalRead>
    2c8e:	89 2b       	or	r24, r25
    2c90:	09 f0       	breq	.+2      	; 0x2c94 <TM16xx::receive()+0x54>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:256
    2c92:	10 68       	ori	r17, 0x80	; 128
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:259 (discriminator 2)
    2c94:	61 e0       	ldi	r22, 0x01	; 1
    2c96:	8e 81       	ldd	r24, Y+6	; 0x06
    2c98:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:260 (discriminator 2)
    2c9c:	e8 81       	ld	r30, Y
    2c9e:	f9 81       	ldd	r31, Y+1	; 0x01
    2ca0:	02 8c       	ldd	r0, Z+26	; 0x1a
    2ca2:	f3 8d       	ldd	r31, Z+27	; 0x1b
    2ca4:	e0 2d       	mov	r30, r0
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	09 95       	icall
    2caa:	81 e0       	ldi	r24, 0x01	; 1
    2cac:	c8 1a       	sub	r12, r24
    2cae:	d1 08       	sbc	r13, r1
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:249 (discriminator 2)
    2cb0:	d9 f6       	brne	.-74     	; 0x2c68 <TM16xx::receive()+0x28>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:264
    2cb2:	61 e0       	ldi	r22, 0x01	; 1
    2cb4:	8d 81       	ldd	r24, Y+5	; 0x05
    2cb6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:265
    2cba:	60 e0       	ldi	r22, 0x00	; 0
    2cbc:	8d 81       	ldd	r24, Y+5	; 0x05
    2cbe:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:268
    2cc2:	81 2f       	mov	r24, r17
    2cc4:	df 91       	pop	r29
    2cc6:	cf 91       	pop	r28
    2cc8:	1f 91       	pop	r17
    2cca:	ff 90       	pop	r15
    2ccc:	ef 90       	pop	r14
    2cce:	df 90       	pop	r13
    2cd0:	cf 90       	pop	r12
    2cd2:	08 95       	ret

00002cd4 <TM16xx::setSegments(unsigned char, unsigned char)>:
_ZN6TM16xx11setSegmentsEhh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:88
    2cd4:	24 2f       	mov	r18, r20
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:90
    2cd6:	dc 01       	movw	r26, r24
    2cd8:	12 96       	adiw	r26, 0x02	; 2
    2cda:	3c 91       	ld	r19, X
    2cdc:	12 97       	sbiw	r26, 0x02	; 2
    2cde:	43 17       	cp	r20, r19
    2ce0:	40 f4       	brcc	.+16     	; 0x2cf2 <TM16xx::setSegments(unsigned char, unsigned char)+0x1e>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:91
    2ce2:	ed 91       	ld	r30, X+
    2ce4:	fc 91       	ld	r31, X
    2ce6:	04 a0       	ldd	r0, Z+36	; 0x24
    2ce8:	f5 a1       	ldd	r31, Z+37	; 0x25
    2cea:	e0 2d       	mov	r30, r0
    2cec:	46 2f       	mov	r20, r22
    2cee:	62 2f       	mov	r22, r18
    2cf0:	09 94       	ijmp
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:93
    2cf2:	08 95       	ret

00002cf4 <TM16xx::TM16xx(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, bool, unsigned char)>:
_ZN6TM16xxC2Ehhhhhbh():
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:29
    2cf4:	ef 92       	push	r14
    2cf6:	0f 93       	push	r16
    2cf8:	cf 93       	push	r28
    2cfa:	df 93       	push	r29
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	86 2f       	mov	r24, r22
    2d00:	c4 2f       	mov	r28, r20
    2d02:	d2 2f       	mov	r29, r18
    2d04:	22 ee       	ldi	r18, 0xE2	; 226
    2d06:	32 e0       	ldi	r19, 0x02	; 2
    2d08:	31 83       	std	Z+1, r19	; 0x01
    2d0a:	20 83       	st	Z, r18
    2d0c:	98 e0       	ldi	r25, 0x08	; 8
    2d0e:	93 83       	std	Z+3, r25	; 0x03
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:31
    2d10:	65 83       	std	Z+5, r22	; 0x05
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:32
    2d12:	46 83       	std	Z+6, r20	; 0x06
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:33
    2d14:	d7 83       	std	Z+7, r29	; 0x07
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:34
    2d16:	02 83       	std	Z+2, r16	; 0x02
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:35
    2d18:	e4 82       	std	Z+4, r14	; 0x04
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:37
    2d1a:	61 e0       	ldi	r22, 0x01	; 1
    2d1c:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:38
    2d20:	61 e0       	ldi	r22, 0x01	; 1
    2d22:	8c 2f       	mov	r24, r28
    2d24:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:39
    2d28:	61 e0       	ldi	r22, 0x01	; 1
    2d2a:	8d 2f       	mov	r24, r29
    2d2c:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:41
    2d30:	61 e0       	ldi	r22, 0x01	; 1
    2d32:	8d 2f       	mov	r24, r29
    2d34:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:42
    2d38:	61 e0       	ldi	r22, 0x01	; 1
    2d3a:	8c 2f       	mov	r24, r28
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:60
    2d3c:	df 91       	pop	r29
    2d3e:	cf 91       	pop	r28
    2d40:	0f 91       	pop	r16
    2d42:	ef 90       	pop	r14
C:\Users\dlcks\Desktop\아두이노\7segment 플라즈마\ver\Ide_test\Sketch11/TM16xx.cpp:42
    2d44:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>

00002d48 <VisualMicroDebug::DBG_YieldAndWait(unsigned long, bool)>:
_ZN16VisualMicroDebug16DBG_YieldAndWaitEmb():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1273
	b = transport->available();
#else
	b = VM_DEBUGGER_SOFT_TRANSPORT.available();
#endif
	return b;
}
    2d48:	8f 92       	push	r8
    2d4a:	9f 92       	push	r9
    2d4c:	af 92       	push	r10
    2d4e:	bf 92       	push	r11
    2d50:	cf 92       	push	r12
    2d52:	df 92       	push	r13
    2d54:	ef 92       	push	r14
    2d56:	ff 92       	push	r15
    2d58:	6a 01       	movw	r12, r20
    2d5a:	7b 01       	movw	r14, r22
_ZN16VisualMicroDebug10DBG_MillisEv():
    2d5c:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
    2d60:	4b 01       	movw	r8, r22
    2d62:	5c 01       	movw	r10, r24
_ZN16VisualMicroDebug16DBG_YieldAndWaitEmb():
    2d64:	c8 0c       	add	r12, r8
    2d66:	d9 1c       	adc	r13, r9
    2d68:	ea 1c       	adc	r14, r10
    2d6a:	fb 1c       	adc	r15, r11
_ZN16VisualMicroDebug10DBG_MillisEv():
    2d6c:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
_ZN16VisualMicroDebug16DBG_YieldAndWaitEmb():
    2d70:	68 15       	cp	r22, r8
    2d72:	79 05       	cpc	r23, r9
    2d74:	8a 05       	cpc	r24, r10
    2d76:	9b 05       	cpc	r25, r11
    2d78:	28 f0       	brcs	.+10     	; 0x2d84 <VisualMicroDebug::DBG_YieldAndWait(unsigned long, bool)+0x3c>
    2d7a:	c6 16       	cp	r12, r22
    2d7c:	d7 06       	cpc	r13, r23
    2d7e:	e8 06       	cpc	r14, r24
    2d80:	f9 06       	cpc	r15, r25
    2d82:	a0 f7       	brcc	.-24     	; 0x2d6c <VisualMicroDebug::DBG_YieldAndWait(unsigned long, bool)+0x24>
    2d84:	ff 90       	pop	r15
    2d86:	ef 90       	pop	r14
    2d88:	df 90       	pop	r13
    2d8a:	cf 90       	pop	r12
    2d8c:	bf 90       	pop	r11
    2d8e:	af 90       	pop	r10
    2d90:	9f 90       	pop	r9
    2d92:	8f 90       	pop	r8
    2d94:	08 95       	ret

00002d96 <VisualMicroDebug::DBG_YieldAndWait(unsigned long)>:
_ZN16VisualMicroDebug16DBG_YieldAndWaitEm():
    2d96:	21 e0       	ldi	r18, 0x01	; 1
    2d98:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <VisualMicroDebug::DBG_YieldAndWait(unsigned long, bool)>

00002d9c <VisualMicroDebug::VisualMicroDebug()>:
_ZN16VisualMicroDebugC2Ev():
    2d9c:	fc 01       	movw	r30, r24
    2d9e:	16 82       	std	Z+6, r1	; 0x06
    2da0:	17 82       	std	Z+7, r1	; 0x07
    2da2:	10 86       	std	Z+8, r1	; 0x08
    2da4:	11 86       	std	Z+9, r1	; 0x09
    2da6:	12 86       	std	Z+10, r1	; 0x0a
    2da8:	13 86       	std	Z+11, r1	; 0x0b
    2daa:	14 86       	std	Z+12, r1	; 0x0c
    2dac:	15 86       	std	Z+13, r1	; 0x0d
    2dae:	16 86       	std	Z+14, r1	; 0x0e
    2db0:	17 86       	std	Z+15, r1	; 0x0f
    2db2:	10 8a       	std	Z+16, r1	; 0x10
    2db4:	11 8a       	std	Z+17, r1	; 0x11
    2db6:	12 8a       	std	Z+18, r1	; 0x12
    2db8:	13 8a       	std	Z+19, r1	; 0x13
    2dba:	14 8a       	std	Z+20, r1	; 0x14
    2dbc:	15 8a       	std	Z+21, r1	; 0x15
    2dbe:	08 95       	ret

00002dc0 <VisualMicroDebug::outPacketStart(bool)>:
_ZN16VisualMicroDebug14outPacketStartEb():
    2dc0:	0f 93       	push	r16
    2dc2:	1f 93       	push	r17
    2dc4:	cf 93       	push	r28
    2dc6:	df 93       	push	r29
    2dc8:	ec 01       	movw	r28, r24
    2dca:	61 11       	cpse	r22, r1
    2dcc:	1d c0       	rjmp	.+58     	; 0x2e08 <VisualMicroDebug::outPacketStart(bool)+0x48>
_ZN16VisualMicroDebug10DBG_MillisEv():
    2dce:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
_ZN16VisualMicroDebug14outPacketStartEb():
    2dd2:	0a 81       	ldd	r16, Y+2	; 0x02
    2dd4:	1b 81       	ldd	r17, Y+3	; 0x03
    2dd6:	2c 81       	ldd	r18, Y+4	; 0x04
    2dd8:	3d 81       	ldd	r19, Y+5	; 0x05
    2dda:	dc 01       	movw	r26, r24
    2ddc:	cb 01       	movw	r24, r22
    2dde:	80 1b       	sub	r24, r16
    2de0:	91 0b       	sbc	r25, r17
    2de2:	a2 0b       	sbc	r26, r18
    2de4:	b3 0b       	sbc	r27, r19
    2de6:	84 36       	cpi	r24, 0x64	; 100
    2de8:	91 05       	cpc	r25, r1
    2dea:	a1 05       	cpc	r26, r1
    2dec:	b1 05       	cpc	r27, r1
    2dee:	60 f4       	brcc	.+24     	; 0x2e08 <VisualMicroDebug::outPacketStart(bool)+0x48>
    2df0:	44 e6       	ldi	r20, 0x64	; 100
    2df2:	50 e0       	ldi	r21, 0x00	; 0
    2df4:	60 e0       	ldi	r22, 0x00	; 0
    2df6:	70 e0       	ldi	r23, 0x00	; 0
    2df8:	48 1b       	sub	r20, r24
    2dfa:	59 0b       	sbc	r21, r25
    2dfc:	6a 0b       	sbc	r22, r26
    2dfe:	7b 0b       	sbc	r23, r27
    2e00:	21 e0       	ldi	r18, 0x01	; 1
    2e02:	ce 01       	movw	r24, r28
    2e04:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <VisualMicroDebug::DBG_YieldAndWait(unsigned long, bool)>
_ZN16VisualMicroDebug10DBG_MillisEv():
    2e08:	0e 94 83 1b 	call	0x3706	; 0x3706 <millis>
_ZN16VisualMicroDebug14outPacketStartEb():
    2e0c:	6a 83       	std	Y+2, r22	; 0x02
    2e0e:	7b 83       	std	Y+3, r23	; 0x03
    2e10:	8c 83       	std	Y+4, r24	; 0x04
    2e12:	9d 83       	std	Y+5, r25	; 0x05
    2e14:	81 e0       	ldi	r24, 0x01	; 1
    2e16:	df 91       	pop	r29
    2e18:	cf 91       	pop	r28
    2e1a:	1f 91       	pop	r17
    2e1c:	0f 91       	pop	r16
    2e1e:	08 95       	ret

00002e20 <VisualMicroDebug::outPacketEnd()>:
_ZN16VisualMicroDebug12outPacketEndEv():
    2e20:	08 95       	ret

00002e22 <VisualMicroDebug::begin(unsigned long)>:
_ZN16VisualMicroDebug5beginEm():
    2e22:	cf 92       	push	r12
    2e24:	df 92       	push	r13
    2e26:	ef 92       	push	r14
    2e28:	ff 92       	push	r15
    2e2a:	6a 01       	movw	r12, r20
    2e2c:	7b 01       	movw	r14, r22
    2e2e:	68 ee       	ldi	r22, 0xE8	; 232
    2e30:	73 e0       	ldi	r23, 0x03	; 3
    2e32:	80 e0       	ldi	r24, 0x00	; 0
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	0e 94 b4 1b 	call	0x3768	; 0x3768 <delay>
_ZN14HardwareSerial5beginEm():
    2e3a:	26 e0       	ldi	r18, 0x06	; 6
    2e3c:	b7 01       	movw	r22, r14
    2e3e:	a6 01       	movw	r20, r12
    2e40:	82 e1       	ldi	r24, 0x12	; 18
    2e42:	96 e0       	ldi	r25, 0x06	; 6
_ZN16VisualMicroDebug5beginEm():
    2e44:	ff 90       	pop	r15
    2e46:	ef 90       	pop	r14
    2e48:	df 90       	pop	r13
    2e4a:	cf 90       	pop	r12
_ZN14HardwareSerial5beginEm():
    2e4c:	0c 94 31 1e 	jmp	0x3c62	; 0x3c62 <HardwareSerial::begin(unsigned long, unsigned char)>

00002e50 <VisualMicroDebug::init(unsigned long)>:
_ZN16VisualMicroDebug4initEm():
    2e50:	fc 01       	movw	r30, r24
    2e52:	ee 5b       	subi	r30, 0xBE	; 190
    2e54:	ff 4f       	sbci	r31, 0xFF	; 255
    2e56:	10 82       	st	Z, r1
    2e58:	11 82       	std	Z+1, r1	; 0x01
    2e5a:	12 82       	std	Z+2, r1	; 0x02
    2e5c:	13 82       	std	Z+3, r1	; 0x03
    2e5e:	fc 01       	movw	r30, r24
    2e60:	12 82       	std	Z+2, r1	; 0x02
    2e62:	13 82       	std	Z+3, r1	; 0x03
    2e64:	14 82       	std	Z+4, r1	; 0x04
    2e66:	15 82       	std	Z+5, r1	; 0x05
    2e68:	41 15       	cp	r20, r1
    2e6a:	51 05       	cpc	r21, r1
    2e6c:	61 05       	cpc	r22, r1
    2e6e:	71 05       	cpc	r23, r1
    2e70:	11 f0       	breq	.+4      	; 0x2e76 <VisualMicroDebug::init(unsigned long)+0x26>
    2e72:	0c 94 cb 16 	jmp	0x2d96	; 0x2d96 <VisualMicroDebug::DBG_YieldAndWait(unsigned long)>
    2e76:	08 95       	ret

00002e78 <VisualMicroDebug::sendContinuedACK(unsigned char)>:
_ZN16VisualMicroDebug16sendContinuedACKEh():
    2e78:	1f 93       	push	r17
    2e7a:	cf 93       	push	r28
    2e7c:	df 93       	push	r29
    2e7e:	ec 01       	movw	r28, r24
    2e80:	16 2f       	mov	r17, r22
    2e82:	61 e0       	ldi	r22, 0x01	; 1
    2e84:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <VisualMicroDebug::outPacketStart(bool)>
    2e88:	6a e0       	ldi	r22, 0x0A	; 10
    2e8a:	73 e0       	ldi	r23, 0x03	; 3
    2e8c:	82 e1       	ldi	r24, 0x12	; 18
    2e8e:	96 e0       	ldi	r25, 0x06	; 6
    2e90:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Print::print(char const*)>
    2e94:	4a e0       	ldi	r20, 0x0A	; 10
    2e96:	50 e0       	ldi	r21, 0x00	; 0
    2e98:	61 2f       	mov	r22, r17
    2e9a:	82 e1       	ldi	r24, 0x12	; 18
    2e9c:	96 e0       	ldi	r25, 0x06	; 6
    2e9e:	0e 94 4c 20 	call	0x4098	; 0x4098 <Print::print(unsigned char, int)>
    2ea2:	61 e1       	ldi	r22, 0x11	; 17
    2ea4:	73 e0       	ldi	r23, 0x03	; 3
    2ea6:	82 e1       	ldi	r24, 0x12	; 18
    2ea8:	96 e0       	ldi	r25, 0x06	; 6
    2eaa:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <Print::println(char const*)>
    2eae:	42 e3       	ldi	r20, 0x32	; 50
    2eb0:	50 e0       	ldi	r21, 0x00	; 0
    2eb2:	60 e0       	ldi	r22, 0x00	; 0
    2eb4:	70 e0       	ldi	r23, 0x00	; 0
    2eb6:	ce 01       	movw	r24, r28
    2eb8:	df 91       	pop	r29
    2eba:	cf 91       	pop	r28
    2ebc:	1f 91       	pop	r17
    2ebe:	0c 94 cb 16 	jmp	0x2d96	; 0x2d96 <VisualMicroDebug::DBG_YieldAndWait(unsigned long)>

00002ec2 <_GLOBAL__sub_I__ZN16VisualMicroDebug16DBG_YieldAndWaitEm>:
_GLOBAL__sub_I__ZN16VisualMicroDebug16DBG_YieldAndWaitEm():
    2ec2:	8d e1       	ldi	r24, 0x1D	; 29
    2ec4:	95 e0       	ldi	r25, 0x05	; 5
    2ec6:	0c 94 ce 16 	jmp	0x2d9c	; 0x2d9c <VisualMicroDebug::VisualMicroDebug()>

00002eca <VisualMicroDebug::breakWait(unsigned char)>:
_ZN16VisualMicroDebug9breakWaitEh():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1289
#if defined(VM_DBT) //&& ( VM_DBT == VM_DBT_HARDWARESERIAL || VM_DBT == VM_DBT_FASTSERIAL)
//TODO: implement sturcture serial com!
//we never get called if break was not set during compliation
//return _vm_cmd so that we can setVariable if required (caller needs to know result)
uint8_t VisualMicroDebug::breakWait(uint8_t breakPointId)
{
    2eca:	1f 93       	push	r17
    2ecc:	cf 93       	push	r28
    2ece:	df 93       	push	r29
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1295
	//console write not working yet
#if defined(VM_DBT) && (VM_DBT == VM_DBT_NET_CONSOLE)
	return 'c';
#endif

	if (!alwaysBreak)
    2ed0:	fc 01       	movw	r30, r24
    2ed2:	26 89       	ldd	r18, Z+22	; 0x16
    2ed4:	22 23       	and	r18, r18
    2ed6:	69 f1       	breq	.+90     	; 0x2f32 <VisualMicroDebug::breakWait(unsigned char)+0x68>
    2ed8:	16 2f       	mov	r17, r22
    2eda:	ec 01       	movw	r28, r24
_ZN16VisualMicroDebug9availableEv():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1270
#elif defined(VMDGB_HAS_READER)
	b = reader->available();
#elif defined(VM_DBT) && (VM_DBT == VM_DBT_SOFTWARESERIAL)
	b = transport->available();
#else
	b = VM_DEBUGGER_SOFT_TRANSPORT.available();
    2edc:	82 e1       	ldi	r24, 0x12	; 18
    2ede:	96 e0       	ldi	r25, 0x06	; 6
    2ee0:	0e 94 57 1d 	call	0x3aae	; 0x3aae <HardwareSerial::available()>
_ZN16VisualMicroDebug9breakWaitEh():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1311
#endif

	uint8_t b;

	//break/pause until we get a command
	if (available() == 0)
    2ee4:	81 11       	cpse	r24, r1
    2ee6:	0b c0       	rjmp	.+22     	; 0x2efe <VisualMicroDebug::breakWait(unsigned char)+0x34>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1330
		if (!UDPConnectionStarted) {
			return 'c';
		}
#endif

		return 'e';
    2ee8:	85 e6       	ldi	r24, 0x65	; 101
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1437
	//sendContinuedACK(breakPointId);
	//return 'c'; //if we get here we are continuing!

	//	return '?'; //software serial rubbish detected?
	return 'e';
}
    2eea:	df 91       	pop	r29
    2eec:	cf 91       	pop	r28
    2eee:	1f 91       	pop	r17
    2ef0:	08 95       	ret
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1382
		//		while(VM_DEBUGGER_SOFT_TRANSPORT.available()>0)
		//		{
		//			b = VM_DEBUGGER_SOFT_TRANSPORT.read();
		//#endif
		//debug break commands
		switch (b)
    2ef2:	21 37       	cpi	r18, 0x71	; 113
    2ef4:	31 05       	cpc	r19, r1
    2ef6:	e9 f0       	breq	.+58     	; 0x2f32 <VisualMicroDebug::breakWait(unsigned char)+0x68>
    2ef8:	26 37       	cpi	r18, 0x76	; 118
    2efa:	31 05       	cpc	r19, r1
    2efc:	b1 f3       	breq	.-20     	; 0x2eea <VisualMicroDebug::breakWait(unsigned char)+0x20>
_ZN16VisualMicroDebug9availableEv():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1270
#elif defined(VMDGB_HAS_READER)
	b = reader->available();
#elif defined(VM_DBT) && (VM_DBT == VM_DBT_SOFTWARESERIAL)
	b = transport->available();
#else
	b = VM_DEBUGGER_SOFT_TRANSPORT.available();
    2efe:	82 e1       	ldi	r24, 0x12	; 18
    2f00:	96 e0       	ldi	r25, 0x06	; 6
    2f02:	0e 94 57 1d 	call	0x3aae	; 0x3aae <HardwareSerial::available()>
_ZN16VisualMicroDebug9breakWaitEh():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1364
	//doh!  better if we have any key to continue so users data doesn't get lost so much. 
	//NOTE. pause/breakpoints are best used with dedicated port!
	//while(true)
	//{

	while (available() > 0)
    2f06:	88 23       	and	r24, r24
    2f08:	79 f3       	breq	.-34     	; 0x2ee8 <VisualMicroDebug::breakWait(unsigned char)+0x1e>
_ZN16VisualMicroDebug4readEv():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1222
#elif defined(VMDGB_HAS_READER)
	b = reader->getchar();
#elif defined(VM_DBT) && (VM_DBT == VM_DBT_SOFTWARESERIAL)
	b = transport->read();
#else
	b = VM_DEBUGGER_SOFT_TRANSPORT.read();
    2f0a:	82 e1       	ldi	r24, 0x12	; 18
    2f0c:	96 e0       	ldi	r25, 0x06	; 6
    2f0e:	0e 94 71 1d 	call	0x3ae2	; 0x3ae2 <HardwareSerial::read()>
_ZN16VisualMicroDebug9breakWaitEh():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1382
		//		while(VM_DEBUGGER_SOFT_TRANSPORT.available()>0)
		//		{
		//			b = VM_DEBUGGER_SOFT_TRANSPORT.read();
		//#endif
		//debug break commands
		switch (b)
    2f12:	9c 01       	movw	r18, r24
    2f14:	33 27       	eor	r19, r19
    2f16:	28 36       	cpi	r18, 0x68	; 104
    2f18:	31 05       	cpc	r19, r1
    2f1a:	59 f0       	breq	.+22     	; 0x2f32 <VisualMicroDebug::breakWait(unsigned char)+0x68>
    2f1c:	54 f7       	brge	.-44     	; 0x2ef2 <VisualMicroDebug::breakWait(unsigned char)+0x28>
    2f1e:	28 35       	cpi	r18, 0x58	; 88
    2f20:	31 05       	cpc	r19, r1
    2f22:	49 f0       	breq	.+18     	; 0x2f36 <VisualMicroDebug::breakWait(unsigned char)+0x6c>
    2f24:	23 36       	cpi	r18, 0x63	; 99
    2f26:	31 05       	cpc	r19, r1
    2f28:	51 f7       	brne	.-44     	; 0x2efe <VisualMicroDebug::breakWait(unsigned char)+0x34>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1386
		{

		case 'c':
			sendContinuedACK(breakPointId);
    2f2a:	61 2f       	mov	r22, r17
    2f2c:	ce 01       	movw	r24, r28
    2f2e:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <VisualMicroDebug::sendContinuedACK(unsigned char)>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1411
		case 'h':
			//Serial.println("Remote debug session started");
#if defined(VM_DBT) && (VM_DBT == VM_DBT_NET_UDP)
			alwaysBreak = true;
#endif
			return 'c';
    2f32:	83 e6       	ldi	r24, 0x63	; 99
    2f34:	da cf       	rjmp	.-76     	; 0x2eea <VisualMicroDebug::breakWait(unsigned char)+0x20>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1401
					  //	sendContinuedACK(breakPointId);
					  //	return;

					  //switch off break until re-start. for dev/testing
		case 'X':
			alwaysBreak = false;
    2f36:	1e 8a       	std	Y+22, r1	; 0x16
    2f38:	fc cf       	rjmp	.-8      	; 0x2f32 <VisualMicroDebug::breakWait(unsigned char)+0x68>

00002f3a <VisualMicroDebug::start(bool, bool)>:
_ZN16VisualMicroDebug5startEbb():
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1185
}
#endif


void VisualMicroDebug::start(bool waitForKeyToStart, bool _alwaysBreak)
{
    2f3a:	1f 93       	push	r17
    2f3c:	cf 93       	push	r28
    2f3e:	df 93       	push	r29
    2f40:	ec 01       	movw	r28, r24
    2f42:	14 2f       	mov	r17, r20
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1187
#if defined (VM_DEBUG_BREAKPAUSE)
	if (waitForKeyToStart)
    2f44:	66 23       	and	r22, r22
    2f46:	81 f0       	breq	.+32     	; 0x2f68 <VisualMicroDebug::start(bool, bool)+0x2e>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1189
	{
		alwaysBreak = true;
    2f48:	81 e0       	ldi	r24, 0x01	; 1
    2f4a:	8e 8b       	std	Y+22, r24	; 0x16
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1192

		//server should know we are waiting sendMessage("Press any key to continue");
		while (breakWait(0) != 'c') {
    2f4c:	60 e0       	ldi	r22, 0x00	; 0
    2f4e:	ce 01       	movw	r24, r28
    2f50:	0e 94 65 17 	call	0x2eca	; 0x2eca <VisualMicroDebug::breakWait(unsigned char)>
    2f54:	83 36       	cpi	r24, 0x63	; 99
    2f56:	41 f0       	breq	.+16     	; 0x2f68 <VisualMicroDebug::start(bool, bool)+0x2e>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1193
			DBG_YieldAndWait(1);
    2f58:	41 e0       	ldi	r20, 0x01	; 1
    2f5a:	50 e0       	ldi	r21, 0x00	; 0
    2f5c:	60 e0       	ldi	r22, 0x00	; 0
    2f5e:	70 e0       	ldi	r23, 0x00	; 0
    2f60:	ce 01       	movw	r24, r28
    2f62:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <VisualMicroDebug::DBG_YieldAndWait(unsigned long)>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1192
	if (waitForKeyToStart)
	{
		alwaysBreak = true;

		//server should know we are waiting sendMessage("Press any key to continue");
		while (breakWait(0) != 'c') {
    2f66:	f2 cf       	rjmp	.-28     	; 0x2f4c <VisualMicroDebug::start(bool, bool)+0x12>
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1197
			DBG_YieldAndWait(1);
		}
		//breakWait(0);
	}
	alwaysBreak = _alwaysBreak;
    2f68:	1e 8b       	std	Y+22, r17	; 0x16
C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\ejiwfyoc.ucr\Micro Platforms\default\debuggers\VM_DBG/VM_DBG.cpp:1200
#endif

}
    2f6a:	df 91       	pop	r29
    2f6c:	cf 91       	pop	r28
    2f6e:	1f 91       	pop	r17
    2f70:	08 95       	ret

00002f72 <Print::availableForWrite()>:
_ZN5Print17availableForWriteEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src/Wire.cpp:378

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	80 e0       	ldi	r24, 0x00	; 0
    2f76:	08 95       	ret

00002f78 <TwoWire::available()>:
_ZN7TwoWire9availableEv():
    2f78:	80 91 97 05 	lds	r24, 0x0597	; 0x800597 <TwoWire::rxBufferLength>
    2f7c:	90 91 98 05 	lds	r25, 0x0598	; 0x800598 <TwoWire::rxBufferIndex>
    2f80:	89 1b       	sub	r24, r25
    2f82:	99 0b       	sbc	r25, r25
    2f84:	08 95       	ret

00002f86 <TwoWire::read()>:
_ZN7TwoWire4readEv():
    2f86:	90 91 98 05 	lds	r25, 0x0598	; 0x800598 <TwoWire::rxBufferIndex>
    2f8a:	80 91 97 05 	lds	r24, 0x0597	; 0x800597 <TwoWire::rxBufferLength>
    2f8e:	2f ef       	ldi	r18, 0xFF	; 255
    2f90:	3f ef       	ldi	r19, 0xFF	; 255
    2f92:	98 17       	cp	r25, r24
    2f94:	48 f4       	brcc	.+18     	; 0x2fa8 <TwoWire::read()+0x22>
    2f96:	e9 2f       	mov	r30, r25
    2f98:	f0 e0       	ldi	r31, 0x00	; 0
    2f9a:	e7 56       	subi	r30, 0x67	; 103
    2f9c:	fa 4f       	sbci	r31, 0xFA	; 250
    2f9e:	20 81       	ld	r18, Z
    2fa0:	30 e0       	ldi	r19, 0x00	; 0
    2fa2:	9f 5f       	subi	r25, 0xFF	; 255
    2fa4:	90 93 98 05 	sts	0x0598, r25	; 0x800598 <TwoWire::rxBufferIndex>
    2fa8:	c9 01       	movw	r24, r18
    2faa:	08 95       	ret

00002fac <TwoWire::peek()>:
_ZN7TwoWire4peekEv():
    2fac:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <TwoWire::rxBufferIndex>
    2fb0:	80 91 97 05 	lds	r24, 0x0597	; 0x800597 <TwoWire::rxBufferLength>
    2fb4:	e8 17       	cp	r30, r24
    2fb6:	30 f4       	brcc	.+12     	; 0x2fc4 <TwoWire::peek()+0x18>
    2fb8:	f0 e0       	ldi	r31, 0x00	; 0
    2fba:	e7 56       	subi	r30, 0x67	; 103
    2fbc:	fa 4f       	sbci	r31, 0xFA	; 250
    2fbe:	80 81       	ld	r24, Z
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	08 95       	ret
    2fc4:	8f ef       	ldi	r24, 0xFF	; 255
    2fc6:	9f ef       	ldi	r25, 0xFF	; 255
    2fc8:	08 95       	ret

00002fca <TwoWire::flush()>:
_ZN7TwoWire5flushEv():
    2fca:	08 95       	ret

00002fcc <TwoWire::onReceiveService(unsigned char*, int)>:
_ZN7TwoWire16onReceiveServiceEPhi():
    2fcc:	cf 93       	push	r28
    2fce:	df 93       	push	r29
    2fd0:	ec 01       	movw	r28, r24
    2fd2:	e0 91 6f 05 	lds	r30, 0x056F	; 0x80056f <TwoWire::user_onReceive>
    2fd6:	f0 91 70 05 	lds	r31, 0x0570	; 0x800570 <TwoWire::user_onReceive+0x1>
    2fda:	30 97       	sbiw	r30, 0x00	; 0
    2fdc:	f1 f0       	breq	.+60     	; 0x301a <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    2fde:	90 91 98 05 	lds	r25, 0x0598	; 0x800598 <TwoWire::rxBufferIndex>
    2fe2:	80 91 97 05 	lds	r24, 0x0597	; 0x800597 <TwoWire::rxBufferLength>
    2fe6:	98 17       	cp	r25, r24
    2fe8:	c0 f0       	brcs	.+48     	; 0x301a <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	29 2f       	mov	r18, r25
    2fee:	30 e0       	ldi	r19, 0x00	; 0
    2ff0:	26 17       	cp	r18, r22
    2ff2:	37 07       	cpc	r19, r23
    2ff4:	54 f4       	brge	.+20     	; 0x300a <TwoWire::onReceiveService(unsigned char*, int)+0x3e>
    2ff6:	de 01       	movw	r26, r28
    2ff8:	a2 0f       	add	r26, r18
    2ffa:	b3 1f       	adc	r27, r19
    2ffc:	4c 91       	ld	r20, X
    2ffe:	27 56       	subi	r18, 0x67	; 103
    3000:	3a 4f       	sbci	r19, 0xFA	; 250
    3002:	d9 01       	movw	r26, r18
    3004:	4c 93       	st	X, r20
    3006:	9f 5f       	subi	r25, 0xFF	; 255
    3008:	f1 cf       	rjmp	.-30     	; 0x2fec <TwoWire::onReceiveService(unsigned char*, int)+0x20>
    300a:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <TwoWire::rxBufferIndex>
    300e:	60 93 97 05 	sts	0x0597, r22	; 0x800597 <TwoWire::rxBufferLength>
    3012:	cb 01       	movw	r24, r22
    3014:	df 91       	pop	r29
    3016:	cf 91       	pop	r28
    3018:	09 94       	ijmp
    301a:	df 91       	pop	r29
    301c:	cf 91       	pop	r28
    301e:	08 95       	ret

00003020 <TwoWire::onRequestService()>:
_ZN7TwoWire16onRequestServiceEv():
    3020:	e0 91 71 05 	lds	r30, 0x0571	; 0x800571 <TwoWire::user_onRequest>
    3024:	f0 91 72 05 	lds	r31, 0x0572	; 0x800572 <TwoWire::user_onRequest+0x1>
    3028:	30 97       	sbiw	r30, 0x00	; 0
    302a:	29 f0       	breq	.+10     	; 0x3036 <TwoWire::onRequestService()+0x16>
    302c:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <TwoWire::txBufferIndex>
    3030:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <TwoWire::txBufferLength>
    3034:	09 94       	ijmp
    3036:	08 95       	ret

00003038 <TwoWire::write(unsigned char)>:
_ZN7TwoWire5writeEh():
    3038:	cf 93       	push	r28
    303a:	df 93       	push	r29
    303c:	1f 92       	push	r1
    303e:	cd b7       	in	r28, 0x3d	; 61
    3040:	de b7       	in	r29, 0x3e	; 62
    3042:	69 83       	std	Y+1, r22	; 0x01
    3044:	20 91 73 05 	lds	r18, 0x0573	; 0x800573 <TwoWire::transmitting>
    3048:	22 23       	and	r18, r18
    304a:	f9 f0       	breq	.+62     	; 0x308a <TwoWire::write(unsigned char)+0x52>
    304c:	20 91 74 05 	lds	r18, 0x0574	; 0x800574 <TwoWire::txBufferLength>
    3050:	20 32       	cpi	r18, 0x20	; 32
    3052:	58 f0       	brcs	.+22     	; 0x306a <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
    3054:	21 e0       	ldi	r18, 0x01	; 1
    3056:	30 e0       	ldi	r19, 0x00	; 0
    3058:	fc 01       	movw	r30, r24
    305a:	33 83       	std	Z+3, r19	; 0x03
    305c:	22 83       	std	Z+2, r18	; 0x02
_ZN7TwoWire5writeEh():
    305e:	90 e0       	ldi	r25, 0x00	; 0
    3060:	80 e0       	ldi	r24, 0x00	; 0
    3062:	0f 90       	pop	r0
    3064:	df 91       	pop	r29
    3066:	cf 91       	pop	r28
    3068:	08 95       	ret
    306a:	80 91 75 05 	lds	r24, 0x0575	; 0x800575 <TwoWire::txBufferIndex>
    306e:	e8 2f       	mov	r30, r24
    3070:	f0 e0       	ldi	r31, 0x00	; 0
    3072:	ea 58       	subi	r30, 0x8A	; 138
    3074:	fa 4f       	sbci	r31, 0xFA	; 250
    3076:	99 81       	ldd	r25, Y+1	; 0x01
    3078:	90 83       	st	Z, r25
    307a:	8f 5f       	subi	r24, 0xFF	; 255
    307c:	80 93 75 05 	sts	0x0575, r24	; 0x800575 <TwoWire::txBufferIndex>
    3080:	80 93 74 05 	sts	0x0574, r24	; 0x800574 <TwoWire::txBufferLength>
    3084:	81 e0       	ldi	r24, 0x01	; 1
    3086:	90 e0       	ldi	r25, 0x00	; 0
    3088:	ec cf       	rjmp	.-40     	; 0x3062 <TwoWire::write(unsigned char)+0x2a>
    308a:	61 e0       	ldi	r22, 0x01	; 1
    308c:	ce 01       	movw	r24, r28
    308e:	01 96       	adiw	r24, 0x01	; 1
    3090:	0e 94 cc 19 	call	0x3398	; 0x3398 <twi_transmit>
    3094:	f7 cf       	rjmp	.-18     	; 0x3084 <TwoWire::write(unsigned char)+0x4c>

00003096 <TwoWire::write(unsigned char const*, unsigned int)>:
_ZN7TwoWire5writeEPKhj():
    3096:	cf 92       	push	r12
    3098:	df 92       	push	r13
    309a:	ef 92       	push	r14
    309c:	ff 92       	push	r15
    309e:	0f 93       	push	r16
    30a0:	1f 93       	push	r17
    30a2:	cf 93       	push	r28
    30a4:	df 93       	push	r29
    30a6:	7c 01       	movw	r14, r24
    30a8:	cb 01       	movw	r24, r22
    30aa:	8a 01       	movw	r16, r20
    30ac:	20 91 73 05 	lds	r18, 0x0573	; 0x800573 <TwoWire::transmitting>
    30b0:	22 23       	and	r18, r18
    30b2:	89 f0       	breq	.+34     	; 0x30d6 <TwoWire::write(unsigned char const*, unsigned int)+0x40>
    30b4:	eb 01       	movw	r28, r22
    30b6:	6b 01       	movw	r12, r22
    30b8:	c4 0e       	add	r12, r20
    30ba:	d5 1e       	adc	r13, r21
    30bc:	cc 15       	cp	r28, r12
    30be:	dd 05       	cpc	r29, r13
    30c0:	69 f0       	breq	.+26     	; 0x30dc <TwoWire::write(unsigned char const*, unsigned int)+0x46>
    30c2:	69 91       	ld	r22, Y+
    30c4:	d7 01       	movw	r26, r14
    30c6:	ed 91       	ld	r30, X+
    30c8:	fc 91       	ld	r31, X
    30ca:	01 90       	ld	r0, Z+
    30cc:	f0 81       	ld	r31, Z
    30ce:	e0 2d       	mov	r30, r0
    30d0:	c7 01       	movw	r24, r14
    30d2:	09 95       	icall
    30d4:	f3 cf       	rjmp	.-26     	; 0x30bc <TwoWire::write(unsigned char const*, unsigned int)+0x26>
    30d6:	64 2f       	mov	r22, r20
    30d8:	0e 94 cc 19 	call	0x3398	; 0x3398 <twi_transmit>
    30dc:	c8 01       	movw	r24, r16
    30de:	df 91       	pop	r29
    30e0:	cf 91       	pop	r28
    30e2:	1f 91       	pop	r17
    30e4:	0f 91       	pop	r16
    30e6:	ff 90       	pop	r15
    30e8:	ef 90       	pop	r14
    30ea:	df 90       	pop	r13
    30ec:	cf 90       	pop	r12
    30ee:	08 95       	ret

000030f0 <TwoWire::begin()>:
_ZN7TwoWire5beginEv():
    30f0:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <TwoWire::rxBufferIndex>
    30f4:	10 92 97 05 	sts	0x0597, r1	; 0x800597 <TwoWire::rxBufferLength>
    30f8:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <TwoWire::txBufferIndex>
    30fc:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <TwoWire::txBufferLength>
    3100:	0e 94 1e 19 	call	0x323c	; 0x323c <twi_init>
    3104:	80 e1       	ldi	r24, 0x10	; 16
    3106:	98 e1       	ldi	r25, 0x18	; 24
    3108:	0e 94 f8 19 	call	0x33f0	; 0x33f0 <twi_attachSlaveTxEvent>
    310c:	86 ee       	ldi	r24, 0xE6	; 230
    310e:	97 e1       	ldi	r25, 0x17	; 23
    3110:	0c 94 f3 19 	jmp	0x33e6	; 0x33e6 <twi_attachSlaveRxEvent>

00003114 <TwoWire::beginTransmission(unsigned char)>:
_ZN7TwoWire17beginTransmissionEh():
    3114:	81 e0       	ldi	r24, 0x01	; 1
    3116:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <TwoWire::transmitting>
    311a:	60 93 96 05 	sts	0x0596, r22	; 0x800596 <TwoWire::txAddress>
    311e:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <TwoWire::txBufferIndex>
    3122:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <TwoWire::txBufferLength>
    3126:	08 95       	ret

00003128 <TwoWire::endTransmission(unsigned char)>:
_ZN7TwoWire15endTransmissionEh():
    3128:	0f 93       	push	r16
    312a:	06 2f       	mov	r16, r22
    312c:	21 e0       	ldi	r18, 0x01	; 1
    312e:	40 91 74 05 	lds	r20, 0x0574	; 0x800574 <TwoWire::txBufferLength>
    3132:	66 e7       	ldi	r22, 0x76	; 118
    3134:	75 e0       	ldi	r23, 0x05	; 5
    3136:	80 91 96 05 	lds	r24, 0x0596	; 0x800596 <TwoWire::txAddress>
    313a:	0e 94 7c 19 	call	0x32f8	; 0x32f8 <twi_writeTo>
    313e:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <TwoWire::txBufferIndex>
    3142:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <TwoWire::txBufferLength>
    3146:	10 92 73 05 	sts	0x0573, r1	; 0x800573 <TwoWire::transmitting>
    314a:	0f 91       	pop	r16
    314c:	08 95       	ret

0000314e <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhmhh():
    314e:	4f 92       	push	r4
    3150:	5f 92       	push	r5
    3152:	6f 92       	push	r6
    3154:	7f 92       	push	r7
    3156:	af 92       	push	r10
    3158:	bf 92       	push	r11
    315a:	cf 92       	push	r12
    315c:	ef 92       	push	r14
    315e:	ff 92       	push	r15
    3160:	0f 93       	push	r16
    3162:	1f 93       	push	r17
    3164:	cf 93       	push	r28
    3166:	df 93       	push	r29
    3168:	5c 01       	movw	r10, r24
    316a:	f6 2e       	mov	r15, r22
    316c:	d4 2f       	mov	r29, r20
    316e:	28 01       	movw	r4, r16
    3170:	39 01       	movw	r6, r18
    3172:	ee 20       	and	r14, r14
    3174:	19 f1       	breq	.+70     	; 0x31bc <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x6e>
    3176:	0e 94 8a 18 	call	0x3114	; 0x3114 <TwoWire::beginTransmission(unsigned char)>
    317a:	ce 2d       	mov	r28, r14
    317c:	c4 30       	cpi	r28, 0x04	; 4
    317e:	08 f0       	brcs	.+2      	; 0x3182 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    3180:	c3 e0       	ldi	r28, 0x03	; 3
    3182:	c1 50       	subi	r28, 0x01	; 1
    3184:	b8 f0       	brcs	.+46     	; 0x31b4 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x66>
    3186:	28 e0       	ldi	r18, 0x08	; 8
    3188:	c2 9f       	mul	r28, r18
    318a:	c0 01       	movw	r24, r0
    318c:	11 24       	eor	r1, r1
    318e:	a3 01       	movw	r20, r6
    3190:	92 01       	movw	r18, r4
    3192:	04 c0       	rjmp	.+8      	; 0x319c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x4e>
    3194:	56 95       	lsr	r21
    3196:	47 95       	ror	r20
    3198:	37 95       	ror	r19
    319a:	27 95       	ror	r18
    319c:	8a 95       	dec	r24
    319e:	d2 f7       	brpl	.-12     	; 0x3194 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x46>
    31a0:	b9 01       	movw	r22, r18
    31a2:	d5 01       	movw	r26, r10
    31a4:	ed 91       	ld	r30, X+
    31a6:	fc 91       	ld	r31, X
    31a8:	01 90       	ld	r0, Z+
    31aa:	f0 81       	ld	r31, Z
    31ac:	e0 2d       	mov	r30, r0
    31ae:	c5 01       	movw	r24, r10
    31b0:	09 95       	icall
    31b2:	e7 cf       	rjmp	.-50     	; 0x3182 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    31b4:	60 e0       	ldi	r22, 0x00	; 0
    31b6:	c5 01       	movw	r24, r10
    31b8:	0e 94 94 18 	call	0x3128	; 0x3128 <TwoWire::endTransmission(unsigned char)>
    31bc:	4d 2f       	mov	r20, r29
    31be:	d1 32       	cpi	r29, 0x21	; 33
    31c0:	08 f0       	brcs	.+2      	; 0x31c4 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x76>
    31c2:	40 e2       	ldi	r20, 0x20	; 32
    31c4:	2c 2d       	mov	r18, r12
    31c6:	69 e9       	ldi	r22, 0x99	; 153
    31c8:	75 e0       	ldi	r23, 0x05	; 5
    31ca:	8f 2d       	mov	r24, r15
    31cc:	0e 94 3c 19 	call	0x3278	; 0x3278 <twi_readFrom>
    31d0:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <TwoWire::rxBufferIndex>
    31d4:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <TwoWire::rxBufferLength>
    31d8:	df 91       	pop	r29
    31da:	cf 91       	pop	r28
    31dc:	1f 91       	pop	r17
    31de:	0f 91       	pop	r16
    31e0:	ff 90       	pop	r15
    31e2:	ef 90       	pop	r14
    31e4:	cf 90       	pop	r12
    31e6:	bf 90       	pop	r11
    31e8:	af 90       	pop	r10
    31ea:	7f 90       	pop	r7
    31ec:	6f 90       	pop	r6
    31ee:	5f 90       	pop	r5
    31f0:	4f 90       	pop	r4
    31f2:	08 95       	ret

000031f4 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhh():
    31f4:	cf 92       	push	r12
    31f6:	ef 92       	push	r14
    31f8:	0f 93       	push	r16
    31fa:	1f 93       	push	r17
    31fc:	c2 2e       	mov	r12, r18
    31fe:	e1 2c       	mov	r14, r1
    3200:	00 e0       	ldi	r16, 0x00	; 0
    3202:	10 e0       	ldi	r17, 0x00	; 0
    3204:	98 01       	movw	r18, r16
    3206:	0e 94 a7 18 	call	0x314e	; 0x314e <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>
    320a:	1f 91       	pop	r17
    320c:	0f 91       	pop	r16
    320e:	ef 90       	pop	r14
    3210:	cf 90       	pop	r12
    3212:	08 95       	ret

00003214 <TwoWire::requestFrom(int, int)>:
_ZN7TwoWire11requestFromEii():
    3214:	21 e0       	ldi	r18, 0x01	; 1
    3216:	0c 94 fa 18 	jmp	0x31f4	; 0x31f4 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>

0000321a <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
_ZN5PrintC4Ev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.h:46
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    321a:	e3 e6       	ldi	r30, 0x63	; 99
    321c:	f5 e0       	ldi	r31, 0x05	; 5
    321e:	13 82       	std	Z+3, r1	; 0x03
    3220:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Stream.h:63
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    3222:	88 ee       	ldi	r24, 0xE8	; 232
    3224:	93 e0       	ldi	r25, 0x03	; 3
    3226:	a0 e0       	ldi	r26, 0x00	; 0
    3228:	b0 e0       	ldi	r27, 0x00	; 0
    322a:	84 83       	std	Z+4, r24	; 0x04
    322c:	95 83       	std	Z+5, r25	; 0x05
    322e:	a6 83       	std	Z+6, r26	; 0x06
    3230:	b7 83       	std	Z+7, r27	; 0x07
_ZN7TwoWireC4Ev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src/Wire.cpp:53
void (*TwoWire::user_onRequest)(void);
void (*TwoWire::user_onReceive)(int);

// Constructors ////////////////////////////////////////////////////////////////

TwoWire::TwoWire()
    3232:	8c e1       	ldi	r24, 0x1C	; 28
    3234:	93 e0       	ldi	r25, 0x03	; 3
    3236:	91 83       	std	Z+1, r25	; 0x01
    3238:	80 83       	st	Z, r24
_GLOBAL__sub_I__ZN7TwoWire8rxBufferE():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src/Wire.cpp:382
  user_onRequest = function;
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    323a:	08 95       	ret

0000323c <twi_init>:
twi_init():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:531
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    323c:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <twi_state>
    3240:	81 e0       	ldi	r24, 0x01	; 1
    3242:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <twi_sendStop>
    3246:	10 92 05 06 	sts	0x0605, r1	; 0x800605 <twi_inRepStart>
    324a:	61 e0       	ldi	r22, 0x01	; 1
    324c:	82 e1       	ldi	r24, 0x12	; 18
    324e:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    3252:	61 e0       	ldi	r22, 0x01	; 1
    3254:	83 e1       	ldi	r24, 0x13	; 19
    3256:	0e 94 00 1d 	call	0x3a00	; 0x3a00 <digitalWrite>
    325a:	e9 eb       	ldi	r30, 0xB9	; 185
    325c:	f0 e0       	ldi	r31, 0x00	; 0
    325e:	80 81       	ld	r24, Z
    3260:	8e 7f       	andi	r24, 0xFE	; 254
    3262:	80 83       	st	Z, r24
    3264:	80 81       	ld	r24, Z
    3266:	8d 7f       	andi	r24, 0xFD	; 253
    3268:	80 83       	st	Z, r24
    326a:	88 e4       	ldi	r24, 0x48	; 72
    326c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
    3270:	85 e4       	ldi	r24, 0x45	; 69
    3272:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    3276:	08 95       	ret

00003278 <twi_readFrom>:
twi_readFrom():
    3278:	41 32       	cpi	r20, 0x21	; 33
    327a:	e0 f5       	brcc	.+120    	; 0x32f4 <twi_readFrom+0x7c>
    327c:	90 91 08 06 	lds	r25, 0x0608	; 0x800608 <twi_state>
    3280:	91 11       	cpse	r25, r1
    3282:	fc cf       	rjmp	.-8      	; 0x327c <twi_readFrom+0x4>
    3284:	91 e0       	ldi	r25, 0x01	; 1
    3286:	90 93 08 06 	sts	0x0608, r25	; 0x800608 <twi_state>
    328a:	20 93 06 06 	sts	0x0606, r18	; 0x800606 <twi_sendStop>
    328e:	2f ef       	ldi	r18, 0xFF	; 255
    3290:	20 93 b9 05 	sts	0x05B9, r18	; 0x8005b9 <twi_error>
    3294:	70 93 00 06 	sts	0x0600, r23	; 0x800600 <twi_masterBuffer+0x1>
    3298:	60 93 ff 05 	sts	0x05FF, r22	; 0x8005ff <twi_masterBuffer>
    329c:	10 92 fe 05 	sts	0x05FE, r1	; 0x8005fe <twi_masterBufferIndex>
    32a0:	24 0f       	add	r18, r20
    32a2:	20 93 fd 05 	sts	0x05FD, r18	; 0x8005fd <twi_masterBufferLength>
    32a6:	90 93 07 06 	sts	0x0607, r25	; 0x800607 <twi_slarw>
    32aa:	90 91 07 06 	lds	r25, 0x0607	; 0x800607 <twi_slarw>
    32ae:	88 0f       	add	r24, r24
    32b0:	89 2b       	or	r24, r25
    32b2:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <twi_slarw>
    32b6:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <twi_inRepStart>
    32ba:	81 30       	cpi	r24, 0x01	; 1
    32bc:	c9 f4       	brne	.+50     	; 0x32f0 <twi_readFrom+0x78>
    32be:	10 92 05 06 	sts	0x0605, r1	; 0x800605 <twi_inRepStart>
    32c2:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <twi_slarw>
    32c6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    32ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    32ce:	83 fd       	sbrc	r24, 3
    32d0:	f8 cf       	rjmp	.-16     	; 0x32c2 <twi_readFrom+0x4a>
    32d2:	85 ec       	ldi	r24, 0xC5	; 197
    32d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    32d8:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <twi_state>
    32dc:	81 30       	cpi	r24, 0x01	; 1
    32de:	e1 f3       	breq	.-8      	; 0x32d8 <twi_readFrom+0x60>
    32e0:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    32e4:	84 17       	cp	r24, r20
    32e6:	10 f4       	brcc	.+4      	; 0x32ec <twi_readFrom+0x74>
    32e8:	40 91 fe 05 	lds	r20, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    32ec:	84 2f       	mov	r24, r20
    32ee:	08 95       	ret
    32f0:	85 ee       	ldi	r24, 0xE5	; 229
    32f2:	f0 cf       	rjmp	.-32     	; 0x32d4 <twi_readFrom+0x5c>
    32f4:	40 e0       	ldi	r20, 0x00	; 0
    32f6:	fa cf       	rjmp	.-12     	; 0x32ec <twi_readFrom+0x74>

000032f8 <twi_writeTo>:
twi_writeTo():
    32f8:	0f 93       	push	r16
    32fa:	41 32       	cpi	r20, 0x21	; 33
    32fc:	08 f0       	brcs	.+2      	; 0x3300 <twi_writeTo+0x8>
    32fe:	44 c0       	rjmp	.+136    	; 0x3388 <twi_writeTo+0x90>
    3300:	90 91 08 06 	lds	r25, 0x0608	; 0x800608 <twi_state>
    3304:	91 11       	cpse	r25, r1
    3306:	fc cf       	rjmp	.-8      	; 0x3300 <twi_writeTo+0x8>
    3308:	92 e0       	ldi	r25, 0x02	; 2
    330a:	90 93 08 06 	sts	0x0608, r25	; 0x800608 <twi_state>
    330e:	00 93 06 06 	sts	0x0606, r16	; 0x800606 <twi_sendStop>
    3312:	9f ef       	ldi	r25, 0xFF	; 255
    3314:	90 93 b9 05 	sts	0x05B9, r25	; 0x8005b9 <twi_error>
    3318:	70 93 00 06 	sts	0x0600, r23	; 0x800600 <twi_masterBuffer+0x1>
    331c:	60 93 ff 05 	sts	0x05FF, r22	; 0x8005ff <twi_masterBuffer>
    3320:	10 92 fe 05 	sts	0x05FE, r1	; 0x8005fe <twi_masterBufferIndex>
    3324:	40 93 fd 05 	sts	0x05FD, r20	; 0x8005fd <twi_masterBufferLength>
    3328:	10 92 07 06 	sts	0x0607, r1	; 0x800607 <twi_slarw>
    332c:	90 91 07 06 	lds	r25, 0x0607	; 0x800607 <twi_slarw>
    3330:	88 0f       	add	r24, r24
    3332:	89 2b       	or	r24, r25
    3334:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <twi_slarw>
    3338:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <twi_inRepStart>
    333c:	81 30       	cpi	r24, 0x01	; 1
    333e:	11 f5       	brne	.+68     	; 0x3384 <twi_writeTo+0x8c>
    3340:	10 92 05 06 	sts	0x0605, r1	; 0x800605 <twi_inRepStart>
    3344:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <twi_slarw>
    3348:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    334c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    3350:	83 fd       	sbrc	r24, 3
    3352:	f8 cf       	rjmp	.-16     	; 0x3344 <twi_writeTo+0x4c>
    3354:	85 ec       	ldi	r24, 0xC5	; 197
    3356:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    335a:	22 23       	and	r18, r18
    335c:	21 f0       	breq	.+8      	; 0x3366 <twi_writeTo+0x6e>
    335e:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <twi_state>
    3362:	82 30       	cpi	r24, 0x02	; 2
    3364:	d1 f3       	breq	.-12     	; 0x335a <twi_writeTo+0x62>
    3366:	80 91 b9 05 	lds	r24, 0x05B9	; 0x8005b9 <twi_error>
    336a:	8f 3f       	cpi	r24, 0xFF	; 255
    336c:	79 f0       	breq	.+30     	; 0x338c <twi_writeTo+0x94>
    336e:	80 91 b9 05 	lds	r24, 0x05B9	; 0x8005b9 <twi_error>
    3372:	80 32       	cpi	r24, 0x20	; 32
    3374:	69 f0       	breq	.+26     	; 0x3390 <twi_writeTo+0x98>
    3376:	80 91 b9 05 	lds	r24, 0x05B9	; 0x8005b9 <twi_error>
    337a:	80 33       	cpi	r24, 0x30	; 48
    337c:	59 f0       	breq	.+22     	; 0x3394 <twi_writeTo+0x9c>
    337e:	84 e0       	ldi	r24, 0x04	; 4
    3380:	0f 91       	pop	r16
    3382:	08 95       	ret
    3384:	85 ee       	ldi	r24, 0xE5	; 229
    3386:	e7 cf       	rjmp	.-50     	; 0x3356 <twi_writeTo+0x5e>
    3388:	81 e0       	ldi	r24, 0x01	; 1
    338a:	fa cf       	rjmp	.-12     	; 0x3380 <twi_writeTo+0x88>
    338c:	80 e0       	ldi	r24, 0x00	; 0
    338e:	f8 cf       	rjmp	.-16     	; 0x3380 <twi_writeTo+0x88>
    3390:	82 e0       	ldi	r24, 0x02	; 2
    3392:	f6 cf       	rjmp	.-20     	; 0x3380 <twi_writeTo+0x88>
    3394:	83 e0       	ldi	r24, 0x03	; 3
    3396:	f4 cf       	rjmp	.-24     	; 0x3380 <twi_writeTo+0x88>

00003398 <twi_transmit>:
twi_transmit():
    3398:	20 91 db 05 	lds	r18, 0x05DB	; 0x8005db <twi_txBufferLength>
    339c:	26 0f       	add	r18, r22
    339e:	33 27       	eor	r19, r19
    33a0:	33 1f       	adc	r19, r19
    33a2:	21 32       	cpi	r18, 0x21	; 33
    33a4:	31 05       	cpc	r19, r1
    33a6:	ec f4       	brge	.+58     	; 0x33e2 <twi_transmit+0x4a>
    33a8:	20 91 08 06 	lds	r18, 0x0608	; 0x800608 <twi_state>
    33ac:	fc 01       	movw	r30, r24
    33ae:	90 e0       	ldi	r25, 0x00	; 0
    33b0:	80 e0       	ldi	r24, 0x00	; 0
    33b2:	24 30       	cpi	r18, 0x04	; 4
    33b4:	69 f0       	breq	.+26     	; 0x33d0 <twi_transmit+0x38>
    33b6:	82 e0       	ldi	r24, 0x02	; 2
    33b8:	08 95       	ret
    33ba:	a0 91 db 05 	lds	r26, 0x05DB	; 0x8005db <twi_txBufferLength>
    33be:	21 91       	ld	r18, Z+
    33c0:	ac 01       	movw	r20, r24
    33c2:	43 52       	subi	r20, 0x23	; 35
    33c4:	5a 4f       	sbci	r21, 0xFA	; 250
    33c6:	a4 0f       	add	r26, r20
    33c8:	b5 2f       	mov	r27, r21
    33ca:	b1 1d       	adc	r27, r1
    33cc:	2c 93       	st	X, r18
    33ce:	01 96       	adiw	r24, 0x01	; 1
    33d0:	86 17       	cp	r24, r22
    33d2:	98 f3       	brcs	.-26     	; 0x33ba <twi_transmit+0x22>
    33d4:	80 91 db 05 	lds	r24, 0x05DB	; 0x8005db <twi_txBufferLength>
    33d8:	68 0f       	add	r22, r24
    33da:	60 93 db 05 	sts	0x05DB, r22	; 0x8005db <twi_txBufferLength>
    33de:	80 e0       	ldi	r24, 0x00	; 0
    33e0:	08 95       	ret
    33e2:	81 e0       	ldi	r24, 0x01	; 1
    33e4:	08 95       	ret

000033e6 <twi_attachSlaveRxEvent>:
twi_attachSlaveRxEvent():
    33e6:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <twi_onSlaveReceive+0x1>
    33ea:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <twi_onSlaveReceive>
    33ee:	08 95       	ret

000033f0 <twi_attachSlaveTxEvent>:
twi_attachSlaveTxEvent():
    33f0:	90 93 04 06 	sts	0x0604, r25	; 0x800604 <twi_onSlaveTransmit+0x1>
    33f4:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <twi_onSlaveTransmit>
    33f8:	08 95       	ret

000033fa <twi_stop>:
twi_stop():
    33fa:	85 ed       	ldi	r24, 0xD5	; 213
    33fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    3400:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    3404:	84 fd       	sbrc	r24, 4
    3406:	fc cf       	rjmp	.-8      	; 0x3400 <twi_stop+0x6>
    3408:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <twi_state>
    340c:	08 95       	ret

0000340e <twi_releaseBus>:
twi_releaseBus():
    340e:	85 ec       	ldi	r24, 0xC5	; 197
    3410:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    3414:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <twi_state>
    3418:	08 95       	ret

0000341a <__vector_24>:
__vector_24():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:534

ISR(TWI_vect)
{
    341a:	1f 92       	push	r1
    341c:	0f 92       	push	r0
    341e:	0f b6       	in	r0, 0x3f	; 63
    3420:	0f 92       	push	r0
    3422:	11 24       	eor	r1, r1
    3424:	2f 93       	push	r18
    3426:	3f 93       	push	r19
    3428:	4f 93       	push	r20
    342a:	5f 93       	push	r21
    342c:	6f 93       	push	r22
    342e:	7f 93       	push	r23
    3430:	8f 93       	push	r24
    3432:	9f 93       	push	r25
    3434:	af 93       	push	r26
    3436:	bf 93       	push	r27
    3438:	ef 93       	push	r30
    343a:	ff 93       	push	r31
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  switch(TW_STATUS){
    343c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    3440:	88 7f       	andi	r24, 0xF8	; 248
    3442:	80 36       	cpi	r24, 0x60	; 96
    3444:	09 f4       	brne	.+2      	; 0x3448 <__vector_24+0x2e>
    3446:	4c c0       	rjmp	.+152    	; 0x34e0 <__vector_24+0xc6>
    3448:	08 f0       	brcs	.+2      	; 0x344c <__vector_24+0x32>
    344a:	3f c0       	rjmp	.+126    	; 0x34ca <__vector_24+0xb0>
    344c:	88 32       	cpi	r24, 0x28	; 40
    344e:	09 f4       	brne	.+2      	; 0x3452 <__vector_24+0x38>
    3450:	a8 c0       	rjmp	.+336    	; 0x35a2 <__vector_24+0x188>
    3452:	18 f5       	brcc	.+70     	; 0x349a <__vector_24+0x80>
    3454:	80 31       	cpi	r24, 0x10	; 16
    3456:	09 f4       	brne	.+2      	; 0x345a <__vector_24+0x40>
    3458:	9c c0       	rjmp	.+312    	; 0x3592 <__vector_24+0x178>
    345a:	b8 f4       	brcc	.+46     	; 0x348a <__vector_24+0x70>
    345c:	88 23       	and	r24, r24
    345e:	09 f4       	brne	.+2      	; 0x3462 <__vector_24+0x48>
    3460:	05 c1       	rjmp	.+522    	; 0x366c <__vector_24+0x252>
    3462:	88 30       	cpi	r24, 0x08	; 8
    3464:	09 f4       	brne	.+2      	; 0x3468 <__vector_24+0x4e>
    3466:	95 c0       	rjmp	.+298    	; 0x3592 <__vector_24+0x178>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:696
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    3468:	ff 91       	pop	r31
    346a:	ef 91       	pop	r30
    346c:	bf 91       	pop	r27
    346e:	af 91       	pop	r26
    3470:	9f 91       	pop	r25
    3472:	8f 91       	pop	r24
    3474:	7f 91       	pop	r23
    3476:	6f 91       	pop	r22
    3478:	5f 91       	pop	r21
    347a:	4f 91       	pop	r20
    347c:	3f 91       	pop	r19
    347e:	2f 91       	pop	r18
    3480:	0f 90       	pop	r0
    3482:	0f be       	out	0x3f, r0	; 63
    3484:	0f 90       	pop	r0
    3486:	1f 90       	pop	r1
    3488:	18 95       	reti
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    348a:	88 31       	cpi	r24, 0x18	; 24
    348c:	09 f4       	brne	.+2      	; 0x3490 <__vector_24+0x76>
    348e:	89 c0       	rjmp	.+274    	; 0x35a2 <__vector_24+0x188>
    3490:	80 32       	cpi	r24, 0x20	; 32
    3492:	51 f7       	brne	.-44     	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:570
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    3494:	80 93 b9 05 	sts	0x05B9, r24	; 0x8005b9 <twi_error>
    3498:	15 c0       	rjmp	.+42     	; 0x34c4 <__vector_24+0xaa>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    349a:	80 34       	cpi	r24, 0x40	; 64
    349c:	09 f4       	brne	.+2      	; 0x34a0 <__vector_24+0x86>
    349e:	a6 c0       	rjmp	.+332    	; 0x35ec <__vector_24+0x1d2>
    34a0:	48 f4       	brcc	.+18     	; 0x34b4 <__vector_24+0x9a>
    34a2:	80 33       	cpi	r24, 0x30	; 48
    34a4:	b9 f3       	breq	.-18     	; 0x3494 <__vector_24+0x7a>
    34a6:	88 33       	cpi	r24, 0x38	; 56
    34a8:	f9 f6       	brne	.-66     	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:574
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    34aa:	80 93 b9 05 	sts	0x05B9, r24	; 0x8005b9 <twi_error>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:575
      twi_releaseBus();
    34ae:	0e 94 07 1a 	call	0x340e	; 0x340e <twi_releaseBus>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:576
      break;
    34b2:	da cf       	rjmp	.-76     	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34b4:	80 35       	cpi	r24, 0x50	; 80
    34b6:	09 f4       	brne	.+2      	; 0x34ba <__vector_24+0xa0>
    34b8:	89 c0       	rjmp	.+274    	; 0x35cc <__vector_24+0x1b2>
    34ba:	88 35       	cpi	r24, 0x58	; 88
    34bc:	09 f4       	brne	.+2      	; 0x34c0 <__vector_24+0xa6>
    34be:	9e c0       	rjmp	.+316    	; 0x35fc <__vector_24+0x1e2>
    34c0:	88 34       	cpi	r24, 0x48	; 72
    34c2:	91 f6       	brne	.-92     	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:693
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    34c4:	0e 94 fd 19 	call	0x33fa	; 0x33fa <twi_stop>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:696
      break;
  }
}
    34c8:	cf cf       	rjmp	.-98     	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34ca:	88 39       	cpi	r24, 0x98	; 152
    34cc:	09 f4       	brne	.+2      	; 0x34d0 <__vector_24+0xb6>
    34ce:	94 c0       	rjmp	.+296    	; 0x35f8 <__vector_24+0x1de>
    34d0:	38 f5       	brcc	.+78     	; 0x3520 <__vector_24+0x106>
    34d2:	88 37       	cpi	r24, 0x78	; 120
    34d4:	29 f0       	breq	.+10     	; 0x34e0 <__vector_24+0xc6>
    34d6:	50 f4       	brcc	.+20     	; 0x34ec <__vector_24+0xd2>
    34d8:	88 36       	cpi	r24, 0x68	; 104
    34da:	11 f0       	breq	.+4      	; 0x34e0 <__vector_24+0xc6>
    34dc:	80 37       	cpi	r24, 0x70	; 112
    34de:	21 f6       	brne	.-120    	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:616
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    34e0:	83 e0       	ldi	r24, 0x03	; 3
    34e2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <twi_state>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:618
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    34e6:	10 92 ba 05 	sts	0x05BA, r1	; 0x8005ba <twi_rxBufferIndex>
    34ea:	57 c0       	rjmp	.+174    	; 0x359a <__vector_24+0x180>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34ec:	88 38       	cpi	r24, 0x88	; 136
    34ee:	09 f4       	brne	.+2      	; 0x34f2 <__vector_24+0xd8>
    34f0:	83 c0       	rjmp	.+262    	; 0x35f8 <__vector_24+0x1de>
    34f2:	80 39       	cpi	r24, 0x90	; 144
    34f4:	19 f0       	breq	.+6      	; 0x34fc <__vector_24+0xe2>
    34f6:	80 38       	cpi	r24, 0x80	; 128
    34f8:	09 f0       	breq	.+2      	; 0x34fc <__vector_24+0xe2>
    34fa:	b6 cf       	rjmp	.-148    	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:624
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    34fc:	80 91 ba 05 	lds	r24, 0x05BA	; 0x8005ba <twi_rxBufferIndex>
    3500:	80 32       	cpi	r24, 0x20	; 32
    3502:	08 f0       	brcs	.+2      	; 0x3506 <__vector_24+0xec>
    3504:	79 c0       	rjmp	.+242    	; 0x35f8 <__vector_24+0x1de>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:626
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    3506:	e0 91 ba 05 	lds	r30, 0x05BA	; 0x8005ba <twi_rxBufferIndex>
    350a:	81 e0       	ldi	r24, 0x01	; 1
    350c:	8e 0f       	add	r24, r30
    350e:	80 93 ba 05 	sts	0x05BA, r24	; 0x8005ba <twi_rxBufferIndex>
    3512:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    3516:	f0 e0       	ldi	r31, 0x00	; 0
    3518:	e5 54       	subi	r30, 0x45	; 69
    351a:	fa 4f       	sbci	r31, 0xFA	; 250
    351c:	80 83       	st	Z, r24
    351e:	3d c0       	rjmp	.+122    	; 0x359a <__vector_24+0x180>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    3520:	80 3b       	cpi	r24, 0xB0	; 176
    3522:	39 f0       	breq	.+14     	; 0x3532 <__vector_24+0x118>
    3524:	e0 f4       	brcc	.+56     	; 0x355e <__vector_24+0x144>
    3526:	80 3a       	cpi	r24, 0xA0	; 160
    3528:	09 f4       	brne	.+2      	; 0x352c <__vector_24+0x112>
    352a:	85 c0       	rjmp	.+266    	; 0x3636 <__vector_24+0x21c>
    352c:	88 3a       	cpi	r24, 0xA8	; 168
    352e:	09 f0       	breq	.+2      	; 0x3532 <__vector_24+0x118>
    3530:	9b cf       	rjmp	.-202    	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:655

    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    3532:	84 e0       	ldi	r24, 0x04	; 4
    3534:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <twi_state>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:657
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    3538:	10 92 dc 05 	sts	0x05DC, r1	; 0x8005dc <twi_txBufferIndex>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:659
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    353c:	10 92 db 05 	sts	0x05DB, r1	; 0x8005db <twi_txBufferLength>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:662
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    3540:	e0 91 03 06 	lds	r30, 0x0603	; 0x800603 <twi_onSlaveTransmit>
    3544:	f0 91 04 06 	lds	r31, 0x0604	; 0x800604 <twi_onSlaveTransmit+0x1>
    3548:	09 95       	icall
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:664
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    354a:	80 91 db 05 	lds	r24, 0x05DB	; 0x8005db <twi_txBufferLength>
    354e:	81 11       	cpse	r24, r1
    3550:	0f c0       	rjmp	.+30     	; 0x3570 <__vector_24+0x156>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:665
        twi_txBufferLength = 1;
    3552:	81 e0       	ldi	r24, 0x01	; 1
    3554:	80 93 db 05 	sts	0x05DB, r24	; 0x8005db <twi_txBufferLength>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:666
        twi_txBuffer[0] = 0x00;
    3558:	10 92 dd 05 	sts	0x05DD, r1	; 0x8005dd <twi_txBuffer>
    355c:	09 c0       	rjmp	.+18     	; 0x3570 <__vector_24+0x156>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:535
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    355e:	80 3c       	cpi	r24, 0xC0	; 192
    3560:	09 f4       	brne	.+2      	; 0x3564 <__vector_24+0x14a>
    3562:	82 c0       	rjmp	.+260    	; 0x3668 <__vector_24+0x24e>
    3564:	88 3c       	cpi	r24, 0xC8	; 200
    3566:	09 f4       	brne	.+2      	; 0x356a <__vector_24+0x150>
    3568:	7f c0       	rjmp	.+254    	; 0x3668 <__vector_24+0x24e>
    356a:	88 3b       	cpi	r24, 0xB8	; 184
    356c:	09 f0       	breq	.+2      	; 0x3570 <__vector_24+0x156>
    356e:	7c cf       	rjmp	.-264    	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:672
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    3570:	e0 91 dc 05 	lds	r30, 0x05DC	; 0x8005dc <twi_txBufferIndex>
    3574:	81 e0       	ldi	r24, 0x01	; 1
    3576:	8e 0f       	add	r24, r30
    3578:	80 93 dc 05 	sts	0x05DC, r24	; 0x8005dc <twi_txBufferIndex>
    357c:	f0 e0       	ldi	r31, 0x00	; 0
    357e:	e3 52       	subi	r30, 0x23	; 35
    3580:	fa 4f       	sbci	r31, 0xFA	; 250
    3582:	80 81       	ld	r24, Z
    3584:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:674
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    3588:	90 91 dc 05 	lds	r25, 0x05DC	; 0x8005dc <twi_txBufferIndex>
    358c:	80 91 db 05 	lds	r24, 0x05DB	; 0x8005db <twi_txBufferLength>
    3590:	31 c0       	rjmp	.+98     	; 0x35f4 <__vector_24+0x1da>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:540
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    3592:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <twi_slarw>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:550
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    3596:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
twi_reply():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:421
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    359a:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:423
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    359c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    35a0:	63 cf       	rjmp	.-314    	; 0x3468 <__vector_24+0x4e>
__vector_24():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:548

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
    35a2:	90 91 fe 05 	lds	r25, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    35a6:	80 91 fd 05 	lds	r24, 0x05FD	; 0x8005fd <twi_masterBufferLength>
    35aa:	98 17       	cp	r25, r24
    35ac:	b8 f5       	brcc	.+110    	; 0x361c <__vector_24+0x202>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:550
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    35ae:	80 91 ff 05 	lds	r24, 0x05FF	; 0x8005ff <twi_masterBuffer>
    35b2:	90 91 00 06 	lds	r25, 0x0600	; 0x800600 <twi_masterBuffer+0x1>
    35b6:	e0 91 fe 05 	lds	r30, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    35ba:	21 e0       	ldi	r18, 0x01	; 1
    35bc:	2e 0f       	add	r18, r30
    35be:	20 93 fe 05 	sts	0x05FE, r18	; 0x8005fe <twi_masterBufferIndex>
    35c2:	e8 0f       	add	r30, r24
    35c4:	f9 2f       	mov	r31, r25
    35c6:	f1 1d       	adc	r31, r1
    35c8:	80 81       	ld	r24, Z
    35ca:	e5 cf       	rjmp	.-54     	; 0x3596 <__vector_24+0x17c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:581
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    35cc:	20 91 ff 05 	lds	r18, 0x05FF	; 0x8005ff <twi_masterBuffer>
    35d0:	30 91 00 06 	lds	r19, 0x0600	; 0x800600 <twi_masterBuffer+0x1>
    35d4:	e0 91 fe 05 	lds	r30, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    35d8:	81 e0       	ldi	r24, 0x01	; 1
    35da:	8e 0f       	add	r24, r30
    35dc:	80 93 fe 05 	sts	0x05FE, r24	; 0x8005fe <twi_masterBufferIndex>
    35e0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    35e4:	e2 0f       	add	r30, r18
    35e6:	f3 2f       	mov	r31, r19
    35e8:	f1 1d       	adc	r31, r1
    35ea:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:585
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    35ec:	90 91 fe 05 	lds	r25, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    35f0:	80 91 fd 05 	lds	r24, 0x05FD	; 0x8005fd <twi_masterBufferLength>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:674
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    35f4:	98 17       	cp	r25, r24
    35f6:	88 f2       	brcs	.-94     	; 0x359a <__vector_24+0x180>
twi_reply():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:423
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    35f8:	85 e8       	ldi	r24, 0x85	; 133
    35fa:	d0 cf       	rjmp	.-96     	; 0x359c <__vector_24+0x182>
__vector_24():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:593
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    35fc:	20 91 ff 05 	lds	r18, 0x05FF	; 0x8005ff <twi_masterBuffer>
    3600:	30 91 00 06 	lds	r19, 0x0600	; 0x800600 <twi_masterBuffer+0x1>
    3604:	e0 91 fe 05 	lds	r30, 0x05FE	; 0x8005fe <twi_masterBufferIndex>
    3608:	81 e0       	ldi	r24, 0x01	; 1
    360a:	8e 0f       	add	r24, r30
    360c:	80 93 fe 05 	sts	0x05FE, r24	; 0x8005fe <twi_masterBufferIndex>
    3610:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    3614:	e2 0f       	add	r30, r18
    3616:	f3 2f       	mov	r31, r19
    3618:	f1 1d       	adc	r31, r1
    361a:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:594
  if (twi_sendStop)
    361c:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <twi_sendStop>
    3620:	81 11       	cpse	r24, r1
    3622:	50 cf       	rjmp	.-352    	; 0x34c4 <__vector_24+0xaa>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:597
          twi_stop();
  else {
    twi_inRepStart = true;  // we're going to send the START
    3624:	81 e0       	ldi	r24, 0x01	; 1
    3626:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <twi_inRepStart>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:601
    // don't enable the interrupt. We'll generate the start, but we
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    362a:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:421
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    362c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
__vector_24():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:685
    case TW_ST_DATA_NACK: // received nack, we are done
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    3630:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <twi_state>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:686
      break;
    3634:	19 cf       	rjmp	.-462    	; 0x3468 <__vector_24+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:635
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    3636:	0e 94 07 1a 	call	0x340e	; 0x340e <twi_releaseBus>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:637
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    363a:	80 91 ba 05 	lds	r24, 0x05BA	; 0x8005ba <twi_rxBufferIndex>
    363e:	80 32       	cpi	r24, 0x20	; 32
    3640:	30 f4       	brcc	.+12     	; 0x364e <__vector_24+0x234>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:638
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    3642:	e0 91 ba 05 	lds	r30, 0x05BA	; 0x8005ba <twi_rxBufferIndex>
    3646:	f0 e0       	ldi	r31, 0x00	; 0
    3648:	e5 54       	subi	r30, 0x45	; 69
    364a:	fa 4f       	sbci	r31, 0xFA	; 250
    364c:	10 82       	st	Z, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:641
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    364e:	60 91 ba 05 	lds	r22, 0x05BA	; 0x8005ba <twi_rxBufferIndex>
    3652:	70 e0       	ldi	r23, 0x00	; 0
    3654:	e0 91 01 06 	lds	r30, 0x0601	; 0x800601 <twi_onSlaveReceive>
    3658:	f0 91 02 06 	lds	r31, 0x0602	; 0x800602 <twi_onSlaveReceive+0x1>
    365c:	8b eb       	ldi	r24, 0xBB	; 187
    365e:	95 e0       	ldi	r25, 0x05	; 5
    3660:	09 95       	icall
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:643
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    3662:	10 92 ba 05 	sts	0x05BA, r1	; 0x8005ba <twi_rxBufferIndex>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:644
      break;
    3666:	00 cf       	rjmp	.-512    	; 0x3468 <__vector_24+0x4e>
twi_reply():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:421
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3668:	85 ec       	ldi	r24, 0xC5	; 197
    366a:	e0 cf       	rjmp	.-64     	; 0x362c <__vector_24+0x212>
__vector_24():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\libraries\Wire\src\utility/twi.c:692

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    366c:	10 92 b9 05 	sts	0x05B9, r1	; 0x8005b9 <twi_error>
    3670:	29 cf       	rjmp	.-430    	; 0x34c4 <__vector_24+0xaa>

00003672 <__vector_16>:
__vector_16():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    3672:	1f 92       	push	r1
    3674:	0f 92       	push	r0
    3676:	0f b6       	in	r0, 0x3f	; 63
    3678:	0f 92       	push	r0
    367a:	11 24       	eor	r1, r1
    367c:	2f 93       	push	r18
    367e:	3f 93       	push	r19
    3680:	8f 93       	push	r24
    3682:	9f 93       	push	r25
    3684:	af 93       	push	r26
    3686:	bf 93       	push	r27
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
    3688:	80 91 0e 06 	lds	r24, 0x060E	; 0x80060e <timer0_millis>
    368c:	90 91 0f 06 	lds	r25, 0x060F	; 0x80060f <timer0_millis+0x1>
    3690:	a0 91 10 06 	lds	r26, 0x0610	; 0x800610 <timer0_millis+0x2>
    3694:	b0 91 11 06 	lds	r27, 0x0611	; 0x800611 <timer0_millis+0x3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
    3698:	30 91 0d 06 	lds	r19, 0x060D	; 0x80060d <timer0_fract>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
    369c:	23 e0       	ldi	r18, 0x03	; 3
    369e:	23 0f       	add	r18, r19
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
    36a0:	2d 37       	cpi	r18, 0x7D	; 125
    36a2:	68 f1       	brcs	.+90     	; 0x36fe <__vector_16+0x8c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
    36a4:	26 e8       	ldi	r18, 0x86	; 134
    36a6:	23 0f       	add	r18, r19
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
    36a8:	02 96       	adiw	r24, 0x02	; 2
    36aa:	a1 1d       	adc	r26, r1
    36ac:	b1 1d       	adc	r27, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
    36ae:	20 93 0d 06 	sts	0x060D, r18	; 0x80060d <timer0_fract>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
    36b2:	80 93 0e 06 	sts	0x060E, r24	; 0x80060e <timer0_millis>
    36b6:	90 93 0f 06 	sts	0x060F, r25	; 0x80060f <timer0_millis+0x1>
    36ba:	a0 93 10 06 	sts	0x0610, r26	; 0x800610 <timer0_millis+0x2>
    36be:	b0 93 11 06 	sts	0x0611, r27	; 0x800611 <timer0_millis+0x3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
    36c2:	80 91 09 06 	lds	r24, 0x0609	; 0x800609 <timer0_overflow_count>
    36c6:	90 91 0a 06 	lds	r25, 0x060A	; 0x80060a <timer0_overflow_count+0x1>
    36ca:	a0 91 0b 06 	lds	r26, 0x060B	; 0x80060b <timer0_overflow_count+0x2>
    36ce:	b0 91 0c 06 	lds	r27, 0x060C	; 0x80060c <timer0_overflow_count+0x3>
    36d2:	01 96       	adiw	r24, 0x01	; 1
    36d4:	a1 1d       	adc	r26, r1
    36d6:	b1 1d       	adc	r27, r1
    36d8:	80 93 09 06 	sts	0x0609, r24	; 0x800609 <timer0_overflow_count>
    36dc:	90 93 0a 06 	sts	0x060A, r25	; 0x80060a <timer0_overflow_count+0x1>
    36e0:	a0 93 0b 06 	sts	0x060B, r26	; 0x80060b <timer0_overflow_count+0x2>
    36e4:	b0 93 0c 06 	sts	0x060C, r27	; 0x80060c <timer0_overflow_count+0x3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:213
#endif
}
    36e8:	bf 91       	pop	r27
    36ea:	af 91       	pop	r26
    36ec:	9f 91       	pop	r25
    36ee:	8f 91       	pop	r24
    36f0:	3f 91       	pop	r19
    36f2:	2f 91       	pop	r18
    36f4:	0f 90       	pop	r0
    36f6:	0f be       	out	0x3f, r0	; 63
    36f8:	0f 90       	pop	r0
    36fa:	1f 90       	pop	r1
    36fc:	18 95       	reti
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
    36fe:	01 96       	adiw	r24, 0x01	; 1
    3700:	a1 1d       	adc	r26, r1
    3702:	b1 1d       	adc	r27, r1
    3704:	d4 cf       	rjmp	.-88     	; 0x36ae <__vector_16+0x3c>

00003706 <millis>:
millis():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    3706:	2f b7       	in	r18, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    3708:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    370a:	60 91 0e 06 	lds	r22, 0x060E	; 0x80060e <timer0_millis>
    370e:	70 91 0f 06 	lds	r23, 0x060F	; 0x80060f <timer0_millis+0x1>
    3712:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <timer0_millis+0x2>
    3716:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <timer0_millis+0x3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    371a:	2f bf       	out	0x3f, r18	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:227

  return m;
}
    371c:	08 95       	ret

0000371e <micros>:
micros():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
    371e:	3f b7       	in	r19, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
    3720:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
    3722:	80 91 09 06 	lds	r24, 0x0609	; 0x800609 <timer0_overflow_count>
    3726:	90 91 0a 06 	lds	r25, 0x060A	; 0x80060a <timer0_overflow_count+0x1>
    372a:	a0 91 0b 06 	lds	r26, 0x060B	; 0x80060b <timer0_overflow_count+0x2>
    372e:	b0 91 0c 06 	lds	r27, 0x060C	; 0x80060c <timer0_overflow_count+0x3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
    3732:	26 b5       	in	r18, 0x26	; 38
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:261
  #error TIMER 0 not defined
#endif

  // Timer0 Interrupt Flag Register
#ifdef TIFR0
  if ((TIFR0 & _BV(TOV0)) && (t < 255))
    3734:	a8 9b       	sbis	0x15, 0	; 21
    3736:	05 c0       	rjmp	.+10     	; 0x3742 <micros+0x24>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:261 (discriminator 1)
    3738:	2f 3f       	cpi	r18, 0xFF	; 255
    373a:	19 f0       	breq	.+6      	; 0x3742 <micros+0x24>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:263
#ifndef CORRECT_EXACT_MICROS
    m++;
    373c:	01 96       	adiw	r24, 0x01	; 1
    373e:	a1 1d       	adc	r26, r1
    3740:	b1 1d       	adc	r27, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
    3742:	3f bf       	out	0x3f, r19	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
    3744:	ba 2f       	mov	r27, r26
    3746:	a9 2f       	mov	r26, r25
    3748:	98 2f       	mov	r25, r24
    374a:	88 27       	eor	r24, r24
    374c:	bc 01       	movw	r22, r24
    374e:	cd 01       	movw	r24, r26
    3750:	62 0f       	add	r22, r18
    3752:	71 1d       	adc	r23, r1
    3754:	81 1d       	adc	r24, r1
    3756:	91 1d       	adc	r25, r1
    3758:	42 e0       	ldi	r20, 0x02	; 2
    375a:	66 0f       	add	r22, r22
    375c:	77 1f       	adc	r23, r23
    375e:	88 1f       	adc	r24, r24
    3760:	99 1f       	adc	r25, r25
    3762:	4a 95       	dec	r20
    3764:	d1 f7       	brne	.-12     	; 0x375a <micros+0x3c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
    3766:	08 95       	ret

00003768 <delay>:
delay():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
    3768:	8f 92       	push	r8
    376a:	9f 92       	push	r9
    376c:	af 92       	push	r10
    376e:	bf 92       	push	r11
    3770:	cf 92       	push	r12
    3772:	df 92       	push	r13
    3774:	ef 92       	push	r14
    3776:	ff 92       	push	r15
    3778:	6b 01       	movw	r12, r22
    377a:	7c 01       	movw	r14, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
    377c:	0e 94 8f 1b 	call	0x371e	; 0x371e <micros>
    3780:	4b 01       	movw	r8, r22
    3782:	5c 01       	movw	r10, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:399

  while (ms > 0UL) {
    3784:	c1 14       	cp	r12, r1
    3786:	d1 04       	cpc	r13, r1
    3788:	e1 04       	cpc	r14, r1
    378a:	f1 04       	cpc	r15, r1
    378c:	e9 f0       	breq	.+58     	; 0x37c8 <delay+0x60>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:400
    yield();
    378e:	0e 94 63 21 	call	0x42c6	; 0x42c6 <yield>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:401 (discriminator 1)
    while (ms > 0UL && (micros() - start) >= 1000UL) {
    3792:	0e 94 8f 1b 	call	0x371e	; 0x371e <micros>
    3796:	68 19       	sub	r22, r8
    3798:	79 09       	sbc	r23, r9
    379a:	8a 09       	sbc	r24, r10
    379c:	9b 09       	sbc	r25, r11
    379e:	68 3e       	cpi	r22, 0xE8	; 232
    37a0:	73 40       	sbci	r23, 0x03	; 3
    37a2:	81 05       	cpc	r24, r1
    37a4:	91 05       	cpc	r25, r1
    37a6:	70 f3       	brcs	.-36     	; 0x3784 <delay+0x1c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:402
      ms--;
    37a8:	21 e0       	ldi	r18, 0x01	; 1
    37aa:	c2 1a       	sub	r12, r18
    37ac:	d1 08       	sbc	r13, r1
    37ae:	e1 08       	sbc	r14, r1
    37b0:	f1 08       	sbc	r15, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
    37b2:	88 ee       	ldi	r24, 0xE8	; 232
    37b4:	88 0e       	add	r8, r24
    37b6:	83 e0       	ldi	r24, 0x03	; 3
    37b8:	98 1e       	adc	r9, r24
    37ba:	a1 1c       	adc	r10, r1
    37bc:	b1 1c       	adc	r11, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
    37be:	c1 14       	cp	r12, r1
    37c0:	d1 04       	cpc	r13, r1
    37c2:	e1 04       	cpc	r14, r1
    37c4:	f1 04       	cpc	r15, r1
    37c6:	29 f7       	brne	.-54     	; 0x3792 <delay+0x2a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
    37c8:	ff 90       	pop	r15
    37ca:	ef 90       	pop	r14
    37cc:	df 90       	pop	r13
    37ce:	cf 90       	pop	r12
    37d0:	bf 90       	pop	r11
    37d2:	af 90       	pop	r10
    37d4:	9f 90       	pop	r9
    37d6:	8f 90       	pop	r8
    37d8:	08 95       	ret

000037da <delayMicroseconds>:
delayMicroseconds():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:619
  us -= 7; // = 2 cycles

#elif F_CPU >= 16000000L
  // for a one-microsecond delay, simply return.  the overhead
  // of the function call takes 14 (16) cycles, which is 1 us
  if (us <= 1) return; //  = 3 cycles, (4 when true)
    37da:	82 30       	cpi	r24, 0x02	; 2
    37dc:	91 05       	cpc	r25, r1
    37de:	38 f0       	brcs	.+14     	; 0x37ee <delayMicroseconds+0x14>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:624

  // the following loop takes 1/4 of a microsecond (4 cycles)
  // per iteration, so execute it four times for each microsecond of
  // delay requested.
  us <<= 2; // x4 us, = 4 cycles
    37e0:	88 0f       	add	r24, r24
    37e2:	99 1f       	adc	r25, r25
    37e4:	88 0f       	add	r24, r24
    37e6:	99 1f       	adc	r25, r25
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:629

  // account for the time taken in the preceeding commands.
  // we just burned 19 (21) cycles above, remove 5, (5*4=20)
  // to 2nd us is at least 8 so we can substract 5
  us -= 5; // = 2 cycles,
    37e8:	05 97       	sbiw	r24, 0x05	; 5
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:929
  us >>= 2; // us div 4, = 4 cycles

#endif

  // busy wait
  __asm__ __volatile__ (
    37ea:	01 97       	sbiw	r24, 0x01	; 1
    37ec:	f1 f7       	brne	.-4      	; 0x37ea <delayMicroseconds+0x10>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
    37ee:	08 95       	ret

000037f0 <init>:
init():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    37f0:	78 94       	sei
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:957

  // On the ATmega168, timer 0 is also used for fast hardware pwm
  // (using phase-correct PWM would mean that timer 0 overflowed half as often
  // resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
  TCCR0A |= _BV(WGM01) | _BV(WGM00);
    37f2:	84 b5       	in	r24, 0x24	; 36
    37f4:	83 60       	ori	r24, 0x03	; 3
    37f6:	84 bd       	out	0x24, r24	; 36
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:972
  #if defined(WGM00) && defined(WGM01) // The ATmega8 doesn't have WGM00 and WGM01
    TCCR0 |= _BV(WGM01) | _BV(WGM00);
  #endif
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
  // This combination is for the standard 168/328/640/1280/1281/2560/2561
  TCCR0B |= _BV(CS01) | _BV(CS00);
    37f8:	85 b5       	in	r24, 0x25	; 37
    37fa:	83 60       	ori	r24, 0x03	; 3
    37fc:	85 bd       	out	0x25, r24	; 37
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:984

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
  TIMSK0 |= _BV(TOIE0);
    37fe:	ee e6       	ldi	r30, 0x6E	; 110
    3800:	f0 e0       	ldi	r31, 0x00	; 0
    3802:	80 81       	ld	r24, Z
    3804:	81 60       	ori	r24, 0x01	; 1
    3806:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    3808:	e1 e8       	ldi	r30, 0x81	; 129
    380a:	f0 e0       	ldi	r31, 0x00	; 0
    380c:	82 e0       	ldi	r24, 0x02	; 2
    380e:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    3810:	80 81       	ld	r24, Z
    3812:	81 60       	ori	r24, 0x01	; 1
    3814:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    3816:	e0 e8       	ldi	r30, 0x80	; 128
    3818:	f0 e0       	ldi	r31, 0x00	; 0
    381a:	80 81       	ld	r24, Z
    381c:	81 60       	ori	r24, 0x01	; 1
    381e:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1013

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
#elif defined(TCCR2B) && defined(CS22)
  TCCR2B |= _BV(CS22);
    3820:	e1 eb       	ldi	r30, 0xB1	; 177
    3822:	f0 e0       	ldi	r31, 0x00	; 0
    3824:	80 81       	ld	r24, Z
    3826:	84 60       	ori	r24, 0x04	; 4
    3828:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1022

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
#elif defined(TCCR2A) && defined(WGM20)
  TCCR2A |= _BV(WGM20);
    382a:	e0 eb       	ldi	r30, 0xB0	; 176
    382c:	f0 e0       	ldi	r31, 0x00	; 0
    382e:	80 81       	ld	r24, Z
    3830:	81 60       	ori	r24, 0x01	; 1
    3832:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    3834:	87 e8       	ldi	r24, 0x87	; 135
    3836:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    383a:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring.c:1072
#endif
}
    383e:	08 95       	ret

00003840 <analogRead>:
analogRead():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:49
int analogRead(uint8_t pin)
{

// Macro located in the pins_arduino.h file
#ifdef analogPinToChannel
  pin = analogPinToChannel(pin);
    3840:	88 30       	cpi	r24, 0x08	; 8
    3842:	20 f0       	brcs	.+8      	; 0x384c <analogRead+0xc>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:49 (discriminator 1)
    3844:	8d 30       	cpi	r24, 0x0D	; 13
    3846:	08 f4       	brcc	.+2      	; 0x384a <analogRead+0xa>
    3848:	8d e0       	ldi	r24, 0x0D	; 13
    384a:	8e 50       	subi	r24, 0x0E	; 14
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:68 (discriminator 4)
  
  // set the analog reference (high two bits of ADMUX) and select the
  // channel (low 4 bits).  this also sets ADLAR (left-adjust result)
  // to 0 (the default).
#if defined(ADMUX)
  ADMUX = (analog_reference << 6) | (pin & 0x07);
    384c:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <analog_reference>
    3850:	90 e4       	ldi	r25, 0x40	; 64
    3852:	29 9f       	mul	r18, r25
    3854:	90 01       	movw	r18, r0
    3856:	11 24       	eor	r1, r1
    3858:	87 70       	andi	r24, 0x07	; 7
    385a:	82 2b       	or	r24, r18
    385c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:76 (discriminator 4)
  // without a delay, we seem to read from the wrong channel
  //delay(1);

#if defined(ADCSRA) && defined(ADC)
  // start the conversion
  ADCSRA |= _BV(ADSC);
    3860:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    3864:	80 64       	ori	r24, 0x40	; 64
    3866:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:79 (discriminator 1)

  // ADSC is cleared when the conversion finishes
  while (ADCSRA & _BV(ADSC)) {};
    386a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    386e:	86 fd       	sbrc	r24, 6
    3870:	fc cf       	rjmp	.-8      	; 0x386a <analogRead+0x2a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:83

  // ADC macro takes care of reading ADC register.
 	// avr-gcc implements the proper reading order: ADCL is read first.
 	return ADC;
    3872:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
    3876:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:87
#else
  return 0;
#endif
}
    387a:	08 95       	ret

0000387c <analogWrite>:
analogWrite():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:95
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    387c:	1f 93       	push	r17
    387e:	cf 93       	push	r28
    3880:	df 93       	push	r29
    3882:	18 2f       	mov	r17, r24
    3884:	eb 01       	movw	r28, r22
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:101
  // We need to make sure the PWM output is enabled for those pins
  // that support it, as we turn it off when digitally reading or
  // writing with them.  Also, make sure the pin is in output mode
  // for consistenty with Wiring, which doesn't require a pinMode
  // call for the analog output pins.
  pinMode(pin, OUTPUT);
    3886:	61 e0       	ldi	r22, 0x01	; 1
    3888:	0e 94 c4 1c 	call	0x3988	; 0x3988 <pinMode>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:102
  if (val == 0)
    388c:	20 97       	sbiw	r28, 0x00	; 0
    388e:	39 f4       	brne	.+14     	; 0x389e <analogWrite+0x22>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:104
  {
    digitalWrite(pin, LOW);
    3890:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:108
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
    3892:	81 2f       	mov	r24, r17
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
    3894:	df 91       	pop	r29
    3896:	cf 91       	pop	r28
    3898:	1f 91       	pop	r17
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
    389a:	0c 94 00 1d 	jmp	0x3a00	; 0x3a00 <digitalWrite>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:106
  pinMode(pin, OUTPUT);
  if (val == 0)
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
    389e:	cf 3f       	cpi	r28, 0xFF	; 255
    38a0:	d1 05       	cpc	r29, r1
    38a2:	11 f4       	brne	.+4      	; 0x38a8 <analogWrite+0x2c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, HIGH);
    38a4:	61 e0       	ldi	r22, 0x01	; 1
    38a6:	f5 cf       	rjmp	.-22     	; 0x3892 <analogWrite+0x16>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:112
  }
  else
  {
    switch(digitalPinToTimer(pin))
    38a8:	e1 2f       	mov	r30, r17
    38aa:	f0 e0       	ldi	r31, 0x00	; 0
    38ac:	e8 53       	subi	r30, 0x38	; 56
    38ae:	fe 4f       	sbci	r31, 0xFE	; 254
    38b0:	e4 91       	lpm	r30, Z
    38b2:	e4 30       	cpi	r30, 0x04	; 4
    38b4:	31 f1       	breq	.+76     	; 0x3902 <analogWrite+0x86>
    38b6:	40 f4       	brcc	.+16     	; 0x38c8 <analogWrite+0x4c>
    38b8:	e2 30       	cpi	r30, 0x02	; 2
    38ba:	b1 f0       	breq	.+44     	; 0x38e8 <analogWrite+0x6c>
    38bc:	e3 30       	cpi	r30, 0x03	; 3
    38be:	e1 f0       	breq	.+56     	; 0x38f8 <analogWrite+0x7c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:292
        break;
      #endif

      case NOT_ON_TIMER:
      default:
        if (val < 128) {
    38c0:	c0 38       	cpi	r28, 0x80	; 128
    38c2:	d1 05       	cpc	r29, r1
    38c4:	7c f7       	brge	.-34     	; 0x38a4 <analogWrite+0x28>
    38c6:	e4 cf       	rjmp	.-56     	; 0x3890 <analogWrite+0x14>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:112
  {
    digitalWrite(pin, HIGH);
  }
  else
  {
    switch(digitalPinToTimer(pin))
    38c8:	e8 30       	cpi	r30, 0x08	; 8
    38ca:	29 f1       	breq	.+74     	; 0x3916 <analogWrite+0x9a>
    38cc:	e9 30       	cpi	r30, 0x09	; 9
    38ce:	59 f1       	breq	.+86     	; 0x3926 <analogWrite+0xaa>
    38d0:	e5 30       	cpi	r30, 0x05	; 5
    38d2:	b1 f7       	brne	.-20     	; 0x38c0 <analogWrite+0x44>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:156
      #endif

      #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        // connect pwm to pin on timer 1, channel B
        TCCR1A |= _BV(COM1B1);
    38d4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    38d8:	80 62       	ori	r24, 0x20	; 32
    38da:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:157
        OCR1B = val; // set pwm duty
    38de:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
    38e2:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:158
        break;
    38e6:	04 c0       	rjmp	.+8      	; 0x38f0 <analogWrite+0x74>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:132
      #endif

      #if defined(TCCR0A) && defined(COM0A1)
      case TIMER0A:
        // connect pwm to pin on timer 0, channel A
        TCCR0A |= _BV(COM0A1);
    38e8:	84 b5       	in	r24, 0x24	; 36
    38ea:	80 68       	ori	r24, 0x80	; 128
    38ec:	84 bd       	out	0x24, r24	; 36
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:133
        OCR0A = val; // set pwm duty
    38ee:	c7 bd       	out	0x27, r28	; 39
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
    38f0:	df 91       	pop	r29
    38f2:	cf 91       	pop	r28
    38f4:	1f 91       	pop	r17
    38f6:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:140
      #endif

      #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        // connect pwm to pin on timer 0, channel B
        TCCR0A |= _BV(COM0B1);
    38f8:	84 b5       	in	r24, 0x24	; 36
    38fa:	80 62       	ori	r24, 0x20	; 32
    38fc:	84 bd       	out	0x24, r24	; 36
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:141
        OCR0B = val; // set pwm duty
    38fe:	c8 bd       	out	0x28, r28	; 40
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:142
        break;
    3900:	f7 cf       	rjmp	.-18     	; 0x38f0 <analogWrite+0x74>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:148
      #endif

      #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        // connect pwm to pin on timer 1, channel A
        TCCR1A |= _BV(COM1A1);
    3902:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    3906:	80 68       	ori	r24, 0x80	; 128
    3908:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:149
        OCR1A = val; // set pwm duty
    390c:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    3910:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:150
        break;
    3914:	ed cf       	rjmp	.-38     	; 0x38f0 <analogWrite+0x74>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:180
      #endif

      #if defined(TCCR2A) && defined(COM2A1)
      case TIMER2A:
        // connect pwm to pin on timer 2, channel A
        TCCR2A |= _BV(COM2A1);
    3916:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    391a:	80 68       	ori	r24, 0x80	; 128
    391c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:181
        OCR2A = val; // set pwm duty
    3920:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:182
        break;
    3924:	e5 cf       	rjmp	.-54     	; 0x38f0 <analogWrite+0x74>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:188
      #endif

      #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        // connect pwm to pin on timer 2, channel B
        TCCR2A |= _BV(COM2B1);
    3926:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    392a:	80 62       	ori	r24, 0x20	; 32
    392c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:189
        OCR2B = val; // set pwm duty
    3930:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_analog.c:190
        break;
    3934:	dd cf       	rjmp	.-70     	; 0x38f0 <analogWrite+0x74>

00003936 <turnOffPWM>:
turnOffPWM():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
    3936:	84 30       	cpi	r24, 0x04	; 4
    3938:	81 f0       	breq	.+32     	; 0x395a <turnOffPWM+0x24>
    393a:	28 f4       	brcc	.+10     	; 0x3946 <turnOffPWM+0x10>
    393c:	82 30       	cpi	r24, 0x02	; 2
    393e:	e9 f0       	breq	.+58     	; 0x397a <turnOffPWM+0x44>
    3940:	83 30       	cpi	r24, 0x03	; 3
    3942:	f9 f0       	breq	.+62     	; 0x3982 <turnOffPWM+0x4c>
    3944:	08 95       	ret
    3946:	88 30       	cpi	r24, 0x08	; 8
    3948:	71 f0       	breq	.+28     	; 0x3966 <turnOffPWM+0x30>
    394a:	89 30       	cpi	r24, 0x09	; 9
    394c:	91 f0       	breq	.+36     	; 0x3972 <turnOffPWM+0x3c>
    394e:	85 30       	cpi	r24, 0x05	; 5
    3950:	b9 f4       	brne	.+46     	; 0x3980 <turnOffPWM+0x4a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    3952:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    3956:	8f 7d       	andi	r24, 0xDF	; 223
    3958:	03 c0       	rjmp	.+6      	; 0x3960 <turnOffPWM+0x2a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:82
  switch (timer)
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
    395a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    395e:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    3960:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:88
        break;
    3964:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:104
        TCCR2 &= ~_BV(COM21);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2A1)
      case TIMER2A:
        TCCR2A &= ~_BV(COM2A1);
    3966:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    396a:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:109
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    396c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:110
        break;
    3970:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:109
        TCCR2A &= ~_BV(COM2A1);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    3972:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    3976:	8f 7d       	andi	r24, 0xDF	; 223
    3978:	f9 cf       	rjmp	.-14     	; 0x396c <turnOffPWM+0x36>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:176
        TCCR0 &= ~_BV(COM01);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0A1)
      case TIMER0A:
        TCCR0A &= ~_BV(COM0A1);
    397a:	84 b5       	in	r24, 0x24	; 36
    397c:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:181
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    397e:	84 bd       	out	0x24, r24	; 36
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:185
        break;
    #endif
  }
}
    3980:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:181
        TCCR0A &= ~_BV(COM0A1);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    3982:	84 b5       	in	r24, 0x24	; 36
    3984:	8f 7d       	andi	r24, 0xDF	; 223
    3986:	fb cf       	rjmp	.-10     	; 0x397e <turnOffPWM+0x48>

00003988 <pinMode>:
pinMode():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    3988:	cf 93       	push	r28
    398a:	df 93       	push	r29
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
    398c:	90 e0       	ldi	r25, 0x00	; 0
    398e:	fc 01       	movw	r30, r24
    3990:	e1 52       	subi	r30, 0x21	; 33
    3992:	fe 4f       	sbci	r31, 0xFE	; 254
    3994:	24 91       	lpm	r18, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
    3996:	8a 50       	subi	r24, 0x0A	; 10
    3998:	9e 4f       	sbci	r25, 0xFE	; 254
    399a:	fc 01       	movw	r30, r24
    399c:	84 91       	lpm	r24, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
    399e:	88 23       	and	r24, r24
    39a0:	c9 f0       	breq	.+50     	; 0x39d4 <pinMode+0x4c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
    39a2:	90 e0       	ldi	r25, 0x00	; 0
    39a4:	88 0f       	add	r24, r24
    39a6:	99 1f       	adc	r25, r25
    39a8:	fc 01       	movw	r30, r24
    39aa:	ef 5d       	subi	r30, 0xDF	; 223
    39ac:	fd 4f       	sbci	r31, 0xFD	; 253
    39ae:	a5 91       	lpm	r26, Z+
    39b0:	b4 91       	lpm	r27, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
    39b2:	fc 01       	movw	r30, r24
    39b4:	e9 5e       	subi	r30, 0xE9	; 233
    39b6:	fd 4f       	sbci	r31, 0xFD	; 253
    39b8:	c5 91       	lpm	r28, Z+
    39ba:	d4 91       	lpm	r29, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
    39bc:	61 11       	cpse	r22, r1
    39be:	0d c0       	rjmp	.+26     	; 0x39da <pinMode+0x52>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
    39c0:	9f b7       	in	r25, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:43
    cli();
    39c2:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
    39c4:	8c 91       	ld	r24, X
    39c6:	20 95       	com	r18
    39c8:	82 23       	and	r24, r18
    39ca:	8c 93       	st	X, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
    39cc:	88 81       	ld	r24, Y
    39ce:	28 23       	and	r18, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
    39d0:	28 83       	st	Y, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
    39d2:	9f bf       	out	0x3f, r25	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
    39d4:	df 91       	pop	r29
    39d6:	cf 91       	pop	r28
    39d8:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    39da:	62 30       	cpi	r22, 0x02	; 2
    39dc:	51 f4       	brne	.+20     	; 0x39f2 <pinMode+0x6a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
    39de:	9f b7       	in	r25, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
    39e0:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
    39e2:	3c 91       	ld	r19, X
    39e4:	82 2f       	mov	r24, r18
    39e6:	80 95       	com	r24
    39e8:	83 23       	and	r24, r19
    39ea:	8c 93       	st	X, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
    39ec:	e8 81       	ld	r30, Y
    39ee:	2e 2b       	or	r18, r30
    39f0:	ef cf       	rjmp	.-34     	; 0x39d0 <pinMode+0x48>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    39f2:	8f b7       	in	r24, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:55
    cli();
    39f4:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
    39f6:	ec 91       	ld	r30, X
    39f8:	2e 2b       	or	r18, r30
    39fa:	2c 93       	st	X, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
    39fc:	8f bf       	out	0x3f, r24	; 63
    39fe:	ea cf       	rjmp	.-44     	; 0x39d4 <pinMode+0x4c>

00003a00 <digitalWrite>:
digitalWrite():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    3a00:	1f 93       	push	r17
    3a02:	cf 93       	push	r28
    3a04:	df 93       	push	r29
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
    3a06:	28 2f       	mov	r18, r24
    3a08:	30 e0       	ldi	r19, 0x00	; 0
    3a0a:	f9 01       	movw	r30, r18
    3a0c:	e8 53       	subi	r30, 0x38	; 56
    3a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a10:	84 91       	lpm	r24, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
    3a12:	f9 01       	movw	r30, r18
    3a14:	e1 52       	subi	r30, 0x21	; 33
    3a16:	fe 4f       	sbci	r31, 0xFE	; 254
    3a18:	d4 91       	lpm	r29, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
    3a1a:	f9 01       	movw	r30, r18
    3a1c:	ea 50       	subi	r30, 0x0A	; 10
    3a1e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a20:	c4 91       	lpm	r28, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
    3a22:	cc 23       	and	r28, r28
    3a24:	a9 f0       	breq	.+42     	; 0x3a50 <digitalWrite+0x50>
    3a26:	16 2f       	mov	r17, r22
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    3a28:	81 11       	cpse	r24, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:198 (discriminator 1)
    3a2a:	0e 94 9b 1c 	call	0x3936	; 0x3936 <turnOffPWM>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
    3a2e:	ec 2f       	mov	r30, r28
    3a30:	f0 e0       	ldi	r31, 0x00	; 0
    3a32:	ee 0f       	add	r30, r30
    3a34:	ff 1f       	adc	r31, r31
    3a36:	e9 5e       	subi	r30, 0xE9	; 233
    3a38:	fd 4f       	sbci	r31, 0xFD	; 253
    3a3a:	a5 91       	lpm	r26, Z+
    3a3c:	b4 91       	lpm	r27, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
    3a3e:	8f b7       	in	r24, 0x3f	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:203
  cli();
    3a40:	f8 94       	cli
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
    3a42:	ec 91       	ld	r30, X
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
    3a44:	11 11       	cpse	r17, r1
    3a46:	08 c0       	rjmp	.+16     	; 0x3a58 <digitalWrite+0x58>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
    3a48:	d0 95       	com	r29
    3a4a:	de 23       	and	r29, r30
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
    3a4c:	dc 93       	st	X, r29
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
    3a4e:	8f bf       	out	0x3f, r24	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:212
}
    3a50:	df 91       	pop	r29
    3a52:	cf 91       	pop	r28
    3a54:	1f 91       	pop	r17
    3a56:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
    3a58:	de 2b       	or	r29, r30
    3a5a:	f8 cf       	rjmp	.-16     	; 0x3a4c <digitalWrite+0x4c>

00003a5c <digitalRead>:
digitalRead():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
    3a5c:	cf 93       	push	r28
    3a5e:	df 93       	push	r29
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
    3a60:	28 2f       	mov	r18, r24
    3a62:	30 e0       	ldi	r19, 0x00	; 0
    3a64:	f9 01       	movw	r30, r18
    3a66:	e8 53       	subi	r30, 0x38	; 56
    3a68:	fe 4f       	sbci	r31, 0xFE	; 254
    3a6a:	84 91       	lpm	r24, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
    3a6c:	f9 01       	movw	r30, r18
    3a6e:	e1 52       	subi	r30, 0x21	; 33
    3a70:	fe 4f       	sbci	r31, 0xFE	; 254
    3a72:	d4 91       	lpm	r29, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
    3a74:	f9 01       	movw	r30, r18
    3a76:	ea 50       	subi	r30, 0x0A	; 10
    3a78:	fe 4f       	sbci	r31, 0xFE	; 254
    3a7a:	c4 91       	lpm	r28, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
    3a7c:	cc 23       	and	r28, r28
    3a7e:	a1 f0       	breq	.+40     	; 0x3aa8 <digitalRead+0x4c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    3a80:	81 11       	cpse	r24, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:224 (discriminator 1)
    3a82:	0e 94 9b 1c 	call	0x3936	; 0x3936 <turnOffPWM>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
    3a86:	ec 2f       	mov	r30, r28
    3a88:	f0 e0       	ldi	r31, 0x00	; 0
    3a8a:	ee 0f       	add	r30, r30
    3a8c:	ff 1f       	adc	r31, r31
    3a8e:	e3 5f       	subi	r30, 0xF3	; 243
    3a90:	fd 4f       	sbci	r31, 0xFD	; 253
    3a92:	a5 91       	lpm	r26, Z+
    3a94:	b4 91       	lpm	r27, Z
    3a96:	ec 91       	ld	r30, X
    3a98:	ed 23       	and	r30, r29
    3a9a:	81 e0       	ldi	r24, 0x01	; 1
    3a9c:	90 e0       	ldi	r25, 0x00	; 0
    3a9e:	09 f4       	brne	.+2      	; 0x3aa2 <digitalRead+0x46>
    3aa0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
    3aa2:	df 91       	pop	r29
    3aa4:	cf 91       	pop	r28
    3aa6:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
    3aa8:	80 e0       	ldi	r24, 0x00	; 0
    3aaa:	90 e0       	ldi	r25, 0x00	; 0
    3aac:	fa cf       	rjmp	.-12     	; 0x3aa2 <digitalRead+0x46>

00003aae <HardwareSerial::available()>:
_ZN14HardwareSerial9availableEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:164
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    3aae:	fc 01       	movw	r30, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:165
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    3ab0:	91 8d       	ldd	r25, Z+25	; 0x19
    3ab2:	22 8d       	ldd	r18, Z+26	; 0x1a
    3ab4:	89 2f       	mov	r24, r25
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	80 5c       	subi	r24, 0xC0	; 192
    3aba:	9f 4f       	sbci	r25, 0xFF	; 255
    3abc:	82 1b       	sub	r24, r18
    3abe:	91 09       	sbc	r25, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:166
}
    3ac0:	8f 73       	andi	r24, 0x3F	; 63
    3ac2:	99 27       	eor	r25, r25
    3ac4:	08 95       	ret

00003ac6 <HardwareSerial::peek()>:
_ZN14HardwareSerial4peekEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:169

int HardwareSerial::peek(void)
{
    3ac6:	fc 01       	movw	r30, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:170
  if (_rx_buffer_head == _rx_buffer_tail) {
    3ac8:	91 8d       	ldd	r25, Z+25	; 0x19
    3aca:	82 8d       	ldd	r24, Z+26	; 0x1a
    3acc:	98 17       	cp	r25, r24
    3ace:	31 f0       	breq	.+12     	; 0x3adc <HardwareSerial::peek()+0x16>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:173
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    3ad0:	82 8d       	ldd	r24, Z+26	; 0x1a
    3ad2:	e8 0f       	add	r30, r24
    3ad4:	f1 1d       	adc	r31, r1
    3ad6:	85 8d       	ldd	r24, Z+29	; 0x1d
    3ad8:	90 e0       	ldi	r25, 0x00	; 0
    3ada:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:171
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3adc:	8f ef       	ldi	r24, 0xFF	; 255
    3ade:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:175
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    3ae0:	08 95       	ret

00003ae2 <HardwareSerial::read()>:
_ZN14HardwareSerial4readEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:178

int HardwareSerial::read(void)
{
    3ae2:	fc 01       	movw	r30, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:180
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    3ae4:	91 8d       	ldd	r25, Z+25	; 0x19
    3ae6:	82 8d       	ldd	r24, Z+26	; 0x1a
    3ae8:	98 17       	cp	r25, r24
    3aea:	61 f0       	breq	.+24     	; 0x3b04 <HardwareSerial::read()+0x22>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:183
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    3aec:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3aee:	ae 0f       	add	r26, r30
    3af0:	bf 2f       	mov	r27, r31
    3af2:	b1 1d       	adc	r27, r1
    3af4:	5d 96       	adiw	r26, 0x1d	; 29
    3af6:	8c 91       	ld	r24, X
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:184
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    3af8:	92 8d       	ldd	r25, Z+26	; 0x1a
    3afa:	9f 5f       	subi	r25, 0xFF	; 255
    3afc:	9f 73       	andi	r25, 0x3F	; 63
    3afe:	92 8f       	std	Z+26, r25	; 0x1a
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:185
    return c;
    3b00:	90 e0       	ldi	r25, 0x00	; 0
    3b02:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:181

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3b04:	8f ef       	ldi	r24, 0xFF	; 255
    3b06:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:187
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    3b08:	08 95       	ret

00003b0a <HardwareSerial::availableForWrite()>:
_ZN14HardwareSerial17availableForWriteEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:195
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    3b0a:	fc 01       	movw	r30, r24
    3b0c:	53 8d       	ldd	r21, Z+27	; 0x1b
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:196
    tail = _tx_buffer_tail;
    3b0e:	44 8d       	ldd	r20, Z+28	; 0x1c
    3b10:	25 2f       	mov	r18, r21
    3b12:	30 e0       	ldi	r19, 0x00	; 0
    3b14:	84 2f       	mov	r24, r20
    3b16:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:198
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    3b18:	82 1b       	sub	r24, r18
    3b1a:	93 0b       	sbc	r25, r19
    3b1c:	54 17       	cp	r21, r20
    3b1e:	10 f0       	brcs	.+4      	; 0x3b24 <HardwareSerial::availableForWrite()+0x1a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:198 (discriminator 1)
    3b20:	cf 96       	adiw	r24, 0x3f	; 63
    3b22:	08 95       	ret
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:199
  return tail - head - 1;
    3b24:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:200
}
    3b26:	08 95       	ret

00003b28 <serialEventRun()>:
_Z14serialEventRunv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    3b28:	81 ee       	ldi	r24, 0xE1	; 225
    3b2a:	9e e1       	ldi	r25, 0x1E	; 30
    3b2c:	89 2b       	or	r24, r25
    3b2e:	49 f0       	breq	.+18     	; 0x3b42 <serialEventRun()+0x1a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:67 (discriminator 1)
    3b30:	80 e0       	ldi	r24, 0x00	; 0
    3b32:	90 e0       	ldi	r25, 0x00	; 0
    3b34:	89 2b       	or	r24, r25
    3b36:	29 f0       	breq	.+10     	; 0x3b42 <serialEventRun()+0x1a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:67 (discriminator 3)
    3b38:	0e 94 e1 1e 	call	0x3dc2	; 0x3dc2 <Serial0_available()>
    3b3c:	81 11       	cpse	r24, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:67
    3b3e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:78
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
    3b42:	08 95       	ret

00003b44 <HardwareSerial::_tx_udr_empty_irq()>:
_ZN14HardwareSerial17_tx_udr_empty_irqEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:90
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3b44:	fc 01       	movw	r30, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:93
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    3b46:	a4 8d       	ldd	r26, Z+28	; 0x1c
    3b48:	a8 0f       	add	r26, r24
    3b4a:	b9 2f       	mov	r27, r25
    3b4c:	b1 1d       	adc	r27, r1
    3b4e:	a3 5a       	subi	r26, 0xA3	; 163
    3b50:	bf 4f       	sbci	r27, 0xFF	; 255
    3b52:	2c 91       	ld	r18, X
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:94
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    3b54:	84 8d       	ldd	r24, Z+28	; 0x1c
    3b56:	90 e0       	ldi	r25, 0x00	; 0
    3b58:	01 96       	adiw	r24, 0x01	; 1
    3b5a:	8f 73       	andi	r24, 0x3F	; 63
    3b5c:	99 27       	eor	r25, r25
    3b5e:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:96

  *_udr = c;
    3b60:	a6 89       	ldd	r26, Z+22	; 0x16
    3b62:	b7 89       	ldd	r27, Z+23	; 0x17
    3b64:	2c 93       	st	X, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:104
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

  #ifdef MPCM0
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    3b66:	a0 89       	ldd	r26, Z+16	; 0x10
    3b68:	b1 89       	ldd	r27, Z+17	; 0x11
    3b6a:	8c 91       	ld	r24, X
    3b6c:	83 70       	andi	r24, 0x03	; 3
    3b6e:	80 64       	ori	r24, 0x40	; 64
    3b70:	8c 93       	st	X, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:109
  #else
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
  #endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    3b72:	93 8d       	ldd	r25, Z+27	; 0x1b
    3b74:	84 8d       	ldd	r24, Z+28	; 0x1c
    3b76:	98 13       	cpse	r25, r24
    3b78:	06 c0       	rjmp	.+12     	; 0x3b86 <HardwareSerial::_tx_udr_empty_irq()+0x42>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:111
    // Buffer empty, so disable interrupts
    *_ucsrb &= ~_BV(UDRIE0);
    3b7a:	02 88       	ldd	r0, Z+18	; 0x12
    3b7c:	f3 89       	ldd	r31, Z+19	; 0x13
    3b7e:	e0 2d       	mov	r30, r0
    3b80:	80 81       	ld	r24, Z
    3b82:	8f 7d       	andi	r24, 0xDF	; 223
    3b84:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:113
  }
}
    3b86:	08 95       	ret

00003b88 <HardwareSerial::flush()>:
_ZN14HardwareSerial5flushEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:203
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    3b88:	cf 93       	push	r28
    3b8a:	df 93       	push	r29
    3b8c:	ec 01       	movw	r28, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:207
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    3b8e:	88 8d       	ldd	r24, Y+24	; 0x18
    3b90:	88 23       	and	r24, r24
    3b92:	b9 f0       	breq	.+46     	; 0x3bc2 <HardwareSerial::flush()+0x3a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:210
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    3b94:	aa 89       	ldd	r26, Y+18	; 0x12
    3b96:	bb 89       	ldd	r27, Y+19	; 0x13
    3b98:	e8 89       	ldd	r30, Y+16	; 0x10
    3b9a:	f9 89       	ldd	r31, Y+17	; 0x11
    3b9c:	8c 91       	ld	r24, X
    3b9e:	85 fd       	sbrc	r24, 5
    3ba0:	03 c0       	rjmp	.+6      	; 0x3ba8 <HardwareSerial::flush()+0x20>
    3ba2:	80 81       	ld	r24, Z
    3ba4:	86 fd       	sbrc	r24, 6
    3ba6:	0d c0       	rjmp	.+26     	; 0x3bc2 <HardwareSerial::flush()+0x3a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:211
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3ba8:	0f b6       	in	r0, 0x3f	; 63
    3baa:	07 fc       	sbrc	r0, 7
    3bac:	f7 cf       	rjmp	.-18     	; 0x3b9c <HardwareSerial::flush()+0x14>
    3bae:	8c 91       	ld	r24, X
    3bb0:	85 ff       	sbrs	r24, 5
    3bb2:	f2 cf       	rjmp	.-28     	; 0x3b98 <HardwareSerial::flush()+0x10>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:215
      // Interrupts are globally disabled, but the DR empty
      // interrupt should be enabled, so poll the DR empty flag to
      // prevent deadlock
      if (bit_is_set(*_ucsra, UDRE0))
    3bb4:	80 81       	ld	r24, Z
    3bb6:	85 ff       	sbrs	r24, 5
    3bb8:	ed cf       	rjmp	.-38     	; 0x3b94 <HardwareSerial::flush()+0xc>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:216
        _tx_udr_empty_irq();
    3bba:	ce 01       	movw	r24, r28
    3bbc:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <HardwareSerial::_tx_udr_empty_irq()>
    3bc0:	e9 cf       	rjmp	.-46     	; 0x3b94 <HardwareSerial::flush()+0xc>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:220
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    3bc2:	df 91       	pop	r29
    3bc4:	cf 91       	pop	r28
    3bc6:	08 95       	ret

00003bc8 <HardwareSerial::write(unsigned char)>:
_ZN14HardwareSerial5writeEh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:223

size_t HardwareSerial::write(uint8_t c)
{
    3bc8:	ef 92       	push	r14
    3bca:	ff 92       	push	r15
    3bcc:	0f 93       	push	r16
    3bce:	1f 93       	push	r17
    3bd0:	cf 93       	push	r28
    3bd2:	df 93       	push	r29
    3bd4:	ec 01       	movw	r28, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:224
  _written = true;
    3bd6:	81 e0       	ldi	r24, 0x01	; 1
    3bd8:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:229
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    3bda:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3bdc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3bde:	98 13       	cpse	r25, r24
    3be0:	1a c0       	rjmp	.+52     	; 0x3c16 <HardwareSerial::write(unsigned char)+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:229 (discriminator 1)
    3be2:	e8 89       	ldd	r30, Y+16	; 0x10
    3be4:	f9 89       	ldd	r31, Y+17	; 0x11
    3be6:	80 81       	ld	r24, Z
    3be8:	85 ff       	sbrs	r24, 5
    3bea:	15 c0       	rjmp	.+42     	; 0x3c16 <HardwareSerial::write(unsigned char)+0x4e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:238
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    3bec:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    3bee:	f8 94       	cli
_ZN14HardwareSerial5writeEh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:239
      *_udr = c;
    3bf0:	ee 89       	ldd	r30, Y+22	; 0x16
    3bf2:	ff 89       	ldd	r31, Y+23	; 0x17
    3bf4:	60 83       	st	Z, r22
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:241
      #ifdef MPCM0
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    3bf6:	e8 89       	ldd	r30, Y+16	; 0x10
    3bf8:	f9 89       	ldd	r31, Y+17	; 0x11
    3bfa:	80 81       	ld	r24, Z
    3bfc:	83 70       	andi	r24, 0x03	; 3
    3bfe:	80 64       	ori	r24, 0x40	; 64
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:271
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    _tx_buffer_head = i;
    *_ucsrb |= _BV(UDRIE0);
    3c00:	80 83       	st	Z, r24
__iRestore():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    3c02:	9f bf       	out	0x3f, r25	; 63
_ZN14HardwareSerial5writeEh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:275
  }
  
  return 1;
}
    3c04:	81 e0       	ldi	r24, 0x01	; 1
    3c06:	90 e0       	ldi	r25, 0x00	; 0
    3c08:	df 91       	pop	r29
    3c0a:	cf 91       	pop	r28
    3c0c:	1f 91       	pop	r17
    3c0e:	0f 91       	pop	r16
    3c10:	ff 90       	pop	r15
    3c12:	ef 90       	pop	r14
    3c14:	08 95       	ret
    3c16:	f6 2e       	mov	r15, r22
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:248
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
      #endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    3c18:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3c1a:	10 e0       	ldi	r17, 0x00	; 0
    3c1c:	0f 5f       	subi	r16, 0xFF	; 255
    3c1e:	1f 4f       	sbci	r17, 0xFF	; 255
    3c20:	0f 73       	andi	r16, 0x3F	; 63
    3c22:	11 27       	eor	r17, r17
    3c24:	e0 2e       	mov	r14, r16
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:252

  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    3c26:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3c28:	8e 11       	cpse	r24, r14
    3c2a:	0c c0       	rjmp	.+24     	; 0x3c44 <HardwareSerial::write(unsigned char)+0x7c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:253
    if (bit_is_clear(SREG, SREG_I)) {
    3c2c:	0f b6       	in	r0, 0x3f	; 63
    3c2e:	07 fc       	sbrc	r0, 7
    3c30:	fa cf       	rjmp	.-12     	; 0x3c26 <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:258
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    3c32:	e8 89       	ldd	r30, Y+16	; 0x10
    3c34:	f9 89       	ldd	r31, Y+17	; 0x11
    3c36:	80 81       	ld	r24, Z
    3c38:	85 ff       	sbrs	r24, 5
    3c3a:	f5 cf       	rjmp	.-22     	; 0x3c26 <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:259
        _tx_udr_empty_irq();
    3c3c:	ce 01       	movw	r24, r28
    3c3e:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <HardwareSerial::_tx_udr_empty_irq()>
    3c42:	f1 cf       	rjmp	.-30     	; 0x3c26 <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:265
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    3c44:	eb 8d       	ldd	r30, Y+27	; 0x1b
    3c46:	ec 0f       	add	r30, r28
    3c48:	fd 2f       	mov	r31, r29
    3c4a:	f1 1d       	adc	r31, r1
    3c4c:	e3 5a       	subi	r30, 0xA3	; 163
    3c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c50:	f0 82       	st	Z, r15
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:269
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    3c52:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    3c54:	f8 94       	cli
_ZN14HardwareSerial5writeEh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:270
    _tx_buffer_head = i;
    3c56:	0b 8f       	std	Y+27, r16	; 0x1b
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:271
    *_ucsrb |= _BV(UDRIE0);
    3c58:	ea 89       	ldd	r30, Y+18	; 0x12
    3c5a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c5c:	80 81       	ld	r24, Z
    3c5e:	80 62       	ori	r24, 0x20	; 32
    3c60:	cf cf       	rjmp	.-98     	; 0x3c00 <HardwareSerial::write(unsigned char)+0x38>

00003c62 <HardwareSerial::begin(unsigned long, unsigned char)>:
_ZN14HardwareSerial5beginEmh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:118
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    3c62:	cf 92       	push	r12
    3c64:	df 92       	push	r13
    3c66:	ef 92       	push	r14
    3c68:	ff 92       	push	r15
    3c6a:	1f 93       	push	r17
    3c6c:	cf 93       	push	r28
    3c6e:	df 93       	push	r29
    3c70:	ec 01       	movw	r28, r24
    3c72:	6a 01       	movw	r12, r20
    3c74:	7b 01       	movw	r14, r22
    3c76:	12 2f       	mov	r17, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:121
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    3c78:	e8 89       	ldd	r30, Y+16	; 0x10
    3c7a:	f9 89       	ldd	r31, Y+17	; 0x11
    3c7c:	82 e0       	ldi	r24, 0x02	; 2
    3c7e:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:128
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3c80:	c1 14       	cp	r12, r1
    3c82:	81 ee       	ldi	r24, 0xE1	; 225
    3c84:	d8 06       	cpc	r13, r24
    3c86:	e1 04       	cpc	r14, r1
    3c88:	f1 04       	cpc	r15, r1
    3c8a:	a1 f0       	breq	.+40     	; 0x3cb4 <HardwareSerial::begin(unsigned long, unsigned char)+0x52>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:120 (discriminator 1)
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    3c8c:	60 e0       	ldi	r22, 0x00	; 0
    3c8e:	79 e0       	ldi	r23, 0x09	; 9
    3c90:	8d e3       	ldi	r24, 0x3D	; 61
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	a7 01       	movw	r20, r14
    3c96:	96 01       	movw	r18, r12
    3c98:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <__udivmodsi4>
    3c9c:	21 50       	subi	r18, 0x01	; 1
    3c9e:	31 09       	sbc	r19, r1
    3ca0:	41 09       	sbc	r20, r1
    3ca2:	51 09       	sbc	r21, r1
    3ca4:	56 95       	lsr	r21
    3ca6:	47 95       	ror	r20
    3ca8:	37 95       	ror	r19
    3caa:	27 95       	ror	r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:128 (discriminator 1)
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3cac:	21 15       	cp	r18, r1
    3cae:	80 e1       	ldi	r24, 0x10	; 16
    3cb0:	38 07       	cpc	r19, r24
    3cb2:	98 f0       	brcs	.+38     	; 0x3cda <HardwareSerial::begin(unsigned long, unsigned char)+0x78>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:130
  {
    *_ucsra = 0;
    3cb4:	e8 89       	ldd	r30, Y+16	; 0x10
    3cb6:	f9 89       	ldd	r31, Y+17	; 0x11
    3cb8:	10 82       	st	Z, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:131
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    3cba:	60 e8       	ldi	r22, 0x80	; 128
    3cbc:	74 e8       	ldi	r23, 0x84	; 132
    3cbe:	8e e1       	ldi	r24, 0x1E	; 30
    3cc0:	90 e0       	ldi	r25, 0x00	; 0
    3cc2:	a7 01       	movw	r20, r14
    3cc4:	96 01       	movw	r18, r12
    3cc6:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <__udivmodsi4>
    3cca:	21 50       	subi	r18, 0x01	; 1
    3ccc:	31 09       	sbc	r19, r1
    3cce:	41 09       	sbc	r20, r1
    3cd0:	51 09       	sbc	r21, r1
    3cd2:	56 95       	lsr	r21
    3cd4:	47 95       	ror	r20
    3cd6:	37 95       	ror	r19
    3cd8:	27 95       	ror	r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:135
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    3cda:	ec 85       	ldd	r30, Y+12	; 0x0c
    3cdc:	fd 85       	ldd	r31, Y+13	; 0x0d
    3cde:	30 83       	st	Z, r19
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    3ce0:	ee 85       	ldd	r30, Y+14	; 0x0e
    3ce2:	ff 85       	ldd	r31, Y+15	; 0x0f
    3ce4:	20 83       	st	Z, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    3ce6:	18 8e       	std	Y+24, r1	; 0x18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    3ce8:	ec 89       	ldd	r30, Y+20	; 0x14
    3cea:	fd 89       	ldd	r31, Y+21	; 0x15
    3cec:	10 83       	st	Z, r17
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    3cee:	ea 89       	ldd	r30, Y+18	; 0x12
    3cf0:	fb 89       	ldd	r31, Y+19	; 0x13
    3cf2:	80 81       	ld	r24, Z
    3cf4:	88 69       	ori	r24, 0x98	; 152
    3cf6:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    3cf8:	ea 89       	ldd	r30, Y+18	; 0x12
    3cfa:	fb 89       	ldd	r31, Y+19	; 0x13
    3cfc:	80 81       	ld	r24, Z
    3cfe:	8f 7d       	andi	r24, 0xDF	; 223
    3d00:	80 83       	st	Z, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial.cpp:150
}
    3d02:	df 91       	pop	r29
    3d04:	cf 91       	pop	r28
    3d06:	1f 91       	pop	r17
    3d08:	ff 90       	pop	r15
    3d0a:	ef 90       	pop	r14
    3d0c:	df 90       	pop	r13
    3d0e:	cf 90       	pop	r12
    3d10:	08 95       	ret

00003d12 <__vector_18>:
__vector_18():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:50
#elif defined(USART_RX_vect)
  ISR(USART_RX_vect)
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    3d12:	1f 92       	push	r1
    3d14:	0f 92       	push	r0
    3d16:	0f b6       	in	r0, 0x3f	; 63
    3d18:	0f 92       	push	r0
    3d1a:	11 24       	eor	r1, r1
    3d1c:	2f 93       	push	r18
    3d1e:	8f 93       	push	r24
    3d20:	9f 93       	push	r25
    3d22:	ef 93       	push	r30
    3d24:	ff 93       	push	r31
_ZN14HardwareSerial16_rx_complete_irqEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3d26:	e0 91 22 06 	lds	r30, 0x0622	; 0x800622 <Serial+0x10>
    3d2a:	f0 91 23 06 	lds	r31, 0x0623	; 0x800623 <Serial+0x11>
    3d2e:	80 81       	ld	r24, Z
    3d30:	e0 91 28 06 	lds	r30, 0x0628	; 0x800628 <Serial+0x16>
    3d34:	f0 91 29 06 	lds	r31, 0x0629	; 0x800629 <Serial+0x17>
    3d38:	82 fd       	sbrc	r24, 2
    3d3a:	1b c0       	rjmp	.+54     	; 0x3d72 <__vector_18+0x60>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    3d3c:	90 81       	ld	r25, Z
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3d3e:	80 91 2b 06 	lds	r24, 0x062B	; 0x80062b <Serial+0x19>
    3d42:	8f 5f       	subi	r24, 0xFF	; 255
    3d44:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    3d46:	20 91 2c 06 	lds	r18, 0x062C	; 0x80062c <Serial+0x1a>
    3d4a:	82 17       	cp	r24, r18
    3d4c:	41 f0       	breq	.+16     	; 0x3d5e <__vector_18+0x4c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    3d4e:	e0 91 2b 06 	lds	r30, 0x062B	; 0x80062b <Serial+0x19>
    3d52:	f0 e0       	ldi	r31, 0x00	; 0
    3d54:	ee 5e       	subi	r30, 0xEE	; 238
    3d56:	f9 4f       	sbci	r31, 0xF9	; 249
    3d58:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    3d5a:	80 93 2b 06 	sts	0x062B, r24	; 0x80062b <Serial+0x19>
__vector_18():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:52
    Serial._rx_complete_irq();
  }
    3d5e:	ff 91       	pop	r31
    3d60:	ef 91       	pop	r30
    3d62:	9f 91       	pop	r25
    3d64:	8f 91       	pop	r24
    3d66:	2f 91       	pop	r18
    3d68:	0f 90       	pop	r0
    3d6a:	0f be       	out	0x3f, r0	; 63
    3d6c:	0f 90       	pop	r0
    3d6e:	1f 90       	pop	r1
    3d70:	18 95       	reti
_ZN14HardwareSerial16_rx_complete_irqEv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    3d72:	80 81       	ld	r24, Z
__vector_18():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:52
    3d74:	f4 cf       	rjmp	.-24     	; 0x3d5e <__vector_18+0x4c>

00003d76 <__vector_19>:
__vector_19():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:63
#elif defined(USART0_UDRE_vect)
ISR(USART0_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    3d76:	1f 92       	push	r1
    3d78:	0f 92       	push	r0
    3d7a:	0f b6       	in	r0, 0x3f	; 63
    3d7c:	0f 92       	push	r0
    3d7e:	11 24       	eor	r1, r1
    3d80:	2f 93       	push	r18
    3d82:	3f 93       	push	r19
    3d84:	4f 93       	push	r20
    3d86:	5f 93       	push	r21
    3d88:	6f 93       	push	r22
    3d8a:	7f 93       	push	r23
    3d8c:	8f 93       	push	r24
    3d8e:	9f 93       	push	r25
    3d90:	af 93       	push	r26
    3d92:	bf 93       	push	r27
    3d94:	ef 93       	push	r30
    3d96:	ff 93       	push	r31
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
    3d98:	82 e1       	ldi	r24, 0x12	; 18
    3d9a:	96 e0       	ldi	r25, 0x06	; 6
    3d9c:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:65
}
    3da0:	ff 91       	pop	r31
    3da2:	ef 91       	pop	r30
    3da4:	bf 91       	pop	r27
    3da6:	af 91       	pop	r26
    3da8:	9f 91       	pop	r25
    3daa:	8f 91       	pop	r24
    3dac:	7f 91       	pop	r23
    3dae:	6f 91       	pop	r22
    3db0:	5f 91       	pop	r21
    3db2:	4f 91       	pop	r20
    3db4:	3f 91       	pop	r19
    3db6:	2f 91       	pop	r18
    3db8:	0f 90       	pop	r0
    3dba:	0f be       	out	0x3f, r0	; 63
    3dbc:	0f 90       	pop	r0
    3dbe:	1f 90       	pop	r1
    3dc0:	18 95       	reti

00003dc2 <Serial0_available()>:
_Z17Serial0_availablev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    3dc2:	82 e1       	ldi	r24, 0x12	; 18
    3dc4:	96 e0       	ldi	r25, 0x06	; 6
    3dc6:	0e 94 57 1d 	call	0x3aae	; 0x3aae <HardwareSerial::available()>
    3dca:	21 e0       	ldi	r18, 0x01	; 1
    3dcc:	89 2b       	or	r24, r25
    3dce:	09 f4       	brne	.+2      	; 0x3dd2 <Serial0_available()+0x10>
    3dd0:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:77
}
    3dd2:	82 2f       	mov	r24, r18
    3dd4:	08 95       	ret

00003dd6 <_GLOBAL__sub_I___vector_18>:
_ZN5PrintC4Ev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.h:46
    3dd6:	e2 e1       	ldi	r30, 0x12	; 18
    3dd8:	f6 e0       	ldi	r31, 0x06	; 6
    3dda:	13 82       	std	Z+3, r1	; 0x03
    3ddc:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Stream.h:63
    3dde:	88 ee       	ldi	r24, 0xE8	; 232
    3de0:	93 e0       	ldi	r25, 0x03	; 3
    3de2:	a0 e0       	ldi	r26, 0x00	; 0
    3de4:	b0 e0       	ldi	r27, 0x00	; 0
    3de6:	84 83       	std	Z+4, r24	; 0x04
    3de8:	95 83       	std	Z+5, r25	; 0x05
    3dea:	a6 83       	std	Z+6, r26	; 0x06
    3dec:	b7 83       	std	Z+7, r27	; 0x07
_ZN14HardwareSerialC4EPVhS1_S1_S1_S1_S1_():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial_private.h:92
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    3dee:	8e e2       	ldi	r24, 0x2E	; 46
    3df0:	93 e0       	ldi	r25, 0x03	; 3
    3df2:	91 83       	std	Z+1, r25	; 0x01
    3df4:	80 83       	st	Z, r24
    3df6:	85 ec       	ldi	r24, 0xC5	; 197
    3df8:	90 e0       	ldi	r25, 0x00	; 0
    3dfa:	95 87       	std	Z+13, r25	; 0x0d
    3dfc:	84 87       	std	Z+12, r24	; 0x0c
    3dfe:	84 ec       	ldi	r24, 0xC4	; 196
    3e00:	90 e0       	ldi	r25, 0x00	; 0
    3e02:	97 87       	std	Z+15, r25	; 0x0f
    3e04:	86 87       	std	Z+14, r24	; 0x0e
    3e06:	80 ec       	ldi	r24, 0xC0	; 192
    3e08:	90 e0       	ldi	r25, 0x00	; 0
    3e0a:	91 8b       	std	Z+17, r25	; 0x11
    3e0c:	80 8b       	std	Z+16, r24	; 0x10
    3e0e:	81 ec       	ldi	r24, 0xC1	; 193
    3e10:	90 e0       	ldi	r25, 0x00	; 0
    3e12:	93 8b       	std	Z+19, r25	; 0x13
    3e14:	82 8b       	std	Z+18, r24	; 0x12
    3e16:	82 ec       	ldi	r24, 0xC2	; 194
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	95 8b       	std	Z+21, r25	; 0x15
    3e1c:	84 8b       	std	Z+20, r24	; 0x14
    3e1e:	86 ec       	ldi	r24, 0xC6	; 198
    3e20:	90 e0       	ldi	r25, 0x00	; 0
    3e22:	97 8b       	std	Z+23, r25	; 0x17
    3e24:	86 8b       	std	Z+22, r24	; 0x16
    3e26:	11 8e       	std	Z+25, r1	; 0x19
    3e28:	12 8e       	std	Z+26, r1	; 0x1a
    3e2a:	13 8e       	std	Z+27, r1	; 0x1b
    3e2c:	14 8e       	std	Z+28, r1	; 0x1c
_GLOBAL__sub_I___vector_18():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/HardwareSerial0.cpp:77
    3e2e:	08 95       	ret

00003e30 <initVariant>:
initVariant():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:28
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }
    3e30:	08 95       	ret

00003e32 <main>:
main():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:35
//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
  init();
    3e32:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <init>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:37

  initVariant();
    3e36:	0e 94 18 1f 	call	0x3e30	; 0x3e30 <initVariant>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:43

#if defined(USBCON)
  USBDevice.attach();
#endif
  
  setup();
    3e3a:	0e 94 99 0b 	call	0x1732	; 0x1732 <setup>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:47
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    3e3e:	c4 e9       	ldi	r28, 0x94	; 148
    3e40:	dd e1       	ldi	r29, 0x1D	; 29
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:46
#endif
  
  setup();
    
  for (;;) {
    loop();
    3e42:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <loop>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:47
    if (serialEventRun) serialEventRun();
    3e46:	20 97       	sbiw	r28, 0x00	; 0
    3e48:	e1 f3       	breq	.-8      	; 0x3e42 <main+0x10>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/main.cpp:47 (discriminator 1)
    3e4a:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <serialEventRun()>
    3e4e:	f9 cf       	rjmp	.-14     	; 0x3e42 <main+0x10>

00003e50 <operator delete(void*)>:
_ZdlPv():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/new.cpp:91

[[gnu::weak]] void operator delete(void * ptr) noexcept {
  free(ptr);
}
[[gnu::weak]] void operator delete[](void * ptr) noexcept {
  operator delete(ptr);
    3e50:	0c 94 42 26 	jmp	0x4c84	; 0x4c84 <free>

00003e54 <operator delete(void*, unsigned int)>:
_ZdlPvj():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/new.cpp:96
}

#if __cplusplus >= 201402L
[[gnu::weak]] void operator delete(void* ptr, [[gnu::unused]] std::size_t size) noexcept {
  operator delete(ptr);
    3e54:	0c 94 28 1f 	jmp	0x3e50	; 0x3e50 <operator delete(void*)>

00003e58 <Print::write(unsigned char const*, unsigned int)>:
_ZN5Print5writeEPKhj():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:171
size_t Print::println(unsigned int num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3e58:	af 92       	push	r10
    3e5a:	bf 92       	push	r11
    3e5c:	cf 92       	push	r12
    3e5e:	df 92       	push	r13
    3e60:	ef 92       	push	r14
    3e62:	ff 92       	push	r15
    3e64:	0f 93       	push	r16
    3e66:	1f 93       	push	r17
    3e68:	cf 93       	push	r28
    3e6a:	df 93       	push	r29
    3e6c:	6c 01       	movw	r12, r24
    3e6e:	7b 01       	movw	r14, r22
    3e70:	8b 01       	movw	r16, r22
    3e72:	04 0f       	add	r16, r20
    3e74:	15 1f       	adc	r17, r21
    3e76:	eb 01       	movw	r28, r22
    3e78:	5e 01       	movw	r10, r28
    3e7a:	ae 18       	sub	r10, r14
    3e7c:	bf 08       	sbc	r11, r15
    3e7e:	c0 17       	cp	r28, r16
    3e80:	d1 07       	cpc	r29, r17
    3e82:	59 f0       	breq	.+22     	; 0x3e9a <Print::write(unsigned char const*, unsigned int)+0x42>
    3e84:	69 91       	ld	r22, Y+
    3e86:	d6 01       	movw	r26, r12
    3e88:	ed 91       	ld	r30, X+
    3e8a:	fc 91       	ld	r31, X
    3e8c:	01 90       	ld	r0, Z+
    3e8e:	f0 81       	ld	r31, Z
    3e90:	e0 2d       	mov	r30, r0
    3e92:	c6 01       	movw	r24, r12
    3e94:	09 95       	icall
    3e96:	89 2b       	or	r24, r25
    3e98:	79 f7       	brne	.-34     	; 0x3e78 <Print::write(unsigned char const*, unsigned int)+0x20>
    3e9a:	c5 01       	movw	r24, r10
    3e9c:	df 91       	pop	r29
    3e9e:	cf 91       	pop	r28
    3ea0:	1f 91       	pop	r17
    3ea2:	0f 91       	pop	r16
    3ea4:	ff 90       	pop	r15
    3ea6:	ef 90       	pop	r14
    3ea8:	df 90       	pop	r13
    3eaa:	cf 90       	pop	r12
    3eac:	bf 90       	pop	r11
    3eae:	af 90       	pop	r10
    3eb0:	08 95       	ret

00003eb2 <Print::write(char const*) [clone .part.2]>:
_ZN5Print5writeEPKc():
    3eb2:	fb 01       	movw	r30, r22
    3eb4:	01 90       	ld	r0, Z+
    3eb6:	00 20       	and	r0, r0
    3eb8:	e9 f7       	brne	.-6      	; 0x3eb4 <Print::write(char const*) [clone .part.2]+0x2>
    3eba:	31 97       	sbiw	r30, 0x01	; 1
    3ebc:	af 01       	movw	r20, r30
    3ebe:	46 1b       	sub	r20, r22
    3ec0:	57 0b       	sbc	r21, r23
    3ec2:	dc 01       	movw	r26, r24
    3ec4:	ed 91       	ld	r30, X+
    3ec6:	fc 91       	ld	r31, X
    3ec8:	02 80       	ldd	r0, Z+2	; 0x02
    3eca:	f3 81       	ldd	r31, Z+3	; 0x03
    3ecc:	e0 2d       	mov	r30, r0
    3ece:	09 94       	ijmp

00003ed0 <Print::print(char const*)>:
    3ed0:	61 15       	cp	r22, r1
    3ed2:	71 05       	cpc	r23, r1
    3ed4:	11 f0       	breq	.+4      	; 0x3eda <Print::print(char const*)+0xa>
    3ed6:	0c 94 59 1f 	jmp	0x3eb2	; 0x3eb2 <Print::write(char const*) [clone .part.2]>
_ZN5Print5printEPKc():
    3eda:	90 e0       	ldi	r25, 0x00	; 0
    3edc:	80 e0       	ldi	r24, 0x00	; 0
    3ede:	08 95       	ret

00003ee0 <Print::print(char)>:
_ZN5Print5printEc():
    3ee0:	dc 01       	movw	r26, r24
    3ee2:	ed 91       	ld	r30, X+
    3ee4:	fc 91       	ld	r31, X
    3ee6:	01 90       	ld	r0, Z+
    3ee8:	f0 81       	ld	r31, Z
    3eea:	e0 2d       	mov	r30, r0
    3eec:	09 94       	ijmp

00003eee <Print::println()>:
_ZN5Print5writeEPKc():
    3eee:	6c e3       	ldi	r22, 0x3C	; 60
    3ef0:	73 e0       	ldi	r23, 0x03	; 3
    3ef2:	0c 94 59 1f 	jmp	0x3eb2	; 0x3eb2 <Print::write(char const*) [clone .part.2]>

00003ef6 <Print::println(char const*)>:
_ZN5Print7printlnEPKc():
    3ef6:	0f 93       	push	r16
    3ef8:	1f 93       	push	r17
    3efa:	cf 93       	push	r28
    3efc:	df 93       	push	r29
    3efe:	8c 01       	movw	r16, r24
_ZN5Print5writeEPKc():
    3f00:	d0 e0       	ldi	r29, 0x00	; 0
    3f02:	c0 e0       	ldi	r28, 0x00	; 0
    3f04:	61 15       	cp	r22, r1
    3f06:	71 05       	cpc	r23, r1
    3f08:	19 f0       	breq	.+6      	; 0x3f10 <Print::println(char const*)+0x1a>
    3f0a:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <Print::write(char const*) [clone .part.2]>
    3f0e:	ec 01       	movw	r28, r24
_ZN5Print7printlnEPKc():
    3f10:	c8 01       	movw	r24, r16
    3f12:	0e 94 77 1f 	call	0x3eee	; 0x3eee <Print::println()>
    3f16:	8c 0f       	add	r24, r28
    3f18:	9d 1f       	adc	r25, r29
    3f1a:	df 91       	pop	r29
    3f1c:	cf 91       	pop	r28
    3f1e:	1f 91       	pop	r17
    3f20:	0f 91       	pop	r16
    3f22:	08 95       	ret

00003f24 <Print::printNumber(unsigned long, unsigned char)>:
_ZN5Print11printNumberEmh():
    3f24:	8f 92       	push	r8
    3f26:	9f 92       	push	r9
    3f28:	af 92       	push	r10
    3f2a:	bf 92       	push	r11
    3f2c:	ef 92       	push	r14
    3f2e:	ff 92       	push	r15
    3f30:	0f 93       	push	r16
    3f32:	1f 93       	push	r17
    3f34:	cf 93       	push	r28
    3f36:	df 93       	push	r29
    3f38:	cd b7       	in	r28, 0x3d	; 61
    3f3a:	de b7       	in	r29, 0x3e	; 62
    3f3c:	a1 97       	sbiw	r28, 0x21	; 33
    3f3e:	0f b6       	in	r0, 0x3f	; 63
    3f40:	f8 94       	cli
    3f42:	de bf       	out	0x3e, r29	; 62
    3f44:	0f be       	out	0x3f, r0	; 63
    3f46:	cd bf       	out	0x3d, r28	; 61
    3f48:	7c 01       	movw	r14, r24
    3f4a:	fa 01       	movw	r30, r20
    3f4c:	cb 01       	movw	r24, r22
    3f4e:	19 a2       	std	Y+33, r1	; 0x21
    3f50:	22 30       	cpi	r18, 0x02	; 2
    3f52:	08 f4       	brcc	.+2      	; 0x3f56 <Print::printNumber(unsigned long, unsigned char)+0x32>
    3f54:	2a e0       	ldi	r18, 0x0A	; 10
    3f56:	8e 01       	movw	r16, r28
    3f58:	0f 5d       	subi	r16, 0xDF	; 223
    3f5a:	1f 4f       	sbci	r17, 0xFF	; 255
    3f5c:	82 2e       	mov	r8, r18
    3f5e:	91 2c       	mov	r9, r1
    3f60:	b1 2c       	mov	r11, r1
    3f62:	a1 2c       	mov	r10, r1
    3f64:	bf 01       	movw	r22, r30
    3f66:	a5 01       	movw	r20, r10
    3f68:	94 01       	movw	r18, r8
    3f6a:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <__udivmodsi4>
    3f6e:	f9 01       	movw	r30, r18
    3f70:	ca 01       	movw	r24, r20
    3f72:	6a 30       	cpi	r22, 0x0A	; 10
    3f74:	0c f5       	brge	.+66     	; 0x3fb8 <Print::printNumber(unsigned long, unsigned char)+0x94>
    3f76:	60 5d       	subi	r22, 0xD0	; 208
    3f78:	d8 01       	movw	r26, r16
    3f7a:	6e 93       	st	-X, r22
    3f7c:	8d 01       	movw	r16, r26
    3f7e:	23 2b       	or	r18, r19
    3f80:	24 2b       	or	r18, r20
    3f82:	25 2b       	or	r18, r21
    3f84:	79 f7       	brne	.-34     	; 0x3f64 <Print::printNumber(unsigned long, unsigned char)+0x40>
_ZN5Print5writeEPKc():
    3f86:	90 e0       	ldi	r25, 0x00	; 0
    3f88:	80 e0       	ldi	r24, 0x00	; 0
    3f8a:	10 97       	sbiw	r26, 0x00	; 0
    3f8c:	21 f0       	breq	.+8      	; 0x3f96 <Print::printNumber(unsigned long, unsigned char)+0x72>
    3f8e:	bd 01       	movw	r22, r26
    3f90:	c7 01       	movw	r24, r14
    3f92:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <Print::write(char const*) [clone .part.2]>
_ZN5Print11printNumberEmh():
    3f96:	a1 96       	adiw	r28, 0x21	; 33
    3f98:	0f b6       	in	r0, 0x3f	; 63
    3f9a:	f8 94       	cli
    3f9c:	de bf       	out	0x3e, r29	; 62
    3f9e:	0f be       	out	0x3f, r0	; 63
    3fa0:	cd bf       	out	0x3d, r28	; 61
    3fa2:	df 91       	pop	r29
    3fa4:	cf 91       	pop	r28
    3fa6:	1f 91       	pop	r17
    3fa8:	0f 91       	pop	r16
    3faa:	ff 90       	pop	r15
    3fac:	ef 90       	pop	r14
    3fae:	bf 90       	pop	r11
    3fb0:	af 90       	pop	r10
    3fb2:	9f 90       	pop	r9
    3fb4:	8f 90       	pop	r8
    3fb6:	08 95       	ret
    3fb8:	69 5c       	subi	r22, 0xC9	; 201
    3fba:	de cf       	rjmp	.-68     	; 0x3f78 <Print::printNumber(unsigned long, unsigned char)+0x54>

00003fbc <Print::print(long, int)>:
_ZN5Print5printEli():
    3fbc:	cf 92       	push	r12
    3fbe:	df 92       	push	r13
    3fc0:	ef 92       	push	r14
    3fc2:	ff 92       	push	r15
    3fc4:	0f 93       	push	r16
    3fc6:	1f 93       	push	r17
    3fc8:	cf 93       	push	r28
    3fca:	df 93       	push	r29
    3fcc:	21 15       	cp	r18, r1
    3fce:	31 05       	cpc	r19, r1
    3fd0:	81 f4       	brne	.+32     	; 0x3ff2 <Print::print(long, int)+0x36>
    3fd2:	dc 01       	movw	r26, r24
    3fd4:	ed 91       	ld	r30, X+
    3fd6:	fc 91       	ld	r31, X
    3fd8:	01 90       	ld	r0, Z+
    3fda:	f0 81       	ld	r31, Z
    3fdc:	e0 2d       	mov	r30, r0
    3fde:	64 2f       	mov	r22, r20
    3fe0:	df 91       	pop	r29
    3fe2:	cf 91       	pop	r28
    3fe4:	1f 91       	pop	r17
    3fe6:	0f 91       	pop	r16
    3fe8:	ff 90       	pop	r15
    3fea:	ef 90       	pop	r14
    3fec:	df 90       	pop	r13
    3fee:	cf 90       	pop	r12
    3ff0:	09 94       	ijmp
    3ff2:	2a 30       	cpi	r18, 0x0A	; 10
    3ff4:	31 05       	cpc	r19, r1
    3ff6:	01 f5       	brne	.+64     	; 0x4038 <Print::print(long, int)+0x7c>
    3ff8:	2a e0       	ldi	r18, 0x0A	; 10
    3ffa:	77 ff       	sbrs	r23, 7
    3ffc:	1d c0       	rjmp	.+58     	; 0x4038 <Print::print(long, int)+0x7c>
    3ffe:	6a 01       	movw	r12, r20
    4000:	7b 01       	movw	r14, r22
    4002:	ec 01       	movw	r28, r24
    4004:	6d e2       	ldi	r22, 0x2D	; 45
    4006:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <Print::print(char)>
    400a:	8c 01       	movw	r16, r24
    400c:	44 27       	eor	r20, r20
    400e:	55 27       	eor	r21, r21
    4010:	ba 01       	movw	r22, r20
    4012:	4c 19       	sub	r20, r12
    4014:	5d 09       	sbc	r21, r13
    4016:	6e 09       	sbc	r22, r14
    4018:	7f 09       	sbc	r23, r15
    401a:	2a e0       	ldi	r18, 0x0A	; 10
    401c:	ce 01       	movw	r24, r28
    401e:	0e 94 92 1f 	call	0x3f24	; 0x3f24 <Print::printNumber(unsigned long, unsigned char)>
    4022:	80 0f       	add	r24, r16
    4024:	91 1f       	adc	r25, r17
    4026:	df 91       	pop	r29
    4028:	cf 91       	pop	r28
    402a:	1f 91       	pop	r17
    402c:	0f 91       	pop	r16
    402e:	ff 90       	pop	r15
    4030:	ef 90       	pop	r14
    4032:	df 90       	pop	r13
    4034:	cf 90       	pop	r12
    4036:	08 95       	ret
    4038:	df 91       	pop	r29
    403a:	cf 91       	pop	r28
    403c:	1f 91       	pop	r17
    403e:	0f 91       	pop	r16
    4040:	ff 90       	pop	r15
    4042:	ef 90       	pop	r14
    4044:	df 90       	pop	r13
    4046:	cf 90       	pop	r12
    4048:	0c 94 92 1f 	jmp	0x3f24	; 0x3f24 <Print::printNumber(unsigned long, unsigned char)>

0000404c <Print::print(int, int)>:
_ZN5Print5printEii():
    404c:	9a 01       	movw	r18, r20
    404e:	ab 01       	movw	r20, r22
    4050:	77 0f       	add	r23, r23
    4052:	66 0b       	sbc	r22, r22
    4054:	77 0b       	sbc	r23, r23
    4056:	0c 94 de 1f 	jmp	0x3fbc	; 0x3fbc <Print::print(long, int)>

0000405a <Print::println(int, int)>:
_ZN5Print7printlnEii():
    405a:	0f 93       	push	r16
    405c:	1f 93       	push	r17
    405e:	cf 93       	push	r28
    4060:	df 93       	push	r29
    4062:	ec 01       	movw	r28, r24
    4064:	0e 94 26 20 	call	0x404c	; 0x404c <Print::print(int, int)>
    4068:	8c 01       	movw	r16, r24
    406a:	ce 01       	movw	r24, r28
    406c:	0e 94 77 1f 	call	0x3eee	; 0x3eee <Print::println()>
    4070:	80 0f       	add	r24, r16
    4072:	91 1f       	adc	r25, r17
    4074:	df 91       	pop	r29
    4076:	cf 91       	pop	r28
    4078:	1f 91       	pop	r17
    407a:	0f 91       	pop	r16
    407c:	08 95       	ret

0000407e <Print::print(unsigned long, int)>:
_ZN5Print5printEmi():
    407e:	21 15       	cp	r18, r1
    4080:	31 05       	cpc	r19, r1
    4082:	41 f4       	brne	.+16     	; 0x4094 <Print::print(unsigned long, int)+0x16>
    4084:	dc 01       	movw	r26, r24
    4086:	ed 91       	ld	r30, X+
    4088:	fc 91       	ld	r31, X
    408a:	01 90       	ld	r0, Z+
    408c:	f0 81       	ld	r31, Z
    408e:	e0 2d       	mov	r30, r0
    4090:	64 2f       	mov	r22, r20
    4092:	09 94       	ijmp
    4094:	0c 94 92 1f 	jmp	0x3f24	; 0x3f24 <Print::printNumber(unsigned long, unsigned char)>

00004098 <Print::print(unsigned char, int)>:
_ZN5Print5printEhi():
    4098:	9a 01       	movw	r18, r20
    409a:	46 2f       	mov	r20, r22
    409c:	50 e0       	ldi	r21, 0x00	; 0
    409e:	70 e0       	ldi	r23, 0x00	; 0
    40a0:	60 e0       	ldi	r22, 0x00	; 0
    40a2:	0c 94 3f 20 	jmp	0x407e	; 0x407e <Print::print(unsigned long, int)>

000040a6 <Print::print(unsigned int, int)>:
_ZN5Print5printEji():
    40a6:	9a 01       	movw	r18, r20
    40a8:	ab 01       	movw	r20, r22
    40aa:	70 e0       	ldi	r23, 0x00	; 0
    40ac:	60 e0       	ldi	r22, 0x00	; 0
    40ae:	0c 94 3f 20 	jmp	0x407e	; 0x407e <Print::print(unsigned long, int)>

000040b2 <Print::println(unsigned long, int)>:
_ZN5Print7printlnEmi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:181
  n += println();
  return n;
}

size_t Print::println(unsigned long num, int base)
{
    40b2:	0f 93       	push	r16
    40b4:	1f 93       	push	r17
    40b6:	cf 93       	push	r28
    40b8:	df 93       	push	r29
    40ba:	ec 01       	movw	r28, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:182
  size_t n = print(num, base);
    40bc:	0e 94 3f 20 	call	0x407e	; 0x407e <Print::print(unsigned long, int)>
    40c0:	8c 01       	movw	r16, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:183
  n += println();
    40c2:	ce 01       	movw	r24, r28
    40c4:	0e 94 77 1f 	call	0x3eee	; 0x3eee <Print::println()>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:185
  return n;
}
    40c8:	80 0f       	add	r24, r16
    40ca:	91 1f       	adc	r25, r17
    40cc:	df 91       	pop	r29
    40ce:	cf 91       	pop	r28
    40d0:	1f 91       	pop	r17
    40d2:	0f 91       	pop	r16
    40d4:	08 95       	ret

000040d6 <Print::printFloat(double, unsigned char)>:
_ZN5Print10printFloatEdh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:253

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    40d6:	2f 92       	push	r2
    40d8:	3f 92       	push	r3
    40da:	4f 92       	push	r4
    40dc:	5f 92       	push	r5
    40de:	6f 92       	push	r6
    40e0:	7f 92       	push	r7
    40e2:	8f 92       	push	r8
    40e4:	9f 92       	push	r9
    40e6:	af 92       	push	r10
    40e8:	bf 92       	push	r11
    40ea:	cf 92       	push	r12
    40ec:	df 92       	push	r13
    40ee:	ef 92       	push	r14
    40f0:	ff 92       	push	r15
    40f2:	1f 93       	push	r17
    40f4:	cf 93       	push	r28
    40f6:	df 93       	push	r29
    40f8:	ec 01       	movw	r28, r24
    40fa:	6a 01       	movw	r12, r20
    40fc:	7b 01       	movw	r14, r22
    40fe:	72 2e       	mov	r7, r18
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:256
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    4100:	ab 01       	movw	r20, r22
    4102:	96 01       	movw	r18, r12
    4104:	cb 01       	movw	r24, r22
    4106:	b6 01       	movw	r22, r12
    4108:	0e 94 f2 23 	call	0x47e4	; 0x47e4 <__unordsf2>
_ZN5Print5writeEPKc():
    410c:	6f e3       	ldi	r22, 0x3F	; 63
    410e:	73 e0       	ldi	r23, 0x03	; 3
_ZN5Print10printFloatEdh():
    4110:	81 11       	cpse	r24, r1
    4112:	26 c0       	rjmp	.+76     	; 0x4160 <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:257
  if (isinf(number)) return print("inf");
    4114:	46 01       	movw	r8, r12
    4116:	57 01       	movw	r10, r14
    4118:	e8 94       	clt
    411a:	b7 f8       	bld	r11, 7
    411c:	2f ef       	ldi	r18, 0xFF	; 255
    411e:	3f ef       	ldi	r19, 0xFF	; 255
    4120:	4f e7       	ldi	r20, 0x7F	; 127
    4122:	5f e7       	ldi	r21, 0x7F	; 127
    4124:	c5 01       	movw	r24, r10
    4126:	b4 01       	movw	r22, r8
    4128:	0e 94 f2 23 	call	0x47e4	; 0x47e4 <__unordsf2>
    412c:	81 11       	cpse	r24, r1
    412e:	0c c0       	rjmp	.+24     	; 0x4148 <Print::printFloat(double, unsigned char)+0x72>
    4130:	2f ef       	ldi	r18, 0xFF	; 255
    4132:	3f ef       	ldi	r19, 0xFF	; 255
    4134:	4f e7       	ldi	r20, 0x7F	; 127
    4136:	5f e7       	ldi	r21, 0x7F	; 127
    4138:	c5 01       	movw	r24, r10
    413a:	b4 01       	movw	r22, r8
    413c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <__cmpsf2>
_ZN5Print5writeEPKc():
    4140:	63 e4       	ldi	r22, 0x43	; 67
    4142:	73 e0       	ldi	r23, 0x03	; 3
_ZN5Print10printFloatEdh():
    4144:	18 16       	cp	r1, r24
    4146:	64 f0       	brlt	.+24     	; 0x4160 <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:258
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    4148:	2f ef       	ldi	r18, 0xFF	; 255
    414a:	3f ef       	ldi	r19, 0xFF	; 255
    414c:	4f e7       	ldi	r20, 0x7F	; 127
    414e:	5f e4       	ldi	r21, 0x4F	; 79
    4150:	c7 01       	movw	r24, r14
    4152:	b6 01       	movw	r22, r12
    4154:	0e 94 30 23 	call	0x4660	; 0x4660 <__gesf2>
    4158:	18 16       	cp	r1, r24
    415a:	b4 f4       	brge	.+44     	; 0x4188 <Print::printFloat(double, unsigned char)+0xb2>
_ZN5Print5writeEPKc():
    415c:	67 e4       	ldi	r22, 0x47	; 71
    415e:	73 e0       	ldi	r23, 0x03	; 3
    4160:	ce 01       	movw	r24, r28
_ZN5Print10printFloatEdh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:295
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    4162:	df 91       	pop	r29
    4164:	cf 91       	pop	r28
    4166:	1f 91       	pop	r17
    4168:	ff 90       	pop	r15
    416a:	ef 90       	pop	r14
    416c:	df 90       	pop	r13
    416e:	cf 90       	pop	r12
    4170:	bf 90       	pop	r11
    4172:	af 90       	pop	r10
    4174:	9f 90       	pop	r9
    4176:	8f 90       	pop	r8
    4178:	7f 90       	pop	r7
    417a:	6f 90       	pop	r6
    417c:	5f 90       	pop	r5
    417e:	4f 90       	pop	r4
    4180:	3f 90       	pop	r3
    4182:	2f 90       	pop	r2
_ZN5Print5writeEPKc():
    4184:	0c 94 59 1f 	jmp	0x3eb2	; 0x3eb2 <Print::write(char const*) [clone .part.2]>
_ZN5Print10printFloatEdh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:259
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    4188:	2f ef       	ldi	r18, 0xFF	; 255
    418a:	3f ef       	ldi	r19, 0xFF	; 255
    418c:	4f e7       	ldi	r20, 0x7F	; 127
    418e:	5f ec       	ldi	r21, 0xCF	; 207
    4190:	c7 01       	movw	r24, r14
    4192:	b6 01       	movw	r22, r12
    4194:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <__cmpsf2>
    4198:	87 fd       	sbrc	r24, 7
    419a:	e0 cf       	rjmp	.-64     	; 0x415c <Print::printFloat(double, unsigned char)+0x86>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:262
  
  // Handle negative numbers
  if (number < 0.0)
    419c:	20 e0       	ldi	r18, 0x00	; 0
    419e:	30 e0       	ldi	r19, 0x00	; 0
    41a0:	a9 01       	movw	r20, r18
    41a2:	c7 01       	movw	r24, r14
    41a4:	b6 01       	movw	r22, r12
    41a6:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <__cmpsf2>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:254
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    41aa:	31 2c       	mov	r3, r1
    41ac:	21 2c       	mov	r2, r1
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:262
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
  
  // Handle negative numbers
  if (number < 0.0)
    41ae:	87 ff       	sbrs	r24, 7
    41b0:	09 c0       	rjmp	.+18     	; 0x41c4 <Print::printFloat(double, unsigned char)+0xee>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:264
  {
     n += print('-');
    41b2:	6d e2       	ldi	r22, 0x2D	; 45
    41b4:	ce 01       	movw	r24, r28
    41b6:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <Print::print(char)>
    41ba:	1c 01       	movw	r2, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:265
     number = -number;
    41bc:	f7 fa       	bst	r15, 7
    41be:	f0 94       	com	r15
    41c0:	f7 f8       	bld	r15, 7
    41c2:	f0 94       	com	r15
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:270
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    41c4:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:269
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    41c6:	60 e0       	ldi	r22, 0x00	; 0
    41c8:	70 e0       	ldi	r23, 0x00	; 0
    41ca:	80 e0       	ldi	r24, 0x00	; 0
    41cc:	9f e3       	ldi	r25, 0x3F	; 63
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:270
  for (uint8_t i=0; i<digits; ++i)
    41ce:	71 16       	cp	r7, r17
    41d0:	41 f0       	breq	.+16     	; 0x41e2 <Print::printFloat(double, unsigned char)+0x10c>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:271
    rounding /= 10.0;
    41d2:	20 e0       	ldi	r18, 0x00	; 0
    41d4:	30 e0       	ldi	r19, 0x00	; 0
    41d6:	40 e2       	ldi	r20, 0x20	; 32
    41d8:	51 e4       	ldi	r21, 0x41	; 65
    41da:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__divsf3>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:270
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    41de:	1f 5f       	subi	r17, 0xFF	; 255
    41e0:	f6 cf       	rjmp	.-20     	; 0x41ce <Print::printFloat(double, unsigned char)+0xf8>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:273
    rounding /= 10.0;
  
  number += rounding;
    41e2:	a7 01       	movw	r20, r14
    41e4:	96 01       	movw	r18, r12
    41e6:	0e 94 65 21 	call	0x42ca	; 0x42ca <__addsf3>
    41ea:	2b 01       	movw	r4, r22
    41ec:	3c 01       	movw	r6, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:276

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    41ee:	0e 94 4f 22 	call	0x449e	; 0x449e <__fixunssfsi>
    41f2:	4b 01       	movw	r8, r22
    41f4:	5c 01       	movw	r10, r24
_ZN5Print5printEmi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:106
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    41f6:	2a e0       	ldi	r18, 0x0A	; 10
    41f8:	bc 01       	movw	r22, r24
    41fa:	a4 01       	movw	r20, r8
    41fc:	ce 01       	movw	r24, r28
    41fe:	0e 94 92 1f 	call	0x3f24	; 0x3f24 <Print::printNumber(unsigned long, unsigned char)>
_ZN5Print10printFloatEdh():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:278
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    4202:	7c 01       	movw	r14, r24
    4204:	e2 0c       	add	r14, r2
    4206:	f3 1c       	adc	r15, r3
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:281

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    4208:	11 23       	and	r17, r17
    420a:	b1 f1       	breq	.+108    	; 0x4278 <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:277
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    420c:	c5 01       	movw	r24, r10
    420e:	b4 01       	movw	r22, r8
    4210:	0e 94 7e 22 	call	0x44fc	; 0x44fc <__floatunsisf>
    4214:	9b 01       	movw	r18, r22
    4216:	ac 01       	movw	r20, r24
    4218:	c3 01       	movw	r24, r6
    421a:	b2 01       	movw	r22, r4
    421c:	0e 94 64 21 	call	0x42c8	; 0x42c8 <__subsf3>
    4220:	4b 01       	movw	r8, r22
    4222:	5c 01       	movw	r10, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:282
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    4224:	6e e2       	ldi	r22, 0x2E	; 46
    4226:	ce 01       	movw	r24, r28
    4228:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <Print::print(char)>
    422c:	e8 0e       	add	r14, r24
    422e:	f9 1e       	adc	r15, r25
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:286
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    4230:	11 50       	subi	r17, 0x01	; 1
    4232:	10 f1       	brcs	.+68     	; 0x4278 <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:288
  {
    remainder *= 10.0;
    4234:	20 e0       	ldi	r18, 0x00	; 0
    4236:	30 e0       	ldi	r19, 0x00	; 0
    4238:	40 e2       	ldi	r20, 0x20	; 32
    423a:	51 e4       	ldi	r21, 0x41	; 65
    423c:	c5 01       	movw	r24, r10
    423e:	b4 01       	movw	r22, r8
    4240:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    4244:	2b 01       	movw	r4, r22
    4246:	3c 01       	movw	r6, r24
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:289
    unsigned int toPrint = (unsigned int)(remainder);
    4248:	0e 94 4f 22 	call	0x449e	; 0x449e <__fixunssfsi>
    424c:	4b 01       	movw	r8, r22
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:290
    n += print(toPrint);
    424e:	4a e0       	ldi	r20, 0x0A	; 10
    4250:	50 e0       	ldi	r21, 0x00	; 0
    4252:	ce 01       	movw	r24, r28
    4254:	0e 94 53 20 	call	0x40a6	; 0x40a6 <Print::print(unsigned int, int)>
    4258:	e8 0e       	add	r14, r24
    425a:	f9 1e       	adc	r15, r25
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:291
    remainder -= toPrint; 
    425c:	b4 01       	movw	r22, r8
    425e:	90 e0       	ldi	r25, 0x00	; 0
    4260:	80 e0       	ldi	r24, 0x00	; 0
    4262:	0e 94 7e 22 	call	0x44fc	; 0x44fc <__floatunsisf>
    4266:	9b 01       	movw	r18, r22
    4268:	ac 01       	movw	r20, r24
    426a:	c3 01       	movw	r24, r6
    426c:	b2 01       	movw	r22, r4
    426e:	0e 94 64 21 	call	0x42c8	; 0x42c8 <__subsf3>
    4272:	4b 01       	movw	r8, r22
    4274:	5c 01       	movw	r10, r24
    4276:	dc cf       	rjmp	.-72     	; 0x4230 <Print::printFloat(double, unsigned char)+0x15a>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:295
  } 
  
  return n;
}
    4278:	c7 01       	movw	r24, r14
    427a:	df 91       	pop	r29
    427c:	cf 91       	pop	r28
    427e:	1f 91       	pop	r17
    4280:	ff 90       	pop	r15
    4282:	ef 90       	pop	r14
    4284:	df 90       	pop	r13
    4286:	cf 90       	pop	r12
    4288:	bf 90       	pop	r11
    428a:	af 90       	pop	r10
    428c:	9f 90       	pop	r9
    428e:	8f 90       	pop	r8
    4290:	7f 90       	pop	r7
    4292:	6f 90       	pop	r6
    4294:	5f 90       	pop	r5
    4296:	4f 90       	pop	r4
    4298:	3f 90       	pop	r3
    429a:	2f 90       	pop	r2
    429c:	08 95       	ret

0000429e <Print::print(double, int)>:
_ZN5Print5printEdi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:111
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    429e:	0c 94 6b 20 	jmp	0x40d6	; 0x40d6 <Print::printFloat(double, unsigned char)>

000042a2 <Print::println(double, int)>:
_ZN5Print7printlnEdi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:188
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
    42a2:	0f 93       	push	r16
    42a4:	1f 93       	push	r17
    42a6:	cf 93       	push	r28
    42a8:	df 93       	push	r29
    42aa:	ec 01       	movw	r28, r24
_ZN5Print5printEdi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:111
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    42ac:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <Print::printFloat(double, unsigned char)>
    42b0:	8c 01       	movw	r16, r24
_ZN5Print7printlnEdi():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:190
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
    42b2:	ce 01       	movw	r24, r28
    42b4:	0e 94 77 1f 	call	0x3eee	; 0x3eee <Print::println()>
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/Print.cpp:192
  return n;
}
    42b8:	80 0f       	add	r24, r16
    42ba:	91 1f       	adc	r25, r17
    42bc:	df 91       	pop	r29
    42be:	cf 91       	pop	r28
    42c0:	1f 91       	pop	r17
    42c2:	0f 91       	pop	r16
    42c4:	08 95       	ret

000042c6 <yield>:
__empty():
C:\Users\dlcks\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.2.1\cores\MCUdude_corefiles/hooks.c:30
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
  // Empty
}
    42c6:	08 95       	ret

000042c8 <__subsf3>:
__subsf3():
    42c8:	50 58       	subi	r21, 0x80	; 128

000042ca <__addsf3>:
    42ca:	bb 27       	eor	r27, r27
    42cc:	aa 27       	eor	r26, r26
    42ce:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__addsf3x>
    42d2:	0c 94 f6 22 	jmp	0x45ec	; 0x45ec <__fp_round>
__addsf3():
    42d6:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <__fp_pscA>
    42da:	38 f0       	brcs	.+14     	; 0x42ea <__addsf3+0x20>
    42dc:	0e 94 ef 22 	call	0x45de	; 0x45de <__fp_pscB>
    42e0:	20 f0       	brcs	.+8      	; 0x42ea <__addsf3+0x20>
    42e2:	39 f4       	brne	.+14     	; 0x42f2 <__addsf3+0x28>
    42e4:	9f 3f       	cpi	r25, 0xFF	; 255
    42e6:	19 f4       	brne	.+6      	; 0x42ee <__addsf3+0x24>
    42e8:	26 f4       	brtc	.+8      	; 0x42f2 <__addsf3+0x28>
    42ea:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>
    42ee:	0e f4       	brtc	.+2      	; 0x42f2 <__addsf3+0x28>
    42f0:	e0 95       	com	r30
    42f2:	e7 fb       	bst	r30, 7
    42f4:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>

000042f8 <__addsf3x>:
__addsf3x():
    42f8:	e9 2f       	mov	r30, r25
    42fa:	0e 94 07 23 	call	0x460e	; 0x460e <__fp_split3>
    42fe:	58 f3       	brcs	.-42     	; 0x42d6 <__addsf3+0xc>
    4300:	ba 17       	cp	r27, r26
    4302:	62 07       	cpc	r22, r18
    4304:	73 07       	cpc	r23, r19
    4306:	84 07       	cpc	r24, r20
    4308:	95 07       	cpc	r25, r21
    430a:	20 f0       	brcs	.+8      	; 0x4314 <__addsf3x+0x1c>
    430c:	79 f4       	brne	.+30     	; 0x432c <__addsf3x+0x34>
    430e:	a6 f5       	brtc	.+104    	; 0x4378 <__addsf3x+0x80>
    4310:	0c 94 29 23 	jmp	0x4652	; 0x4652 <__fp_zero>
    4314:	0e f4       	brtc	.+2      	; 0x4318 <__addsf3x+0x20>
    4316:	e0 95       	com	r30
    4318:	0b 2e       	mov	r0, r27
    431a:	ba 2f       	mov	r27, r26
    431c:	a0 2d       	mov	r26, r0
    431e:	0b 01       	movw	r0, r22
    4320:	b9 01       	movw	r22, r18
    4322:	90 01       	movw	r18, r0
    4324:	0c 01       	movw	r0, r24
    4326:	ca 01       	movw	r24, r20
    4328:	a0 01       	movw	r20, r0
    432a:	11 24       	eor	r1, r1
    432c:	ff 27       	eor	r31, r31
    432e:	59 1b       	sub	r21, r25
    4330:	99 f0       	breq	.+38     	; 0x4358 <__addsf3x+0x60>
    4332:	59 3f       	cpi	r21, 0xF9	; 249
    4334:	50 f4       	brcc	.+20     	; 0x434a <__addsf3x+0x52>
    4336:	50 3e       	cpi	r21, 0xE0	; 224
    4338:	68 f1       	brcs	.+90     	; 0x4394 <__addsf3x+0x9c>
    433a:	1a 16       	cp	r1, r26
    433c:	f0 40       	sbci	r31, 0x00	; 0
    433e:	a2 2f       	mov	r26, r18
    4340:	23 2f       	mov	r18, r19
    4342:	34 2f       	mov	r19, r20
    4344:	44 27       	eor	r20, r20
    4346:	58 5f       	subi	r21, 0xF8	; 248
    4348:	f3 cf       	rjmp	.-26     	; 0x4330 <__addsf3x+0x38>
    434a:	46 95       	lsr	r20
    434c:	37 95       	ror	r19
    434e:	27 95       	ror	r18
    4350:	a7 95       	ror	r26
    4352:	f0 40       	sbci	r31, 0x00	; 0
    4354:	53 95       	inc	r21
    4356:	c9 f7       	brne	.-14     	; 0x434a <__addsf3x+0x52>
    4358:	7e f4       	brtc	.+30     	; 0x4378 <__addsf3x+0x80>
    435a:	1f 16       	cp	r1, r31
    435c:	ba 0b       	sbc	r27, r26
    435e:	62 0b       	sbc	r22, r18
    4360:	73 0b       	sbc	r23, r19
    4362:	84 0b       	sbc	r24, r20
    4364:	ba f0       	brmi	.+46     	; 0x4394 <__addsf3x+0x9c>
    4366:	91 50       	subi	r25, 0x01	; 1
    4368:	a1 f0       	breq	.+40     	; 0x4392 <__addsf3x+0x9a>
    436a:	ff 0f       	add	r31, r31
    436c:	bb 1f       	adc	r27, r27
    436e:	66 1f       	adc	r22, r22
    4370:	77 1f       	adc	r23, r23
    4372:	88 1f       	adc	r24, r24
    4374:	c2 f7       	brpl	.-16     	; 0x4366 <__addsf3x+0x6e>
    4376:	0e c0       	rjmp	.+28     	; 0x4394 <__addsf3x+0x9c>
    4378:	ba 0f       	add	r27, r26
    437a:	62 1f       	adc	r22, r18
    437c:	73 1f       	adc	r23, r19
    437e:	84 1f       	adc	r24, r20
    4380:	48 f4       	brcc	.+18     	; 0x4394 <__addsf3x+0x9c>
    4382:	87 95       	ror	r24
    4384:	77 95       	ror	r23
    4386:	67 95       	ror	r22
    4388:	b7 95       	ror	r27
    438a:	f7 95       	ror	r31
    438c:	9e 3f       	cpi	r25, 0xFE	; 254
    438e:	08 f0       	brcs	.+2      	; 0x4392 <__addsf3x+0x9a>
    4390:	b0 cf       	rjmp	.-160    	; 0x42f2 <__addsf3+0x28>
    4392:	93 95       	inc	r25
    4394:	88 0f       	add	r24, r24
    4396:	08 f0       	brcs	.+2      	; 0x439a <__addsf3x+0xa2>
    4398:	99 27       	eor	r25, r25
    439a:	ee 0f       	add	r30, r30
    439c:	97 95       	ror	r25
    439e:	87 95       	ror	r24
    43a0:	08 95       	ret

000043a2 <__cmpsf2>:
    43a2:	0e 94 bb 22 	call	0x4576	; 0x4576 <__fp_cmp>
    43a6:	08 f4       	brcc	.+2      	; 0x43aa <__cmpsf2+0x8>
    43a8:	81 e0       	ldi	r24, 0x01	; 1
    43aa:	08 95       	ret

000043ac <__divsf3>:
    43ac:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__divsf3x>
    43b0:	0c 94 f6 22 	jmp	0x45ec	; 0x45ec <__fp_round>
    43b4:	0e 94 ef 22 	call	0x45de	; 0x45de <__fp_pscB>
    43b8:	58 f0       	brcs	.+22     	; 0x43d0 <__divsf3+0x24>
    43ba:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <__fp_pscA>
    43be:	40 f0       	brcs	.+16     	; 0x43d0 <__divsf3+0x24>
    43c0:	29 f4       	brne	.+10     	; 0x43cc <__divsf3+0x20>
    43c2:	5f 3f       	cpi	r21, 0xFF	; 255
__divsf3():
    43c4:	29 f0       	breq	.+10     	; 0x43d0 <__divsf3+0x24>
    43c6:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    43ca:	51 11       	cpse	r21, r1
    43cc:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>
    43d0:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>

000043d4 <__divsf3x>:
__divsf3x():
    43d4:	0e 94 07 23 	call	0x460e	; 0x460e <__fp_split3>
    43d8:	68 f3       	brcs	.-38     	; 0x43b4 <__divsf3+0x8>

000043da <__divsf3_pse>:
    43da:	99 23       	and	r25, r25
    43dc:	b1 f3       	breq	.-20     	; 0x43ca <__divsf3+0x1e>
    43de:	55 23       	and	r21, r21
    43e0:	91 f3       	breq	.-28     	; 0x43c6 <__divsf3+0x1a>
    43e2:	95 1b       	sub	r25, r21
    43e4:	55 0b       	sbc	r21, r21
    43e6:	bb 27       	eor	r27, r27
    43e8:	aa 27       	eor	r26, r26
    43ea:	62 17       	cp	r22, r18
    43ec:	73 07       	cpc	r23, r19
    43ee:	84 07       	cpc	r24, r20
    43f0:	38 f0       	brcs	.+14     	; 0x4400 <__divsf3_pse+0x26>
    43f2:	9f 5f       	subi	r25, 0xFF	; 255
    43f4:	5f 4f       	sbci	r21, 0xFF	; 255
    43f6:	22 0f       	add	r18, r18
    43f8:	33 1f       	adc	r19, r19
    43fa:	44 1f       	adc	r20, r20
    43fc:	aa 1f       	adc	r26, r26
    43fe:	a9 f3       	breq	.-22     	; 0x43ea <__divsf3_pse+0x10>
    4400:	35 d0       	rcall	.+106    	; 0x446c <__divsf3_pse+0x92>
    4402:	0e 2e       	mov	r0, r30
    4404:	3a f0       	brmi	.+14     	; 0x4414 <__divsf3_pse+0x3a>
    4406:	e0 e8       	ldi	r30, 0x80	; 128
    4408:	32 d0       	rcall	.+100    	; 0x446e <__divsf3_pse+0x94>
    440a:	91 50       	subi	r25, 0x01	; 1
    440c:	50 40       	sbci	r21, 0x00	; 0
    440e:	e6 95       	lsr	r30
    4410:	00 1c       	adc	r0, r0
    4412:	ca f7       	brpl	.-14     	; 0x4406 <__divsf3_pse+0x2c>
    4414:	2b d0       	rcall	.+86     	; 0x446c <__divsf3_pse+0x92>
    4416:	fe 2f       	mov	r31, r30
    4418:	29 d0       	rcall	.+82     	; 0x446c <__divsf3_pse+0x92>
    441a:	66 0f       	add	r22, r22
    441c:	77 1f       	adc	r23, r23
    441e:	88 1f       	adc	r24, r24
    4420:	bb 1f       	adc	r27, r27
    4422:	26 17       	cp	r18, r22
    4424:	37 07       	cpc	r19, r23
    4426:	48 07       	cpc	r20, r24
    4428:	ab 07       	cpc	r26, r27
    442a:	b0 e8       	ldi	r27, 0x80	; 128
    442c:	09 f0       	breq	.+2      	; 0x4430 <__divsf3_pse+0x56>
    442e:	bb 0b       	sbc	r27, r27
    4430:	80 2d       	mov	r24, r0
    4432:	bf 01       	movw	r22, r30
    4434:	ff 27       	eor	r31, r31
    4436:	93 58       	subi	r25, 0x83	; 131
    4438:	5f 4f       	sbci	r21, 0xFF	; 255
    443a:	3a f0       	brmi	.+14     	; 0x444a <__divsf3_pse+0x70>
    443c:	9e 3f       	cpi	r25, 0xFE	; 254
    443e:	51 05       	cpc	r21, r1
    4440:	78 f0       	brcs	.+30     	; 0x4460 <__divsf3_pse+0x86>
    4442:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    4446:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>
    444a:	5f 3f       	cpi	r21, 0xFF	; 255
    444c:	e4 f3       	brlt	.-8      	; 0x4446 <__divsf3_pse+0x6c>
    444e:	98 3e       	cpi	r25, 0xE8	; 232
    4450:	d4 f3       	brlt	.-12     	; 0x4446 <__divsf3_pse+0x6c>
    4452:	86 95       	lsr	r24
    4454:	77 95       	ror	r23
    4456:	67 95       	ror	r22
    4458:	b7 95       	ror	r27
    445a:	f7 95       	ror	r31
    445c:	9f 5f       	subi	r25, 0xFF	; 255
    445e:	c9 f7       	brne	.-14     	; 0x4452 <__divsf3_pse+0x78>
    4460:	88 0f       	add	r24, r24
    4462:	91 1d       	adc	r25, r1
    4464:	96 95       	lsr	r25
    4466:	87 95       	ror	r24
    4468:	97 f9       	bld	r25, 7
    446a:	08 95       	ret
    446c:	e1 e0       	ldi	r30, 0x01	; 1
    446e:	66 0f       	add	r22, r22
    4470:	77 1f       	adc	r23, r23
    4472:	88 1f       	adc	r24, r24
    4474:	bb 1f       	adc	r27, r27
    4476:	62 17       	cp	r22, r18
    4478:	73 07       	cpc	r23, r19
    447a:	84 07       	cpc	r24, r20
    447c:	ba 07       	cpc	r27, r26
    447e:	20 f0       	brcs	.+8      	; 0x4488 <__divsf3_pse+0xae>
    4480:	62 1b       	sub	r22, r18
    4482:	73 0b       	sbc	r23, r19
    4484:	84 0b       	sbc	r24, r20
    4486:	ba 0b       	sbc	r27, r26
    4488:	ee 1f       	adc	r30, r30
    448a:	88 f7       	brcc	.-30     	; 0x446e <__divsf3_pse+0x94>
    448c:	e0 95       	com	r30
    448e:	08 95       	ret

00004490 <__fixsfsi>:
    4490:	0e 94 4f 22 	call	0x449e	; 0x449e <__fixunssfsi>
    4494:	68 94       	set
    4496:	b1 11       	cpse	r27, r1
    4498:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>
    449c:	08 95       	ret

0000449e <__fixunssfsi>:
    449e:	0e 94 0f 23 	call	0x461e	; 0x461e <__fp_splitA>
    44a2:	88 f0       	brcs	.+34     	; 0x44c6 <__fixunssfsi+0x28>
    44a4:	9f 57       	subi	r25, 0x7F	; 127
    44a6:	98 f0       	brcs	.+38     	; 0x44ce <__fixunssfsi+0x30>
    44a8:	b9 2f       	mov	r27, r25
    44aa:	99 27       	eor	r25, r25
    44ac:	b7 51       	subi	r27, 0x17	; 23
    44ae:	b0 f0       	brcs	.+44     	; 0x44dc <__fixunssfsi+0x3e>
__fixunssfsi():
    44b0:	e1 f0       	breq	.+56     	; 0x44ea <__fixunssfsi+0x4c>
    44b2:	66 0f       	add	r22, r22
    44b4:	77 1f       	adc	r23, r23
    44b6:	88 1f       	adc	r24, r24
    44b8:	99 1f       	adc	r25, r25
    44ba:	1a f0       	brmi	.+6      	; 0x44c2 <__fixunssfsi+0x24>
    44bc:	ba 95       	dec	r27
    44be:	c9 f7       	brne	.-14     	; 0x44b2 <__fixunssfsi+0x14>
    44c0:	14 c0       	rjmp	.+40     	; 0x44ea <__fixunssfsi+0x4c>
    44c2:	b1 30       	cpi	r27, 0x01	; 1
    44c4:	91 f0       	breq	.+36     	; 0x44ea <__fixunssfsi+0x4c>
    44c6:	0e 94 29 23 	call	0x4652	; 0x4652 <__fp_zero>
    44ca:	b1 e0       	ldi	r27, 0x01	; 1
    44cc:	08 95       	ret
    44ce:	0c 94 29 23 	jmp	0x4652	; 0x4652 <__fp_zero>
    44d2:	67 2f       	mov	r22, r23
    44d4:	78 2f       	mov	r23, r24
    44d6:	88 27       	eor	r24, r24
    44d8:	b8 5f       	subi	r27, 0xF8	; 248
    44da:	39 f0       	breq	.+14     	; 0x44ea <__fixunssfsi+0x4c>
    44dc:	b9 3f       	cpi	r27, 0xF9	; 249
    44de:	cc f3       	brlt	.-14     	; 0x44d2 <__fixunssfsi+0x34>
    44e0:	86 95       	lsr	r24
    44e2:	77 95       	ror	r23
    44e4:	67 95       	ror	r22
    44e6:	b3 95       	inc	r27
    44e8:	d9 f7       	brne	.-10     	; 0x44e0 <__fixunssfsi+0x42>
    44ea:	3e f4       	brtc	.+14     	; 0x44fa <__fixunssfsi+0x5c>
    44ec:	90 95       	com	r25
    44ee:	80 95       	com	r24
    44f0:	70 95       	com	r23
    44f2:	61 95       	neg	r22
    44f4:	7f 4f       	sbci	r23, 0xFF	; 255
    44f6:	8f 4f       	sbci	r24, 0xFF	; 255
    44f8:	9f 4f       	sbci	r25, 0xFF	; 255
    44fa:	08 95       	ret

000044fc <__floatunsisf>:
__floatunsisf():
    44fc:	e8 94       	clt
    44fe:	09 c0       	rjmp	.+18     	; 0x4512 <__floatsisf+0x12>

00004500 <__floatsisf>:
    4500:	97 fb       	bst	r25, 7
    4502:	3e f4       	brtc	.+14     	; 0x4512 <__floatsisf+0x12>
    4504:	90 95       	com	r25
    4506:	80 95       	com	r24
    4508:	70 95       	com	r23
    450a:	61 95       	neg	r22
    450c:	7f 4f       	sbci	r23, 0xFF	; 255
    450e:	8f 4f       	sbci	r24, 0xFF	; 255
    4510:	9f 4f       	sbci	r25, 0xFF	; 255
    4512:	99 23       	and	r25, r25
    4514:	a9 f0       	breq	.+42     	; 0x4540 <__floatsisf+0x40>
    4516:	f9 2f       	mov	r31, r25
    4518:	96 e9       	ldi	r25, 0x96	; 150
    451a:	bb 27       	eor	r27, r27
    451c:	93 95       	inc	r25
    451e:	f6 95       	lsr	r31
    4520:	87 95       	ror	r24
    4522:	77 95       	ror	r23
    4524:	67 95       	ror	r22
    4526:	b7 95       	ror	r27
    4528:	f1 11       	cpse	r31, r1
    452a:	f8 cf       	rjmp	.-16     	; 0x451c <__floatsisf+0x1c>
    452c:	fa f4       	brpl	.+62     	; 0x456c <__floatsisf+0x6c>
    452e:	bb 0f       	add	r27, r27
    4530:	11 f4       	brne	.+4      	; 0x4536 <__floatsisf+0x36>
    4532:	60 ff       	sbrs	r22, 0
    4534:	1b c0       	rjmp	.+54     	; 0x456c <__floatsisf+0x6c>
    4536:	6f 5f       	subi	r22, 0xFF	; 255
    4538:	7f 4f       	sbci	r23, 0xFF	; 255
    453a:	8f 4f       	sbci	r24, 0xFF	; 255
    453c:	9f 4f       	sbci	r25, 0xFF	; 255
    453e:	16 c0       	rjmp	.+44     	; 0x456c <__floatsisf+0x6c>
    4540:	88 23       	and	r24, r24
    4542:	11 f0       	breq	.+4      	; 0x4548 <__floatsisf+0x48>
    4544:	96 e9       	ldi	r25, 0x96	; 150
    4546:	11 c0       	rjmp	.+34     	; 0x456a <__floatsisf+0x6a>
    4548:	77 23       	and	r23, r23
    454a:	21 f0       	breq	.+8      	; 0x4554 <__floatsisf+0x54>
    454c:	9e e8       	ldi	r25, 0x8E	; 142
    454e:	87 2f       	mov	r24, r23
    4550:	76 2f       	mov	r23, r22
    4552:	05 c0       	rjmp	.+10     	; 0x455e <__floatsisf+0x5e>
    4554:	66 23       	and	r22, r22
    4556:	71 f0       	breq	.+28     	; 0x4574 <__floatsisf+0x74>
    4558:	96 e8       	ldi	r25, 0x86	; 134
    455a:	86 2f       	mov	r24, r22
    455c:	70 e0       	ldi	r23, 0x00	; 0
    455e:	60 e0       	ldi	r22, 0x00	; 0
    4560:	2a f0       	brmi	.+10     	; 0x456c <__floatsisf+0x6c>
    4562:	9a 95       	dec	r25
    4564:	66 0f       	add	r22, r22
    4566:	77 1f       	adc	r23, r23
    4568:	88 1f       	adc	r24, r24
    456a:	da f7       	brpl	.-10     	; 0x4562 <__floatsisf+0x62>
    456c:	88 0f       	add	r24, r24
    456e:	96 95       	lsr	r25
    4570:	87 95       	ror	r24
    4572:	97 f9       	bld	r25, 7
    4574:	08 95       	ret

00004576 <__fp_cmp>:
__fp_cmp():
    4576:	99 0f       	add	r25, r25
    4578:	00 08       	sbc	r0, r0
    457a:	55 0f       	add	r21, r21
    457c:	aa 0b       	sbc	r26, r26
    457e:	e0 e8       	ldi	r30, 0x80	; 128
    4580:	fe ef       	ldi	r31, 0xFE	; 254
    4582:	16 16       	cp	r1, r22
    4584:	17 06       	cpc	r1, r23
    4586:	e8 07       	cpc	r30, r24
    4588:	f9 07       	cpc	r31, r25
    458a:	c0 f0       	brcs	.+48     	; 0x45bc <__fp_cmp+0x46>
    458c:	12 16       	cp	r1, r18
    458e:	13 06       	cpc	r1, r19
    4590:	e4 07       	cpc	r30, r20
    4592:	f5 07       	cpc	r31, r21
    4594:	98 f0       	brcs	.+38     	; 0x45bc <__fp_cmp+0x46>
    4596:	62 1b       	sub	r22, r18
    4598:	73 0b       	sbc	r23, r19
    459a:	84 0b       	sbc	r24, r20
    459c:	95 0b       	sbc	r25, r21
    459e:	39 f4       	brne	.+14     	; 0x45ae <__fp_cmp+0x38>
    45a0:	0a 26       	eor	r0, r26
    45a2:	61 f0       	breq	.+24     	; 0x45bc <__fp_cmp+0x46>
    45a4:	23 2b       	or	r18, r19
    45a6:	24 2b       	or	r18, r20
    45a8:	25 2b       	or	r18, r21
    45aa:	21 f4       	brne	.+8      	; 0x45b4 <__fp_cmp+0x3e>
    45ac:	08 95       	ret
    45ae:	0a 26       	eor	r0, r26
    45b0:	09 f4       	brne	.+2      	; 0x45b4 <__fp_cmp+0x3e>
    45b2:	a1 40       	sbci	r26, 0x01	; 1
    45b4:	a6 95       	lsr	r26
    45b6:	8f ef       	ldi	r24, 0xFF	; 255
    45b8:	81 1d       	adc	r24, r1
    45ba:	81 1d       	adc	r24, r1
    45bc:	08 95       	ret

000045be <__fp_inf>:
__fp_inf():
    45be:	97 f9       	bld	r25, 7
    45c0:	9f 67       	ori	r25, 0x7F	; 127
    45c2:	80 e8       	ldi	r24, 0x80	; 128
    45c4:	70 e0       	ldi	r23, 0x00	; 0
    45c6:	60 e0       	ldi	r22, 0x00	; 0
    45c8:	08 95       	ret

000045ca <__fp_nan>:
__fp_nan():
    45ca:	9f ef       	ldi	r25, 0xFF	; 255
    45cc:	80 ec       	ldi	r24, 0xC0	; 192
    45ce:	08 95       	ret

000045d0 <__fp_pscA>:
__fp_pscA():
    45d0:	00 24       	eor	r0, r0
    45d2:	0a 94       	dec	r0
    45d4:	16 16       	cp	r1, r22
    45d6:	17 06       	cpc	r1, r23
    45d8:	18 06       	cpc	r1, r24
    45da:	09 06       	cpc	r0, r25
    45dc:	08 95       	ret

000045de <__fp_pscB>:
__fp_pscB():
    45de:	00 24       	eor	r0, r0
    45e0:	0a 94       	dec	r0
    45e2:	12 16       	cp	r1, r18
    45e4:	13 06       	cpc	r1, r19
    45e6:	14 06       	cpc	r1, r20
    45e8:	05 06       	cpc	r0, r21
    45ea:	08 95       	ret

000045ec <__fp_round>:
__fp_round():
    45ec:	09 2e       	mov	r0, r25
    45ee:	03 94       	inc	r0
    45f0:	00 0c       	add	r0, r0
    45f2:	11 f4       	brne	.+4      	; 0x45f8 <__fp_round+0xc>
    45f4:	88 23       	and	r24, r24
    45f6:	52 f0       	brmi	.+20     	; 0x460c <__fp_round+0x20>
    45f8:	bb 0f       	add	r27, r27
    45fa:	40 f4       	brcc	.+16     	; 0x460c <__fp_round+0x20>
    45fc:	bf 2b       	or	r27, r31
    45fe:	11 f4       	brne	.+4      	; 0x4604 <__fp_round+0x18>
    4600:	60 ff       	sbrs	r22, 0
    4602:	04 c0       	rjmp	.+8      	; 0x460c <__fp_round+0x20>
    4604:	6f 5f       	subi	r22, 0xFF	; 255
    4606:	7f 4f       	sbci	r23, 0xFF	; 255
    4608:	8f 4f       	sbci	r24, 0xFF	; 255
    460a:	9f 4f       	sbci	r25, 0xFF	; 255
    460c:	08 95       	ret

0000460e <__fp_split3>:
__fp_split3():
    460e:	57 fd       	sbrc	r21, 7
    4610:	90 58       	subi	r25, 0x80	; 128
    4612:	44 0f       	add	r20, r20
    4614:	55 1f       	adc	r21, r21
    4616:	59 f0       	breq	.+22     	; 0x462e <__fp_splitA+0x10>
    4618:	5f 3f       	cpi	r21, 0xFF	; 255
    461a:	71 f0       	breq	.+28     	; 0x4638 <__fp_splitA+0x1a>
    461c:	47 95       	ror	r20

0000461e <__fp_splitA>:
    461e:	88 0f       	add	r24, r24
    4620:	97 fb       	bst	r25, 7
    4622:	99 1f       	adc	r25, r25
    4624:	61 f0       	breq	.+24     	; 0x463e <__fp_splitA+0x20>
    4626:	9f 3f       	cpi	r25, 0xFF	; 255
    4628:	79 f0       	breq	.+30     	; 0x4648 <__fp_splitA+0x2a>
    462a:	87 95       	ror	r24
    462c:	08 95       	ret
    462e:	12 16       	cp	r1, r18
    4630:	13 06       	cpc	r1, r19
    4632:	14 06       	cpc	r1, r20
    4634:	55 1f       	adc	r21, r21
    4636:	f2 cf       	rjmp	.-28     	; 0x461c <__fp_split3+0xe>
    4638:	46 95       	lsr	r20
    463a:	f1 df       	rcall	.-30     	; 0x461e <__fp_splitA>
    463c:	08 c0       	rjmp	.+16     	; 0x464e <__fp_splitA+0x30>
    463e:	16 16       	cp	r1, r22
    4640:	17 06       	cpc	r1, r23
    4642:	18 06       	cpc	r1, r24
    4644:	99 1f       	adc	r25, r25
    4646:	f1 cf       	rjmp	.-30     	; 0x462a <__fp_splitA+0xc>
    4648:	86 95       	lsr	r24
    464a:	71 05       	cpc	r23, r1
    464c:	61 05       	cpc	r22, r1
    464e:	08 94       	sec
    4650:	08 95       	ret

00004652 <__fp_zero>:
__fp_zero():
    4652:	e8 94       	clt

00004654 <__fp_szero>:
    4654:	bb 27       	eor	r27, r27
    4656:	66 27       	eor	r22, r22
    4658:	77 27       	eor	r23, r23
    465a:	cb 01       	movw	r24, r22
    465c:	97 f9       	bld	r25, 7
    465e:	08 95       	ret

00004660 <__gesf2>:
__gesf2():
    4660:	0e 94 bb 22 	call	0x4576	; 0x4576 <__fp_cmp>
    4664:	08 f4       	brcc	.+2      	; 0x4668 <__gesf2+0x8>
    4666:	8f ef       	ldi	r24, 0xFF	; 255
    4668:	08 95       	ret

0000466a <__mulsf3>:
__mulsf3():
    466a:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3x>
    466e:	0c 94 f6 22 	jmp	0x45ec	; 0x45ec <__fp_round>
    4672:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <__fp_pscA>
    4676:	38 f0       	brcs	.+14     	; 0x4686 <__mulsf3+0x1c>
    4678:	0e 94 ef 22 	call	0x45de	; 0x45de <__fp_pscB>
    467c:	20 f0       	brcs	.+8      	; 0x4686 <__mulsf3+0x1c>
    467e:	95 23       	and	r25, r21
    4680:	11 f0       	breq	.+4      	; 0x4686 <__mulsf3+0x1c>
    4682:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    4686:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>
    468a:	11 24       	eor	r1, r1
    468c:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>

00004690 <__mulsf3x>:
__mulsf3x():
    4690:	0e 94 07 23 	call	0x460e	; 0x460e <__fp_split3>
    4694:	70 f3       	brcs	.-36     	; 0x4672 <__mulsf3+0x8>

00004696 <__mulsf3_pse>:
    4696:	95 9f       	mul	r25, r21
    4698:	c1 f3       	breq	.-16     	; 0x468a <__mulsf3+0x20>
    469a:	95 0f       	add	r25, r21
    469c:	50 e0       	ldi	r21, 0x00	; 0
    469e:	55 1f       	adc	r21, r21
    46a0:	62 9f       	mul	r22, r18
    46a2:	f0 01       	movw	r30, r0
    46a4:	72 9f       	mul	r23, r18
    46a6:	bb 27       	eor	r27, r27
    46a8:	f0 0d       	add	r31, r0
    46aa:	b1 1d       	adc	r27, r1
    46ac:	63 9f       	mul	r22, r19
    46ae:	aa 27       	eor	r26, r26
    46b0:	f0 0d       	add	r31, r0
    46b2:	b1 1d       	adc	r27, r1
    46b4:	aa 1f       	adc	r26, r26
    46b6:	64 9f       	mul	r22, r20
    46b8:	66 27       	eor	r22, r22
    46ba:	b0 0d       	add	r27, r0
    46bc:	a1 1d       	adc	r26, r1
    46be:	66 1f       	adc	r22, r22
    46c0:	82 9f       	mul	r24, r18
    46c2:	22 27       	eor	r18, r18
    46c4:	b0 0d       	add	r27, r0
    46c6:	a1 1d       	adc	r26, r1
    46c8:	62 1f       	adc	r22, r18
    46ca:	73 9f       	mul	r23, r19
    46cc:	b0 0d       	add	r27, r0
    46ce:	a1 1d       	adc	r26, r1
    46d0:	62 1f       	adc	r22, r18
    46d2:	83 9f       	mul	r24, r19
    46d4:	a0 0d       	add	r26, r0
    46d6:	61 1d       	adc	r22, r1
    46d8:	22 1f       	adc	r18, r18
    46da:	74 9f       	mul	r23, r20
    46dc:	33 27       	eor	r19, r19
    46de:	a0 0d       	add	r26, r0
    46e0:	61 1d       	adc	r22, r1
    46e2:	23 1f       	adc	r18, r19
    46e4:	84 9f       	mul	r24, r20
    46e6:	60 0d       	add	r22, r0
    46e8:	21 1d       	adc	r18, r1
    46ea:	82 2f       	mov	r24, r18
    46ec:	76 2f       	mov	r23, r22
    46ee:	6a 2f       	mov	r22, r26
    46f0:	11 24       	eor	r1, r1
    46f2:	9f 57       	subi	r25, 0x7F	; 127
    46f4:	50 40       	sbci	r21, 0x00	; 0
    46f6:	9a f0       	brmi	.+38     	; 0x471e <__mulsf3_pse+0x88>
    46f8:	f1 f0       	breq	.+60     	; 0x4736 <__mulsf3_pse+0xa0>
    46fa:	88 23       	and	r24, r24
    46fc:	4a f0       	brmi	.+18     	; 0x4710 <__mulsf3_pse+0x7a>
    46fe:	ee 0f       	add	r30, r30
    4700:	ff 1f       	adc	r31, r31
    4702:	bb 1f       	adc	r27, r27
    4704:	66 1f       	adc	r22, r22
    4706:	77 1f       	adc	r23, r23
    4708:	88 1f       	adc	r24, r24
    470a:	91 50       	subi	r25, 0x01	; 1
    470c:	50 40       	sbci	r21, 0x00	; 0
    470e:	a9 f7       	brne	.-22     	; 0x46fa <__mulsf3_pse+0x64>
    4710:	9e 3f       	cpi	r25, 0xFE	; 254
    4712:	51 05       	cpc	r21, r1
    4714:	80 f0       	brcs	.+32     	; 0x4736 <__mulsf3_pse+0xa0>
    4716:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    471a:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>
    471e:	5f 3f       	cpi	r21, 0xFF	; 255
    4720:	e4 f3       	brlt	.-8      	; 0x471a <__mulsf3_pse+0x84>
    4722:	98 3e       	cpi	r25, 0xE8	; 232
    4724:	d4 f3       	brlt	.-12     	; 0x471a <__mulsf3_pse+0x84>
    4726:	86 95       	lsr	r24
    4728:	77 95       	ror	r23
    472a:	67 95       	ror	r22
    472c:	b7 95       	ror	r27
    472e:	f7 95       	ror	r31
    4730:	e7 95       	ror	r30
    4732:	9f 5f       	subi	r25, 0xFF	; 255
    4734:	c1 f7       	brne	.-16     	; 0x4726 <__mulsf3_pse+0x90>
    4736:	fe 2b       	or	r31, r30
    4738:	88 0f       	add	r24, r24
    473a:	91 1d       	adc	r25, r1
    473c:	96 95       	lsr	r25
    473e:	87 95       	ror	r24
    4740:	97 f9       	bld	r25, 7
    4742:	08 95       	ret

00004744 <pow>:
    4744:	fa 01       	movw	r30, r20
    4746:	ee 0f       	add	r30, r30
    4748:	ff 1f       	adc	r31, r31
    474a:	30 96       	adiw	r30, 0x00	; 0
    474c:	21 05       	cpc	r18, r1
    474e:	31 05       	cpc	r19, r1
    4750:	a1 f1       	breq	.+104    	; 0x47ba <pow+0x76>
    4752:	61 15       	cp	r22, r1
    4754:	71 05       	cpc	r23, r1
    4756:	61 f4       	brne	.+24     	; 0x4770 <pow+0x2c>
    4758:	80 38       	cpi	r24, 0x80	; 128
    475a:	bf e3       	ldi	r27, 0x3F	; 63
    475c:	9b 07       	cpc	r25, r27
    475e:	49 f1       	breq	.+82     	; 0x47b2 <pow+0x6e>
    4760:	68 94       	set
pow():
    4762:	90 38       	cpi	r25, 0x80	; 128
    4764:	81 05       	cpc	r24, r1
    4766:	61 f0       	breq	.+24     	; 0x4780 <pow+0x3c>
    4768:	80 38       	cpi	r24, 0x80	; 128
    476a:	bf ef       	ldi	r27, 0xFF	; 255
    476c:	9b 07       	cpc	r25, r27
    476e:	41 f0       	breq	.+16     	; 0x4780 <pow+0x3c>
    4770:	99 23       	and	r25, r25
    4772:	4a f5       	brpl	.+82     	; 0x47c6 <pow+0x82>
    4774:	ff 3f       	cpi	r31, 0xFF	; 255
    4776:	e1 05       	cpc	r30, r1
    4778:	31 05       	cpc	r19, r1
    477a:	21 05       	cpc	r18, r1
    477c:	19 f1       	breq	.+70     	; 0x47c4 <pow+0x80>
    477e:	e8 94       	clt
    4780:	08 94       	sec
    4782:	e7 95       	ror	r30
    4784:	d9 01       	movw	r26, r18
    4786:	aa 23       	and	r26, r26
    4788:	29 f4       	brne	.+10     	; 0x4794 <pow+0x50>
    478a:	ab 2f       	mov	r26, r27
    478c:	be 2f       	mov	r27, r30
    478e:	f8 5f       	subi	r31, 0xF8	; 248
    4790:	d0 f3       	brcs	.-12     	; 0x4786 <pow+0x42>
    4792:	10 c0       	rjmp	.+32     	; 0x47b4 <pow+0x70>
    4794:	ff 5f       	subi	r31, 0xFF	; 255
    4796:	70 f4       	brcc	.+28     	; 0x47b4 <pow+0x70>
    4798:	a6 95       	lsr	r26
    479a:	e0 f7       	brcc	.-8      	; 0x4794 <pow+0x50>
    479c:	f7 39       	cpi	r31, 0x97	; 151
    479e:	50 f0       	brcs	.+20     	; 0x47b4 <pow+0x70>
    47a0:	19 f0       	breq	.+6      	; 0x47a8 <pow+0x64>
    47a2:	ff 3a       	cpi	r31, 0xAF	; 175
    47a4:	38 f4       	brcc	.+14     	; 0x47b4 <pow+0x70>
    47a6:	9f 77       	andi	r25, 0x7F	; 127
    47a8:	9f 93       	push	r25
    47aa:	0d d0       	rcall	.+26     	; 0x47c6 <pow+0x82>
    47ac:	0f 90       	pop	r0
    47ae:	07 fc       	sbrc	r0, 7
    47b0:	90 58       	subi	r25, 0x80	; 128
    47b2:	08 95       	ret
    47b4:	46 f0       	brts	.+16     	; 0x47c6 <pow+0x82>
    47b6:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>
    47ba:	60 e0       	ldi	r22, 0x00	; 0
    47bc:	70 e0       	ldi	r23, 0x00	; 0
    47be:	80 e8       	ldi	r24, 0x80	; 128
    47c0:	9f e3       	ldi	r25, 0x3F	; 63
    47c2:	08 95       	ret
    47c4:	4f e7       	ldi	r20, 0x7F	; 127
    47c6:	9f 77       	andi	r25, 0x7F	; 127
    47c8:	5f 93       	push	r21
    47ca:	4f 93       	push	r20
    47cc:	3f 93       	push	r19
    47ce:	2f 93       	push	r18
    47d0:	0e 94 a2 24 	call	0x4944	; 0x4944 <log>
    47d4:	2f 91       	pop	r18
    47d6:	3f 91       	pop	r19
    47d8:	4f 91       	pop	r20
    47da:	5f 91       	pop	r21
    47dc:	0e 94 35 23 	call	0x466a	; 0x466a <__mulsf3>
    47e0:	0c 94 ff 23 	jmp	0x47fe	; 0x47fe <exp>

000047e4 <__unordsf2>:
__unordsf2():
    47e4:	0e 94 bb 22 	call	0x4576	; 0x4576 <__fp_cmp>
    47e8:	88 0b       	sbc	r24, r24
    47ea:	99 0b       	sbc	r25, r25
    47ec:	08 95       	ret
    47ee:	29 f4       	brne	.+10     	; 0x47fa <__unordsf2+0x16>
    47f0:	16 f0       	brts	.+4      	; 0x47f6 <__unordsf2+0x12>
    47f2:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    47f6:	0c 94 29 23 	jmp	0x4652	; 0x4652 <__fp_zero>
    47fa:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>

000047fe <exp>:
exp():
    47fe:	0e 94 0f 23 	call	0x461e	; 0x461e <__fp_splitA>
    4802:	a8 f3       	brcs	.-22     	; 0x47ee <__unordsf2+0xa>
    4804:	96 38       	cpi	r25, 0x86	; 134
    4806:	a0 f7       	brcc	.-24     	; 0x47f0 <__unordsf2+0xc>
    4808:	07 f8       	bld	r0, 7
    480a:	0f 92       	push	r0
    480c:	e8 94       	clt
    480e:	2b e3       	ldi	r18, 0x3B	; 59
    4810:	3a ea       	ldi	r19, 0xAA	; 170
    4812:	48 eb       	ldi	r20, 0xB8	; 184
    4814:	5f e7       	ldi	r21, 0x7F	; 127
    4816:	0e 94 4b 23 	call	0x4696	; 0x4696 <__mulsf3_pse>
    481a:	0f 92       	push	r0
    481c:	0f 92       	push	r0
    481e:	0f 92       	push	r0
    4820:	4d b7       	in	r20, 0x3d	; 61
    4822:	5e b7       	in	r21, 0x3e	; 62
    4824:	0f 92       	push	r0
    4826:	0e 94 ea 24 	call	0x49d4	; 0x49d4 <modf>
    482a:	e8 e6       	ldi	r30, 0x68	; 104
    482c:	f0 e0       	ldi	r31, 0x00	; 0
    482e:	0e 94 31 24 	call	0x4862	; 0x4862 <__fp_powser>
    4832:	4f 91       	pop	r20
    4834:	5f 91       	pop	r21
    4836:	ef 91       	pop	r30
    4838:	ff 91       	pop	r31
    483a:	e5 95       	asr	r30
    483c:	ee 1f       	adc	r30, r30
    483e:	ff 1f       	adc	r31, r31
    4840:	49 f0       	breq	.+18     	; 0x4854 <exp+0x56>
    4842:	fe 57       	subi	r31, 0x7E	; 126
    4844:	e0 68       	ori	r30, 0x80	; 128
    4846:	44 27       	eor	r20, r20
    4848:	ee 0f       	add	r30, r30
    484a:	44 1f       	adc	r20, r20
    484c:	fa 95       	dec	r31
    484e:	e1 f7       	brne	.-8      	; 0x4848 <exp+0x4a>
    4850:	41 95       	neg	r20
    4852:	55 0b       	sbc	r21, r21
    4854:	0e 94 64 24 	call	0x48c8	; 0x48c8 <ldexp>
    4858:	0f 90       	pop	r0
    485a:	07 fe       	sbrs	r0, 7
    485c:	0c 94 58 24 	jmp	0x48b0	; 0x48b0 <inverse>
    4860:	08 95       	ret

00004862 <__fp_powser>:
    4862:	df 93       	push	r29
    4864:	cf 93       	push	r28
    4866:	1f 93       	push	r17
    4868:	0f 93       	push	r16
    486a:	ff 92       	push	r15
    486c:	ef 92       	push	r14
    486e:	df 92       	push	r13
    4870:	7b 01       	movw	r14, r22
__fp_powser():
    4872:	8c 01       	movw	r16, r24
    4874:	68 94       	set
    4876:	06 c0       	rjmp	.+12     	; 0x4884 <__fp_powser+0x22>
    4878:	da 2e       	mov	r13, r26
    487a:	ef 01       	movw	r28, r30
    487c:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3x>
    4880:	fe 01       	movw	r30, r28
    4882:	e8 94       	clt
    4884:	a5 91       	lpm	r26, Z+
    4886:	25 91       	lpm	r18, Z+
    4888:	35 91       	lpm	r19, Z+
    488a:	45 91       	lpm	r20, Z+
    488c:	55 91       	lpm	r21, Z+
    488e:	a6 f3       	brts	.-24     	; 0x4878 <__fp_powser+0x16>
    4890:	ef 01       	movw	r28, r30
    4892:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__addsf3x>
    4896:	fe 01       	movw	r30, r28
    4898:	97 01       	movw	r18, r14
    489a:	a8 01       	movw	r20, r16
    489c:	da 94       	dec	r13
    489e:	69 f7       	brne	.-38     	; 0x487a <__fp_powser+0x18>
    48a0:	df 90       	pop	r13
    48a2:	ef 90       	pop	r14
    48a4:	ff 90       	pop	r15
    48a6:	0f 91       	pop	r16
    48a8:	1f 91       	pop	r17
    48aa:	cf 91       	pop	r28
    48ac:	df 91       	pop	r29
    48ae:	08 95       	ret

000048b0 <inverse>:
inverse():
    48b0:	9b 01       	movw	r18, r22
    48b2:	ac 01       	movw	r20, r24
    48b4:	60 e0       	ldi	r22, 0x00	; 0
    48b6:	70 e0       	ldi	r23, 0x00	; 0
    48b8:	80 e8       	ldi	r24, 0x80	; 128
    48ba:	9f e3       	ldi	r25, 0x3F	; 63
    48bc:	0c 94 d6 21 	jmp	0x43ac	; 0x43ac <__divsf3>
    48c0:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>
    48c4:	0c 94 1e 25 	jmp	0x4a3c	; 0x4a3c <__fp_mpack>

000048c8 <ldexp>:
ldexp():
    48c8:	0e 94 0f 23 	call	0x461e	; 0x461e <__fp_splitA>
    48cc:	d8 f3       	brcs	.-10     	; 0x48c4 <inverse+0x14>
    48ce:	99 23       	and	r25, r25
    48d0:	c9 f3       	breq	.-14     	; 0x48c4 <inverse+0x14>
    48d2:	94 0f       	add	r25, r20
    48d4:	51 1d       	adc	r21, r1
    48d6:	a3 f3       	brvs	.-24     	; 0x48c0 <inverse+0x10>
    48d8:	91 50       	subi	r25, 0x01	; 1
    48da:	50 40       	sbci	r21, 0x00	; 0
    48dc:	94 f0       	brlt	.+36     	; 0x4902 <ldexp+0x3a>
    48de:	59 f0       	breq	.+22     	; 0x48f6 <ldexp+0x2e>
    48e0:	88 23       	and	r24, r24
    48e2:	32 f0       	brmi	.+12     	; 0x48f0 <ldexp+0x28>
    48e4:	66 0f       	add	r22, r22
    48e6:	77 1f       	adc	r23, r23
    48e8:	88 1f       	adc	r24, r24
    48ea:	91 50       	subi	r25, 0x01	; 1
    48ec:	50 40       	sbci	r21, 0x00	; 0
    48ee:	c1 f7       	brne	.-16     	; 0x48e0 <ldexp+0x18>
    48f0:	9e 3f       	cpi	r25, 0xFE	; 254
    48f2:	51 05       	cpc	r21, r1
    48f4:	2c f7       	brge	.-54     	; 0x48c0 <inverse+0x10>
    48f6:	88 0f       	add	r24, r24
    48f8:	91 1d       	adc	r25, r1
    48fa:	96 95       	lsr	r25
    48fc:	87 95       	ror	r24
    48fe:	97 f9       	bld	r25, 7
    4900:	08 95       	ret
    4902:	5f 3f       	cpi	r21, 0xFF	; 255
    4904:	ac f0       	brlt	.+42     	; 0x4930 <ldexp+0x68>
    4906:	98 3e       	cpi	r25, 0xE8	; 232
    4908:	9c f0       	brlt	.+38     	; 0x4930 <ldexp+0x68>
    490a:	bb 27       	eor	r27, r27
    490c:	86 95       	lsr	r24
    490e:	77 95       	ror	r23
    4910:	67 95       	ror	r22
    4912:	b7 95       	ror	r27
    4914:	08 f4       	brcc	.+2      	; 0x4918 <ldexp+0x50>
    4916:	b1 60       	ori	r27, 0x01	; 1
    4918:	93 95       	inc	r25
    491a:	c1 f7       	brne	.-16     	; 0x490c <ldexp+0x44>
    491c:	bb 0f       	add	r27, r27
    491e:	58 f7       	brcc	.-42     	; 0x48f6 <ldexp+0x2e>
    4920:	11 f4       	brne	.+4      	; 0x4926 <ldexp+0x5e>
    4922:	60 ff       	sbrs	r22, 0
    4924:	e8 cf       	rjmp	.-48     	; 0x48f6 <ldexp+0x2e>
    4926:	6f 5f       	subi	r22, 0xFF	; 255
    4928:	7f 4f       	sbci	r23, 0xFF	; 255
    492a:	8f 4f       	sbci	r24, 0xFF	; 255
    492c:	9f 4f       	sbci	r25, 0xFF	; 255
    492e:	e3 cf       	rjmp	.-58     	; 0x48f6 <ldexp+0x2e>
    4930:	0c 94 2a 23 	jmp	0x4654	; 0x4654 <__fp_szero>
    4934:	16 f0       	brts	.+4      	; 0x493a <ldexp+0x72>
    4936:	0c 94 1e 25 	jmp	0x4a3c	; 0x4a3c <__fp_mpack>
    493a:	0c 94 e5 22 	jmp	0x45ca	; 0x45ca <__fp_nan>
    493e:	68 94       	set
    4940:	0c 94 df 22 	jmp	0x45be	; 0x45be <__fp_inf>

00004944 <log>:
log():
    4944:	0e 94 0f 23 	call	0x461e	; 0x461e <__fp_splitA>
    4948:	a8 f3       	brcs	.-22     	; 0x4934 <ldexp+0x6c>
    494a:	99 23       	and	r25, r25
    494c:	c1 f3       	breq	.-16     	; 0x493e <ldexp+0x76>
    494e:	ae f3       	brts	.-22     	; 0x493a <ldexp+0x72>
    4950:	df 93       	push	r29
    4952:	cf 93       	push	r28
    4954:	1f 93       	push	r17
    4956:	0f 93       	push	r16
    4958:	ff 92       	push	r15
    495a:	c9 2f       	mov	r28, r25
    495c:	dd 27       	eor	r29, r29
    495e:	88 23       	and	r24, r24
    4960:	2a f0       	brmi	.+10     	; 0x496c <log+0x28>
    4962:	21 97       	sbiw	r28, 0x01	; 1
    4964:	66 0f       	add	r22, r22
    4966:	77 1f       	adc	r23, r23
    4968:	88 1f       	adc	r24, r24
    496a:	da f7       	brpl	.-10     	; 0x4962 <log+0x1e>
    496c:	20 e0       	ldi	r18, 0x00	; 0
    496e:	30 e0       	ldi	r19, 0x00	; 0
    4970:	40 e8       	ldi	r20, 0x80	; 128
    4972:	5f eb       	ldi	r21, 0xBF	; 191
    4974:	9f e3       	ldi	r25, 0x3F	; 63
    4976:	88 39       	cpi	r24, 0x98	; 152
    4978:	20 f0       	brcs	.+8      	; 0x4982 <log+0x3e>
    497a:	80 3e       	cpi	r24, 0xE0	; 224
    497c:	38 f0       	brcs	.+14     	; 0x498c <log+0x48>
    497e:	21 96       	adiw	r28, 0x01	; 1
    4980:	8f 77       	andi	r24, 0x7F	; 127
    4982:	0e 94 65 21 	call	0x42ca	; 0x42ca <__addsf3>
    4986:	e0 e9       	ldi	r30, 0x90	; 144
    4988:	f0 e0       	ldi	r31, 0x00	; 0
    498a:	04 c0       	rjmp	.+8      	; 0x4994 <log+0x50>
    498c:	0e 94 65 21 	call	0x42ca	; 0x42ca <__addsf3>
    4990:	ed eb       	ldi	r30, 0xBD	; 189
    4992:	f0 e0       	ldi	r31, 0x00	; 0
    4994:	0e 94 31 24 	call	0x4862	; 0x4862 <__fp_powser>
    4998:	8b 01       	movw	r16, r22
    499a:	be 01       	movw	r22, r28
    499c:	ec 01       	movw	r28, r24
    499e:	fb 2e       	mov	r15, r27
    49a0:	6f 57       	subi	r22, 0x7F	; 127
    49a2:	71 09       	sbc	r23, r1
    49a4:	75 95       	asr	r23
    49a6:	77 1f       	adc	r23, r23
    49a8:	88 0b       	sbc	r24, r24
    49aa:	99 0b       	sbc	r25, r25
    49ac:	0e 94 80 22 	call	0x4500	; 0x4500 <__floatsisf>
    49b0:	28 e1       	ldi	r18, 0x18	; 24
    49b2:	32 e7       	ldi	r19, 0x72	; 114
    49b4:	41 e3       	ldi	r20, 0x31	; 49
    49b6:	5f e3       	ldi	r21, 0x3F	; 63
    49b8:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3x>
    49bc:	af 2d       	mov	r26, r15
    49be:	98 01       	movw	r18, r16
    49c0:	ae 01       	movw	r20, r28
    49c2:	ff 90       	pop	r15
    49c4:	0f 91       	pop	r16
    49c6:	1f 91       	pop	r17
    49c8:	cf 91       	pop	r28
    49ca:	df 91       	pop	r29
    49cc:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__addsf3x>
    49d0:	0c 94 f6 22 	jmp	0x45ec	; 0x45ec <__fp_round>

000049d4 <modf>:
    49d4:	fa 01       	movw	r30, r20
    49d6:	dc 01       	movw	r26, r24
    49d8:	aa 0f       	add	r26, r26
    49da:	bb 1f       	adc	r27, r27
    49dc:	9b 01       	movw	r18, r22
    49de:	ac 01       	movw	r20, r24
    49e0:	bf 57       	subi	r27, 0x7F	; 127
    49e2:	28 f4       	brcc	.+10     	; 0x49ee <modf+0x1a>
modf():
    49e4:	22 27       	eor	r18, r18
    49e6:	33 27       	eor	r19, r19
    49e8:	44 27       	eor	r20, r20
    49ea:	50 78       	andi	r21, 0x80	; 128
    49ec:	20 c0       	rjmp	.+64     	; 0x4a2e <modf+0x5a>
    49ee:	b7 51       	subi	r27, 0x17	; 23
    49f0:	90 f4       	brcc	.+36     	; 0x4a16 <modf+0x42>
    49f2:	ab 2f       	mov	r26, r27
    49f4:	00 24       	eor	r0, r0
    49f6:	46 95       	lsr	r20
    49f8:	37 95       	ror	r19
    49fa:	27 95       	ror	r18
    49fc:	01 1c       	adc	r0, r1
    49fe:	a3 95       	inc	r26
    4a00:	d2 f3       	brmi	.-12     	; 0x49f6 <modf+0x22>
    4a02:	00 20       	and	r0, r0
    4a04:	71 f0       	breq	.+28     	; 0x4a22 <modf+0x4e>
    4a06:	22 0f       	add	r18, r18
    4a08:	33 1f       	adc	r19, r19
    4a0a:	44 1f       	adc	r20, r20
    4a0c:	b3 95       	inc	r27
    4a0e:	da f3       	brmi	.-10     	; 0x4a06 <modf+0x32>
    4a10:	0e d0       	rcall	.+28     	; 0x4a2e <modf+0x5a>
    4a12:	0c 94 64 21 	jmp	0x42c8	; 0x42c8 <__subsf3>
    4a16:	61 30       	cpi	r22, 0x01	; 1
    4a18:	71 05       	cpc	r23, r1
    4a1a:	a0 e8       	ldi	r26, 0x80	; 128
    4a1c:	8a 07       	cpc	r24, r26
    4a1e:	b9 46       	sbci	r27, 0x69	; 105
    4a20:	30 f4       	brcc	.+12     	; 0x4a2e <modf+0x5a>
    4a22:	9b 01       	movw	r18, r22
    4a24:	ac 01       	movw	r20, r24
    4a26:	66 27       	eor	r22, r22
    4a28:	77 27       	eor	r23, r23
    4a2a:	88 27       	eor	r24, r24
    4a2c:	90 78       	andi	r25, 0x80	; 128
    4a2e:	30 96       	adiw	r30, 0x00	; 0
    4a30:	21 f0       	breq	.+8      	; 0x4a3a <modf+0x66>
    4a32:	20 83       	st	Z, r18
    4a34:	31 83       	std	Z+1, r19	; 0x01
    4a36:	42 83       	std	Z+2, r20	; 0x02
    4a38:	53 83       	std	Z+3, r21	; 0x03
    4a3a:	08 95       	ret

00004a3c <__fp_mpack>:
__fp_mpack():
    4a3c:	9f 3f       	cpi	r25, 0xFF	; 255
    4a3e:	31 f0       	breq	.+12     	; 0x4a4c <__fp_mpack_finite+0xc>

00004a40 <__fp_mpack_finite>:
    4a40:	91 50       	subi	r25, 0x01	; 1
    4a42:	20 f4       	brcc	.+8      	; 0x4a4c <__fp_mpack_finite+0xc>
    4a44:	87 95       	ror	r24
    4a46:	77 95       	ror	r23
    4a48:	67 95       	ror	r22
    4a4a:	b7 95       	ror	r27
    4a4c:	88 0f       	add	r24, r24
    4a4e:	91 1d       	adc	r25, r1
    4a50:	96 95       	lsr	r25
    4a52:	87 95       	ror	r24
    4a54:	97 f9       	bld	r25, 7
    4a56:	08 95       	ret

00004a58 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    4a58:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    4a5a:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    4a5c:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    4a5e:	0e 94 95 25 	call	0x4b2a	; 0x4b2a <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    4a62:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    4a64:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    4a66:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    4a68:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    4a6a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    4a6c:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    4a6e:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    4a70:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    4a72:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    4a74:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    4a76:	08 95       	ret

00004a78 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    4a78:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    4a7a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    4a7c:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    4a7e:	07 c0       	rjmp	.+14     	; 0x4a8e <__udivmodhi4_ep>

00004a80 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    4a80:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    4a82:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    4a84:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    4a86:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    4a88:	10 f0       	brcs	.+4      	; 0x4a8e <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    4a8a:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    4a8c:	b7 0b       	sbc	r27, r23

00004a8e <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    4a8e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    4a90:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    4a92:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    4a94:	a9 f7       	brne	.-22     	; 0x4a80 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    4a96:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    4a98:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    4a9a:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    4a9c:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    4a9e:	08 95       	ret

00004aa0 <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    4aa0:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    4aa2:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    4aa4:	16 f4       	brtc	.+4      	; 0x4aaa <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    4aa6:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    4aa8:	07 d0       	rcall	.+14     	; 0x4ab8 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    4aaa:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    4aac:	09 d0       	rcall	.+18     	; 0x4ac0 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    4aae:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    4ab2:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    4ab4:	05 d0       	rcall	.+10     	; 0x4ac0 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    4ab6:	3e f4       	brtc	.+14     	; 0x4ac6 <__divmodhi4_exit>

00004ab8 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    4ab8:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    4aba:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    4abc:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    4abe:	08 95       	ret

00004ac0 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    4ac0:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    4ac2:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    4ac4:	7f 4f       	sbci	r23, 0xFF	; 255

00004ac6 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    4ac6:	08 95       	ret

00004ac8 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    4ac8:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    4aca:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    4acc:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    4ace:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    4ad0:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    4ad2:	0d c0       	rjmp	.+26     	; 0x4aee <__udivmodsi4_ep>

00004ad4 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    4ad4:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    4ad6:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    4ad8:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    4ada:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    4adc:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    4ade:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    4ae0:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    4ae2:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    4ae4:	20 f0       	brcs	.+8      	; 0x4aee <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    4ae6:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    4ae8:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    4aea:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    4aec:	f5 0b       	sbc	r31, r21

00004aee <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    4aee:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    4af0:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    4af2:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    4af4:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    4af6:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    4af8:	69 f7       	brne	.-38     	; 0x4ad4 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    4afa:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    4afc:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    4afe:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    4b00:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    4b02:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    4b04:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    4b06:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    4b08:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    4b0a:	08 95       	ret

00004b0c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    4b0c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    4b0e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    4b10:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    4b12:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    4b14:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    4b16:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    4b18:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    4b1a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    4b1c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    4b1e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    4b20:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    4b22:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    4b24:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    4b26:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    4b28:	08 95       	ret

00004b2a <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    4b2a:	0e 94 86 25 	call	0x4b0c	; 0x4b0c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    4b2e:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    4b30:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    4b32:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    4b34:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    4b36:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    4b38:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    4b3a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    4b3c:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    4b3e:	08 95       	ret

00004b40 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    4b40:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    4b42:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    4b44:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    4b46:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    4b48:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    4b4a:	09 94       	ijmp

00004b4c <malloc>:
malloc():
    4b4c:	0f 93       	push	r16
    4b4e:	1f 93       	push	r17
    4b50:	cf 93       	push	r28
    4b52:	df 93       	push	r29
    4b54:	82 30       	cpi	r24, 0x02	; 2
    4b56:	91 05       	cpc	r25, r1
    4b58:	10 f4       	brcc	.+4      	; 0x4b5e <malloc+0x12>
    4b5a:	82 e0       	ldi	r24, 0x02	; 2
    4b5c:	90 e0       	ldi	r25, 0x00	; 0
    4b5e:	e0 91 b1 06 	lds	r30, 0x06B1	; 0x8006b1 <__flp>
    4b62:	f0 91 b2 06 	lds	r31, 0x06B2	; 0x8006b2 <__flp+0x1>
    4b66:	30 e0       	ldi	r19, 0x00	; 0
    4b68:	20 e0       	ldi	r18, 0x00	; 0
    4b6a:	b0 e0       	ldi	r27, 0x00	; 0
    4b6c:	a0 e0       	ldi	r26, 0x00	; 0
    4b6e:	30 97       	sbiw	r30, 0x00	; 0
    4b70:	99 f4       	brne	.+38     	; 0x4b98 <malloc+0x4c>
    4b72:	21 15       	cp	r18, r1
    4b74:	31 05       	cpc	r19, r1
    4b76:	09 f4       	brne	.+2      	; 0x4b7a <malloc+0x2e>
    4b78:	4a c0       	rjmp	.+148    	; 0x4c0e <malloc+0xc2>
    4b7a:	28 1b       	sub	r18, r24
    4b7c:	39 0b       	sbc	r19, r25
    4b7e:	24 30       	cpi	r18, 0x04	; 4
    4b80:	31 05       	cpc	r19, r1
    4b82:	d8 f5       	brcc	.+118    	; 0x4bfa <malloc+0xae>
    4b84:	8a 81       	ldd	r24, Y+2	; 0x02
    4b86:	9b 81       	ldd	r25, Y+3	; 0x03
    4b88:	61 15       	cp	r22, r1
    4b8a:	71 05       	cpc	r23, r1
    4b8c:	89 f1       	breq	.+98     	; 0x4bf0 <malloc+0xa4>
    4b8e:	fb 01       	movw	r30, r22
    4b90:	93 83       	std	Z+3, r25	; 0x03
    4b92:	82 83       	std	Z+2, r24	; 0x02
    4b94:	fe 01       	movw	r30, r28
    4b96:	11 c0       	rjmp	.+34     	; 0x4bba <malloc+0x6e>
    4b98:	40 81       	ld	r20, Z
    4b9a:	51 81       	ldd	r21, Z+1	; 0x01
    4b9c:	02 81       	ldd	r16, Z+2	; 0x02
    4b9e:	13 81       	ldd	r17, Z+3	; 0x03
    4ba0:	48 17       	cp	r20, r24
    4ba2:	59 07       	cpc	r21, r25
    4ba4:	e0 f0       	brcs	.+56     	; 0x4bde <malloc+0x92>
    4ba6:	48 17       	cp	r20, r24
    4ba8:	59 07       	cpc	r21, r25
    4baa:	99 f4       	brne	.+38     	; 0x4bd2 <malloc+0x86>
    4bac:	10 97       	sbiw	r26, 0x00	; 0
    4bae:	61 f0       	breq	.+24     	; 0x4bc8 <malloc+0x7c>
    4bb0:	12 96       	adiw	r26, 0x02	; 2
    4bb2:	0c 93       	st	X, r16
    4bb4:	12 97       	sbiw	r26, 0x02	; 2
    4bb6:	13 96       	adiw	r26, 0x03	; 3
    4bb8:	1c 93       	st	X, r17
    4bba:	32 96       	adiw	r30, 0x02	; 2
    4bbc:	cf 01       	movw	r24, r30
    4bbe:	df 91       	pop	r29
    4bc0:	cf 91       	pop	r28
    4bc2:	1f 91       	pop	r17
    4bc4:	0f 91       	pop	r16
    4bc6:	08 95       	ret
    4bc8:	00 93 b1 06 	sts	0x06B1, r16	; 0x8006b1 <__flp>
    4bcc:	10 93 b2 06 	sts	0x06B2, r17	; 0x8006b2 <__flp+0x1>
    4bd0:	f4 cf       	rjmp	.-24     	; 0x4bba <malloc+0x6e>
    4bd2:	21 15       	cp	r18, r1
    4bd4:	31 05       	cpc	r19, r1
    4bd6:	51 f0       	breq	.+20     	; 0x4bec <malloc+0xa0>
    4bd8:	42 17       	cp	r20, r18
    4bda:	53 07       	cpc	r21, r19
    4bdc:	38 f0       	brcs	.+14     	; 0x4bec <malloc+0xa0>
    4bde:	a9 01       	movw	r20, r18
    4be0:	db 01       	movw	r26, r22
    4be2:	9a 01       	movw	r18, r20
    4be4:	bd 01       	movw	r22, r26
    4be6:	df 01       	movw	r26, r30
    4be8:	f8 01       	movw	r30, r16
    4bea:	c1 cf       	rjmp	.-126    	; 0x4b6e <malloc+0x22>
    4bec:	ef 01       	movw	r28, r30
    4bee:	f9 cf       	rjmp	.-14     	; 0x4be2 <malloc+0x96>
    4bf0:	90 93 b2 06 	sts	0x06B2, r25	; 0x8006b2 <__flp+0x1>
    4bf4:	80 93 b1 06 	sts	0x06B1, r24	; 0x8006b1 <__flp>
    4bf8:	cd cf       	rjmp	.-102    	; 0x4b94 <malloc+0x48>
    4bfa:	fe 01       	movw	r30, r28
    4bfc:	e2 0f       	add	r30, r18
    4bfe:	f3 1f       	adc	r31, r19
    4c00:	81 93       	st	Z+, r24
    4c02:	91 93       	st	Z+, r25
    4c04:	22 50       	subi	r18, 0x02	; 2
    4c06:	31 09       	sbc	r19, r1
    4c08:	39 83       	std	Y+1, r19	; 0x01
    4c0a:	28 83       	st	Y, r18
    4c0c:	d7 cf       	rjmp	.-82     	; 0x4bbc <malloc+0x70>
    4c0e:	20 91 af 06 	lds	r18, 0x06AF	; 0x8006af <__brkval>
    4c12:	30 91 b0 06 	lds	r19, 0x06B0	; 0x8006b0 <__brkval+0x1>
    4c16:	23 2b       	or	r18, r19
    4c18:	41 f4       	brne	.+16     	; 0x4c2a <malloc+0xde>
    4c1a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    4c1e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    4c22:	30 93 b0 06 	sts	0x06B0, r19	; 0x8006b0 <__brkval+0x1>
    4c26:	20 93 af 06 	sts	0x06AF, r18	; 0x8006af <__brkval>
    4c2a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    4c2e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    4c32:	21 15       	cp	r18, r1
    4c34:	31 05       	cpc	r19, r1
    4c36:	41 f4       	brne	.+16     	; 0x4c48 <malloc+0xfc>
    4c38:	2d b7       	in	r18, 0x3d	; 61
    4c3a:	3e b7       	in	r19, 0x3e	; 62
    4c3c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    4c40:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4c44:	24 1b       	sub	r18, r20
    4c46:	35 0b       	sbc	r19, r21
    4c48:	e0 91 af 06 	lds	r30, 0x06AF	; 0x8006af <__brkval>
    4c4c:	f0 91 b0 06 	lds	r31, 0x06B0	; 0x8006b0 <__brkval+0x1>
    4c50:	e2 17       	cp	r30, r18
    4c52:	f3 07       	cpc	r31, r19
    4c54:	a0 f4       	brcc	.+40     	; 0x4c7e <malloc+0x132>
    4c56:	2e 1b       	sub	r18, r30
    4c58:	3f 0b       	sbc	r19, r31
    4c5a:	28 17       	cp	r18, r24
    4c5c:	39 07       	cpc	r19, r25
    4c5e:	78 f0       	brcs	.+30     	; 0x4c7e <malloc+0x132>
    4c60:	ac 01       	movw	r20, r24
    4c62:	4e 5f       	subi	r20, 0xFE	; 254
    4c64:	5f 4f       	sbci	r21, 0xFF	; 255
    4c66:	24 17       	cp	r18, r20
    4c68:	35 07       	cpc	r19, r21
    4c6a:	48 f0       	brcs	.+18     	; 0x4c7e <malloc+0x132>
    4c6c:	4e 0f       	add	r20, r30
    4c6e:	5f 1f       	adc	r21, r31
    4c70:	50 93 b0 06 	sts	0x06B0, r21	; 0x8006b0 <__brkval+0x1>
    4c74:	40 93 af 06 	sts	0x06AF, r20	; 0x8006af <__brkval>
    4c78:	81 93       	st	Z+, r24
    4c7a:	91 93       	st	Z+, r25
    4c7c:	9f cf       	rjmp	.-194    	; 0x4bbc <malloc+0x70>
    4c7e:	f0 e0       	ldi	r31, 0x00	; 0
    4c80:	e0 e0       	ldi	r30, 0x00	; 0
    4c82:	9c cf       	rjmp	.-200    	; 0x4bbc <malloc+0x70>

00004c84 <free>:
free():
    4c84:	cf 93       	push	r28
    4c86:	df 93       	push	r29
    4c88:	00 97       	sbiw	r24, 0x00	; 0
    4c8a:	e9 f0       	breq	.+58     	; 0x4cc6 <free+0x42>
    4c8c:	fc 01       	movw	r30, r24
    4c8e:	32 97       	sbiw	r30, 0x02	; 2
    4c90:	13 82       	std	Z+3, r1	; 0x03
    4c92:	12 82       	std	Z+2, r1	; 0x02
    4c94:	a0 91 b1 06 	lds	r26, 0x06B1	; 0x8006b1 <__flp>
    4c98:	b0 91 b2 06 	lds	r27, 0x06B2	; 0x8006b2 <__flp+0x1>
    4c9c:	ed 01       	movw	r28, r26
    4c9e:	30 e0       	ldi	r19, 0x00	; 0
    4ca0:	20 e0       	ldi	r18, 0x00	; 0
    4ca2:	10 97       	sbiw	r26, 0x00	; 0
    4ca4:	a1 f4       	brne	.+40     	; 0x4cce <free+0x4a>
    4ca6:	20 81       	ld	r18, Z
    4ca8:	31 81       	ldd	r19, Z+1	; 0x01
    4caa:	82 0f       	add	r24, r18
    4cac:	93 1f       	adc	r25, r19
    4cae:	20 91 af 06 	lds	r18, 0x06AF	; 0x8006af <__brkval>
    4cb2:	30 91 b0 06 	lds	r19, 0x06B0	; 0x8006b0 <__brkval+0x1>
    4cb6:	28 17       	cp	r18, r24
    4cb8:	39 07       	cpc	r19, r25
    4cba:	09 f0       	breq	.+2      	; 0x4cbe <free+0x3a>
    4cbc:	61 c0       	rjmp	.+194    	; 0x4d80 <free+0xfc>
    4cbe:	f0 93 b0 06 	sts	0x06B0, r31	; 0x8006b0 <__brkval+0x1>
    4cc2:	e0 93 af 06 	sts	0x06AF, r30	; 0x8006af <__brkval>
    4cc6:	df 91       	pop	r29
    4cc8:	cf 91       	pop	r28
    4cca:	08 95       	ret
    4ccc:	ea 01       	movw	r28, r20
    4cce:	ce 17       	cp	r28, r30
    4cd0:	df 07       	cpc	r29, r31
    4cd2:	e8 f5       	brcc	.+122    	; 0x4d4e <free+0xca>
    4cd4:	4a 81       	ldd	r20, Y+2	; 0x02
    4cd6:	5b 81       	ldd	r21, Y+3	; 0x03
    4cd8:	9e 01       	movw	r18, r28
    4cda:	41 15       	cp	r20, r1
    4cdc:	51 05       	cpc	r21, r1
    4cde:	b1 f7       	brne	.-20     	; 0x4ccc <free+0x48>
    4ce0:	e9 01       	movw	r28, r18
    4ce2:	fb 83       	std	Y+3, r31	; 0x03
    4ce4:	ea 83       	std	Y+2, r30	; 0x02
    4ce6:	49 91       	ld	r20, Y+
    4ce8:	59 91       	ld	r21, Y+
    4cea:	c4 0f       	add	r28, r20
    4cec:	d5 1f       	adc	r29, r21
    4cee:	ec 17       	cp	r30, r28
    4cf0:	fd 07       	cpc	r31, r29
    4cf2:	61 f4       	brne	.+24     	; 0x4d0c <free+0x88>
    4cf4:	80 81       	ld	r24, Z
    4cf6:	91 81       	ldd	r25, Z+1	; 0x01
    4cf8:	02 96       	adiw	r24, 0x02	; 2
    4cfa:	84 0f       	add	r24, r20
    4cfc:	95 1f       	adc	r25, r21
    4cfe:	e9 01       	movw	r28, r18
    4d00:	99 83       	std	Y+1, r25	; 0x01
    4d02:	88 83       	st	Y, r24
    4d04:	82 81       	ldd	r24, Z+2	; 0x02
    4d06:	93 81       	ldd	r25, Z+3	; 0x03
    4d08:	9b 83       	std	Y+3, r25	; 0x03
    4d0a:	8a 83       	std	Y+2, r24	; 0x02
    4d0c:	f0 e0       	ldi	r31, 0x00	; 0
    4d0e:	e0 e0       	ldi	r30, 0x00	; 0
    4d10:	12 96       	adiw	r26, 0x02	; 2
    4d12:	8d 91       	ld	r24, X+
    4d14:	9c 91       	ld	r25, X
    4d16:	13 97       	sbiw	r26, 0x03	; 3
    4d18:	00 97       	sbiw	r24, 0x00	; 0
    4d1a:	b9 f5       	brne	.+110    	; 0x4d8a <free+0x106>
    4d1c:	2d 91       	ld	r18, X+
    4d1e:	3c 91       	ld	r19, X
    4d20:	11 97       	sbiw	r26, 0x01	; 1
    4d22:	cd 01       	movw	r24, r26
    4d24:	02 96       	adiw	r24, 0x02	; 2
    4d26:	82 0f       	add	r24, r18
    4d28:	93 1f       	adc	r25, r19
    4d2a:	20 91 af 06 	lds	r18, 0x06AF	; 0x8006af <__brkval>
    4d2e:	30 91 b0 06 	lds	r19, 0x06B0	; 0x8006b0 <__brkval+0x1>
    4d32:	28 17       	cp	r18, r24
    4d34:	39 07       	cpc	r19, r25
    4d36:	39 f6       	brne	.-114    	; 0x4cc6 <free+0x42>
    4d38:	30 97       	sbiw	r30, 0x00	; 0
    4d3a:	51 f5       	brne	.+84     	; 0x4d90 <free+0x10c>
    4d3c:	10 92 b2 06 	sts	0x06B2, r1	; 0x8006b2 <__flp+0x1>
    4d40:	10 92 b1 06 	sts	0x06B1, r1	; 0x8006b1 <__flp>
    4d44:	b0 93 b0 06 	sts	0x06B0, r27	; 0x8006b0 <__brkval+0x1>
    4d48:	a0 93 af 06 	sts	0x06AF, r26	; 0x8006af <__brkval>
    4d4c:	bc cf       	rjmp	.-136    	; 0x4cc6 <free+0x42>
    4d4e:	d3 83       	std	Z+3, r29	; 0x03
    4d50:	c2 83       	std	Z+2, r28	; 0x02
    4d52:	40 81       	ld	r20, Z
    4d54:	51 81       	ldd	r21, Z+1	; 0x01
    4d56:	84 0f       	add	r24, r20
    4d58:	95 1f       	adc	r25, r21
    4d5a:	c8 17       	cp	r28, r24
    4d5c:	d9 07       	cpc	r29, r25
    4d5e:	61 f4       	brne	.+24     	; 0x4d78 <free+0xf4>
    4d60:	4e 5f       	subi	r20, 0xFE	; 254
    4d62:	5f 4f       	sbci	r21, 0xFF	; 255
    4d64:	88 81       	ld	r24, Y
    4d66:	99 81       	ldd	r25, Y+1	; 0x01
    4d68:	48 0f       	add	r20, r24
    4d6a:	59 1f       	adc	r21, r25
    4d6c:	51 83       	std	Z+1, r21	; 0x01
    4d6e:	40 83       	st	Z, r20
    4d70:	8a 81       	ldd	r24, Y+2	; 0x02
    4d72:	9b 81       	ldd	r25, Y+3	; 0x03
    4d74:	93 83       	std	Z+3, r25	; 0x03
    4d76:	82 83       	std	Z+2, r24	; 0x02
    4d78:	21 15       	cp	r18, r1
    4d7a:	31 05       	cpc	r19, r1
    4d7c:	09 f0       	breq	.+2      	; 0x4d80 <free+0xfc>
    4d7e:	b0 cf       	rjmp	.-160    	; 0x4ce0 <free+0x5c>
    4d80:	f0 93 b2 06 	sts	0x06B2, r31	; 0x8006b2 <__flp+0x1>
    4d84:	e0 93 b1 06 	sts	0x06B1, r30	; 0x8006b1 <__flp>
    4d88:	9e cf       	rjmp	.-196    	; 0x4cc6 <free+0x42>
    4d8a:	fd 01       	movw	r30, r26
    4d8c:	dc 01       	movw	r26, r24
    4d8e:	c0 cf       	rjmp	.-128    	; 0x4d10 <free+0x8c>
    4d90:	13 82       	std	Z+3, r1	; 0x03
    4d92:	12 82       	std	Z+2, r1	; 0x02
    4d94:	d7 cf       	rjmp	.-82     	; 0x4d44 <free+0xc0>

00004d96 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    4d96:	f8 94       	cli

00004d98 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    4d98:	ff cf       	rjmp	.-2      	; 0x4d98 <__stop_program>
